
  #vlans: For VLAN and VXLAN this is a list of One.  For micro_seg and qinq this is a list of Two.
  #tenant: (default: local.first_tenant) — The name of the tenant for the Application EPG.
  #bd_schema: (default: epg schema) — Name of the Schema containing the Bridge Domain.
  #bd_template: (default: epg template) — The Template name containing the Bridge Domain.
  #schema: (default: epg schema) — Name of the Schema containing the Contract.
  #template: (default: epg template) — The Template name containing the Contract.
  #schema: (default: local.first_tenant) — Schema Name.
  #sites: (default: local.first_tenant) — List of Site Names to assign site specific attributes.
  #template: (default: local.first_tenant) — The Template name to create the object within.
  #  * color_tag: Specifies the color of a policy label.
  #    - alice-blue
  #    - antique-white
  #    - aqua
  #    - aquamarine
  #    - azure
  #    - beige
  #    - bisque
  #    - black
  #    - blanched-almond
  #    - blue
  #    - blue-violet
  #    - brown
  #    - burlywood
  #    - cadet-blue
  #    - chartreuse
  #    - chocolate
  #    - coral
  #    - cornflower-blue
  #    - cornsilk
  #    - crimson
  #    - cyan
  #    - dark-blue
  #    - dark-cyan
  #    - dark-goldenrod
  #    - dark-gray
  #    - dark-green
  #    - dark-khaki
  #    - dark-magenta
  #    - dark-olive-green
  #    - dark-orange
  #    - dark-orchid
  #    - dark-red
  #    - dark-salmon
  #    - dark-sea-green
  #    - dark-slate-blue
  #    - dark-slate-gray
  #    - dark-turquoise
  #    - dark-violet
  #    - deep-pink
  #    - deep-sky-blue
  #    - dim-gray
  #    - dodger-blue
  #    - fire-brick
  #    - floral-white
  #    - forest-green
  #    - fuchsia
  #    - gainsboro
  #    - ghost-white
  #    - gold
  #    - goldenrod
  #    - gray
  #    - green
  #    - green-yellow
  #    - honeydew
  #    - hot-pink
  #    - indian-red
  #    - indigo
  #    - ivory
  #    - khaki
  #    - lavender
  #    - lavender-blush
  #    - lawn-green
  #    - lemon-chiffon
  #    - light-blue
  #    - light-coral
  #    - light-cyan
  #    - light-goldenrod-yellow
  #    - light-gray
  #    - light-green
  #    - light-pink
  #    - light-salmon
  #    - light-sea-green
  #    - light-sky-blue
  #    - light-slate-gray
  #    - light-steel-blue
  #    - light-yellow
  #    - lime
  #    - lime-green
  #    - linen
  #    - magenta
  #    - maroon
  #    - medium-aquamarine
  #    - medium-blue
  #    - medium-orchid
  #    - medium-purple
  #    - medium-sea-green
  #    - medium-slate-blue
  #    - medium-spring-green
  #    - medium-turquoise
  #    - medium-violet-red
  #    - midnight-blue
  #    - mint-cream
  #    - misty-rose
  #    - moccasin
  #    - navajo-white
  #    - navy
  #    - old-lace
  #    - olive
  #    - olive-drab
  #    - orange
  #    - orange-red
  #    - orchid
  #    - pale-goldenrod
  #    - pale-green
  #    - pale-turquoise
  #    - pale-violet-red
  #    - papaya-whip
  #    - peachpuff
  #    - peru
  #    - pink
  #    - plum
  #    - powder-blue
  #    - purple
  #    - red
  #    - rosy-brown
  #    - royal-blue
  #    - saddle-brown
  #    - salmon
  #    - sandy-brown
  #    - sea-green
  #    - seashell
  #    - sienna
  #    - silver
  #    - sky-blue
  #    - slate-blue
  #    - slate-gray
  #    - snow
  #    - spring-green
  #    - steel-blue
  #    - tan
  #    - teal
  #    - thistle
  #    - tomato
  #    - turquoise
  #    - violet
  #    - wheat
  #    - white
  #    - white-smoke
  #    - yellow
  #    - yellow-green: (default)

  #    - target_dscp: The target differentiated services code point (DSCP). The options are as follows:
  #      * AF11 — low drop Priority
  #      * AF12 — medium drop Priority
  #      * AF13 — high drop Priority
  #      * AF21 — low drop Immediate
  #      * AF22 — medium drop Immediate
  #      * AF23 — high drop Immediate
  #      * AF31 — low drop Flash
  #      * AF32 — medium drop Flash
  #      * AF33 — high drop Flash
  #      * AF41 — low drop—Flash Override
  #      * AF42 — medium drop Flash Override
  #      * AF43 — high drop Flash Override
  #      * CS0 — class of service level 0
  #      * CS1 — class of service level 1
  #      * CS2 — class of service level 2
  #      * CS3 — class of service level 3
  #      * CS4 — class of service level 4
  #      * CS5 — class of service level 5
  #      * CS6 — class of service level 6
  #      * CS7 — class of service level 7
  #      * EF — Expedited Forwarding Critical
  #      * VA — Voice Admit
  #      * unspecified: (default)
  #scope: The network visibility of the subnet. 
  #policy_source_tenant: Name of the tenant that contains the policies to assign to the Bridge Domain.  By Default this is var.tenant.
  #tenant: The Name of the Tenant to create the Bridge Domain within.
  #schema: Schema Name.
  #sites: List of Site Names to assign site specific attributes.
  #template: The Template name to create the object within.
  #contract_type: 'Select the Contract Type.  Note: intra_epg and taboo are not valid for target_type VRF.  Options are:\n  * oob\n  * standard\n  * taboo'
  #scope: 'The Scope of the contract, if the contract is of Type Standard or Out-of-Band.  Options are:\n  * application-profile\n  * context: (default)\n  * global\n  * tenant\n  * Note:  Ignored for Taboo Contracts.'
  #  * tenant: (default: local.first_tenant) — The name of the tenant to for the Application EPG.
  #label_match_criteria: The Match criteria can be:\n  * All\n  * AtleastOne: (default)\n  * AtmostOne\n  * None
  #route_control_profiles: Enter the name and direction of the route control profile.
  #direction: 'The direction of control.  Options are:\n  * export\n  * import'
  #route_map: The Name of a Route Map for import and export route control
  #global_alias: The Global Alias feature simplifies querying a specific object in the API. When querying an object, you must specify a unique object identifier, which is typically the object's DN. As an alternative, this feature allows you to assign to an object a label that is unique within the fabric.
  # mac_address: MAC address for L3out floating SVI object.
  # mode: 'VLAN tagging mode for L3out floating SVI object. Allowed values are:\n  * native\n  * regular: (default)\n  * untagged'
  # Argument Reference
  # addr: Peer address for L3out floating SVI object. Default value: '0.0.0.0'.
  # annotation: Annotation for L3out floating SVI object.
  # autostate: Autostate for L3out floating SVI object. Allowed values are 'disabled' and 'enabled'. Default value is 'disabled'.
  # description: Description for L3out floating SVI object.
  # encap: Port encapsulation for L3out floating SVI object.
  # encap_scope: Encap scope for L3out floating SVI object. Allowed values are 'ctx' and 'local'. Default value is 'local'.
  # if_inst_t
  # ipv6_dad: IPv6 dad for L3out floating SVI object. Allowed values are:\n  * disabled\n  * enabled: (default)
  # ll_addr: Link local address for L3out floating SVI object. Default value: '::'.
  # logical_interface_profile_dn: Distinguished name of parent logical interface profile object.
  # mac: MAC address for L3out floating SVI object.
  # mode: VLAN tagging mode for L3out floating SVI object. Allowed values are:\n  * native\n  * regular: (default)\n  * untagged
  # mtu: Administrative MTU port on the aggregated interface for L3out floating SVI object. Range of allowed values is '576' to '9216'. Default value is 'inherit'.
  # node_dn: Distinguished name of the node for L3out floating SVI object.
  # relation_l3ext_rs_dyn_path_att: Relation to class infraDomP. Cardinality - N_TO_M. Type - Set of String.
  # target_dscp: Target DSCP for L3out floating SVI object. Allowed values are 'AF11', 'AF12', 'AF13', 'AF21', 'AF22', 'AF23', 'AF31', 'AF32', 'AF33', 'AF41', 'AF42', 'AF43', 'CS0', 'CS1', 'CS2', 'CS3', 'CS4', 'CS5', 'CS6', 'CS7', 'EF', 'VA' and 'unspecified'. Default value is 'unspecified'.
  # hold_interval: A time period during which new endpoint learn events will not be honored. This interval is triggered when the maximum endpoint move frequency is exceeded. Allowed value range is 5-65535. Default value is 300.
  # hold_interval: Sets the HSRP extended hold timer, in milliseconds, for both IPv4 and IPv6 groups. The timer range is from 750 to 255000. Default value is 10000.
  # hello_interval: The interval between hello packets that OSPF sends on the interface. Note that the smaller the hello interval, the faster topological changes will be detected, but more routing traffic will ensue. This value must be the same for all routers and access servers on a specific network. Allowed value range is 1-65535.  Default value is 10.
  # priority: The OSPF interface priority used to determine the designated router (DR) on a specific network. The router with the highest OSPF priority on a segment will become the DR for that segment. The same process is repeated for the backup designated router (BDR). In the case of a tie, the router with the highest RID will win. The default for the interface OSPF priority is one. Remember that the DR and BDR concepts are per multiaccess segment. Allowed range is 0-255. Default value is 1.
    * preference: "Administrative preference value for this route. Range: '1' to '255' or 'unspecified'. Default value: 'unspecified'."
  aggregate: When aggregation is not set, the subnets are matched exactly. For example, if 11.1.0.0/16 is the subnet, then the policy will not apply to a 11.1.1.0/24 route but it will apply only if the route is 11.1.0.0/16. However, to avoid a tedious and error prone task of defining all the subnets one by one, aggregation can be used aggregate a set of subnets into one export, import or shared routes policy. At this time, only 0/0 subnets can be aggregated. When 0/0 is specified with aggregation, all the routes are imported, exported, or shared with (leaked to) a different VRF.
      - ospf_interface_profile = optional(list(object(
        * description           = optional(string)
        * authentication_type   = optional(string)
        * name                  = string
        * ospf_key              = optional(number)
        * ospf_interface_policy = optional(string)
        * policy_source_tenant  = optional(string)
      - primary_preferred_address = optional(string)
      - qos_class                 = optional(string)
      - secondary_addresses       = optional(list(string))
      - svi_addresses = optional(list(object(
        * link_local_address        = optional(string)
        * primary_preferred_address = string
        * secondary_addresses       = optional(list(string))
        * side                      = string
  nodes: List of Nodes to attach to the interface profile.  One Node ID for routed and sub-interfaces.  Two Node ID's for VPC's.
  l3out: The name of the L3Out to assign this Node Profile to.
  name: The name of the Node Profile.
  nodes: List of Nodes and their Router ID to assign to this Node Profile.
  pod_id: Identifier of the pod where the node is located.  Unless you are configuring Multi-Pod, this should always be 1.
  interface_profiles = optional(list(object(
  arp_policy = optional(string)
  auto_state = optional(string)
  local_as_number_config = optional(string)
  peer_controls = optional(list(object(
  bidirectional_forwarding_detection = optional(bool)
  disable_connected_check            = optional(bool)
  peer_level           = string
  private_as_control = optional(list(object(
  remove_all_private_as            = optional(bool)
  remove_private_as                = optional(bool)
  replace_private_as_with_local_as = optional(bool)
  route_control_profiles = optional(list(object(
  direction = string
  route_map = string
  data_plane_policing_egress  = optional(string)
  data_plane_policing_ingress = optional(string)
  encap_scope                 = optional(string)
  encap_vlan                  = optional(number)
  contract_exception_tag: Contracts between EPGs are enhanced to include exceptions to subjects or contracts. This enables a subset of EPGs to be excluded in contract filtering. For example, a provider EPG can communicate with all consumer EPGs except those that match criteria configured in a Subject Exception in the contract governing their communication.  Assign a Tag Attribute to the EPG.
  contracts: List of Contracts & Attributes to assign to the External EPG.
  contract_type: 'The Type of Contract to apply.  Options are:\n  - consumed: (default)\n  - contract_interface\n  - intra_epg\n  - provided\n  - taboo'
  schema: The Schema name that contains the Contract.  If Undefined then the L3Out Schema will be used.
  template: The Template name that contains the Contract.  If Undefined then the L3Out Template will be used.
  tenant: The Name of the Tenant for the Contract.  If Undefined then the L3Out Tenant will be used.
  epg_type: 'The type of External EPG to create.  Options are:\n  * oob\n  * standard: (default)'
  subnets: List of Subnets to add to the External EPG.  Note each Subnet List of Object can contain multiple Subnets when the same settings will apply.
  subnets: 'List of Subnets to add to the External EPG.  In example: ['0.0.0.0/1','128.0.0.0/1']'
  pim: ** Not supported with VPC L3Out Node Profiles.  Enables or disables PIM (multicast) on the L3Out.  Enabling PIM is the equivalent of navigating to tenant > Networking > VRFs > vrf > Multicast and selecting this L3Out in the Multicast window.  Default is false.
  pimv6: ** Not supported with VPC L3Out Node Profiles.  Enables or disables PIMv6 (multicast) on the L3Out.  Enabling PIMv6 is the equivalent of navigating to tenant > Networking > VRFs > vrf > Multicast IPv6 and selecting this L3Out in the Multicast IPv6 window.  Default is false.
  route_map: Name of the Route Map to assign.
  vrf: The name of the VRF for the L3Out.
  admin_state: 'Administrative state of the object BFD Interface Policy. Allowed values are:\n  * disabled\n  * enabled: (default)'
  action: 'Action when the maximum prefix limit is reached for BGP peer prefix object. Allowed values are:\n  * log\n  * reject\n  * restart: (default)\n  * shut'
  epg_type: 'The Type of EPG to assign to the DHCP relay Provider.  Allowed values are:\n  * application_epg: (default)\n  * external_epg'
  l3out: (required if epg_type is external_epg) — Name of parent L3Out object.
  tenant: Name of parent Tenant object.
  mode: 'DHCP relay policy mode. Allowed Values are:\n  * visible: (default)\n  * not-visible'
  type: 'Type of authentication.  Options are:\n  * md5_authentication\n  * simple_authentication'
  initial_spf_scheduled_delay_interval        = 200
  lsa_threshold                               = 75
  maximum_lsa_reset_interval                  = 10
  maximum_lsa_sleep_count                     = 5
  maximum_lsa_sleep_interval                  = 5
  maximum_number_of_not_self_generated_lsas   = 20000
  minimum_hold_time_between_spf_calculations  = 1000
  minimum_interval_between_arrival_of_a_lsa   = 1000
  maximum_wait_time_between_spf_calculations  = 5000
    * rules: These are the Match Rules and their Attributes.  Details about attributes for each type are below:
      - type: Type of Match Rule.  Options are:
        * match_community or match_regex_community: These Rule(s) Attributes as follows:
          - community       = '<community_value>' # **Required
          - community_type  = 'regular'           # Options are regular and extended
          - description     = ''                  # Optional
          - regex           = '<regex_value>'     # Required for match_regex_community type.
        * match_prefix: Attributes as follows:
          - greater_than  = <value>              # Optional
          - less_than     = <value>              # Optional
          - network       = '<network>/<prefix>' # Required
    * rules: These are the Set Rules and their Attributes.  Details about attributes for each type are below:
      - type: Type of Set Rule.  Options are:
        * additional_communities or set_communities: These Rule(s) Attributes as follows:
          - **Note: Only one community can be added to the set_community type.
          - communities = [
              {
                community    = '<community_value>' # **Required
                description  = ''                  # Optional with type additional_communities
                set_criteria = 'append'            # options are append, none, replace
              }
            ]
        * multipath: The multipath type doesn't have any attributes but you must also add set_next_hop_unchanged.
        * set_as_path: Attributes as follows:
          - asns          = [1, 2, 3]     # List of ASN's to add when criteria is set to 'prepend'
          - criteria      = 'prepend'     # Options are prepend or prepend-last-as
          - last_as_count = 0             # The number of times to prepend the last-asn when criteria is set to prepend-last-as
        * set_dampening: Attributes as follows:
          - half-life         = 15   # Range is 1-60
          - max_suppress_time = 60   # Range is 1-255
          - reuse_limit       = 750  # Range is 1-20000
          - suppress_limit    = 2000 # Range is 1-20000
        * set_metric: Attributes as follows:
          - metric = 1 # The Minimum Metric is 1
        * set_metric_type: Attributes as follows:
          - metric_type = 'ospf-type1' # Options are ospf-type1 and ospf-type2
        * set_next_hop: Attributes as follows:
          - address = '198.18.0.1' # The Next Hop IP Address
        * set_next_hop_unchanged: This rule doesn't have any attributes.
        * set_preference: Attributes as follows:
          - preference = 100 # Assign Route Preference to the Rule
        * set_route_tag: Attributes as follows:
          - route_tag = 1 # Tag to Assign to Routes
        * weight: Attributes as follows:
          - address = 0 # Weight to assign to routes
  subnet_control: 
  description: Description to add to the Object.  The description can be up to 128 characters.
  graceful_restart_helper: Graceful restart enabled or helper only for OSPF timers object. Default is false.
^(([a-fA-F]|[a-fA-F][a-fA-F0-9\\-]*[a-fA-F0-9])\\.)*([A-Fa-f]|[A-Fa-f][A-Fa-f0-9\\-]*[A-Fa-f0-9])$|^(?:(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){6})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:::(?:(?:(?:[0-9a-fA-F]{1,4})):){5})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){4})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,1}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){3})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,2}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){2})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,3}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:[0-9a-fA-F]{1,4})):)(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,4}(?:(?:[0-9a-fA-F]{1,4})))?::)(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,5}(?:(?:[0-9a-fA-F]{1,4})))?::)(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,6}(?:(?:[0-9a-fA-F]{1,4})))?::)))))$



^(([1-9]|[1-9][0-9]{1}|1[0-9]{2}|2[0-1][0-9]|22[0-3])\\.)(([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){2}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$


^(([a-fA-F]|[a-fA-F][a-fA-F0-9\\-]*[a-fA-F0-9])\\.)*([A-Fa-f]|[A-Fa-f][A-Fa-f0-9\\-]*[A-Fa-f0-9])$|^(?:(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){6})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:::(?:(?:(?:[0-9a-fA-F]{1,4})):){5})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){4})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,1}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){3})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,2}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){2})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,3}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:[0-9a-fA-F]{1,4})):)(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,4}(?:(?:[0-9a-fA-F]{1,4})))?::)(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,5}(?:(?:[0-9a-fA-F]{1,4})))?::)(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,6}(?:(?:[0-9a-fA-F]{1,4})))?::))))/([1-9]|[1-9][0-9]|1[0-1][0-9]|12[0-7])$
^(([a-fA-F]|[a-fA-F][a-fA-F0-9\\-]*[a-fA-F0-9])\\.)*([A-Fa-f]|[A-Fa-f][A-Fa-f0-9\\-]*[A-Fa-f0-9])$|^(?:(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){6})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:::(?:(?:(?:[0-9a-fA-F]{1,4})):){5})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){4})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,1}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){3})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,2}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){2})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,3}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:[0-9a-fA-F]{1,4})):)(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,4}(?:(?:[0-9a-fA-F]{1,4})))?::)(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,5}(?:(?:[0-9a-fA-F]{1,4})))?::)(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,6}(?:(?:[0-9a-fA-F]{1,4})))?::))))$