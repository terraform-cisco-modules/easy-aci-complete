{
    "$schema": "http://json-schema.org/draft-06/schema#",
    "$ref": "#/definitions/TenantsWelcome",
    "definitions": {
        "TenantsWelcome": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "tenants": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "Required Attributes are:\n  * name\n\nOptional Attributes are:\n  * alias\n  * annotation\n  * annotations\n  * create\n  * description\n  * global_alias\n  * monitoring_policy\n  * policy_tenant\n\nIf this is for Nexus Dashboard Orchestrator it requires:\n  * ndo\nAPI Information:\n  * Class: fvTenant\n  * DN: Distinguished Name: 'uni/tn-{tenant}'\nGUI Location:\n  * Tenants",
                    "items": {
                        "$ref": "#/definitions/Tenants"
                    },
                    "title": "tenants"
                }
            },
            "required": [
                "tenants"
            ],
            "title": "Tenants YAML Schema."
        },
        "Tenants": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "alias": {
                    "$ref": "#/definitions/Tenants:Alias"
                },
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "annotations": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "(APIC Only) You can add arbitrary key:value pairs of metadata to an object as annotations (tagAnnotation). Annotations are provided for the user's custom purposes, such as descriptions, markers for personal scripting or API calls, or flags for monitoring tools or orchestration applications such as Cisco Multi-Site Orchestrator (MSO).",
                    "items": {
                        "$ref": "#/definitions/Tenants:Annotations"
                    },
                    "title": "annotations - tagAnnotation"
                },
                "apics_inband_mgmt_addresses": {
                    "$ref": "#/definitions/Tenants:ApicInbandMgmtAddresses"
                },
                "application_profiles": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "Required Attributes are:\n  * name\n\nOptional Attributes are:\n  * alias\n  * annotation\n  * annotations\n  * application_epgs\n  * create\n  * description\n  * global_alias\n  * monitoring_policy\n  * qos_class\n\nIf this is for Nexus Dashboard Orchestrator it requires:\n  * ndo\nAPI Information:\n  * Class: fvAp\n  * DN: Distinguished Name: 'uni/tn-{tenant}/ap-{application_profile}'\nGUI Location:\n  * Tenants -> Application Profiles.",
                    "items": {
                        "$ref": "#/definitions/Tenants:ApplicationProfiles"
                    },
                    "title": "application_profiles"
                },
                "contracts": {
                    "$ref": "#/definitions/Tenants:Contracts"
                },
                "create": {
                    "$ref": "#/definitions/Tenants:Create"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "global_alias": {
                    "$ref": "#/definitions/Tenants:GlobalAlias"
                },
                "monitoring_policy": {
                    "$ref": "#/definitions/Tenants:MonitoringPolicy"
                },
                "name": {
                    "$ref": "#/definitions/Tenants:Name"
                },
                "policy_tenant": {
                    "type": "string",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "policy_tenant"
                },
                "networking": {
                    "$ref": "#/definitions/Tenants:Networking"
                },
                "ndo": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "",
                    "$ref": "#/definitions/Tenants:Ndo"
                },
                "policies": {
                    "$ref": "#/definitions/Tenants:Policies"
                }
            },
            "required": [
                "name"
            ],
            "title": ""
        },
        "Tenants:Alias": {
            "type": "string",
            "description": "(APIC Only) The Name Alias feature (or simply 'Alias' where the setting appears in the GUI) changes the displayed name of objects in the APIC GUI. While the underlying object name cannot be changed, the administrator can override the displayed name by entering the desired name in the Alias field of the object properties menu. In the GUI, the alias name then appears along with the actual object name in parentheses, as name_alias (object_name).",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9_\\.:-]+$",
            "title": "alias"
        },
        "Tenants:Annotation": {
            "type": "string",
            "description": "(APIC Only) An annotation will mark an Object in the GUI with a small blue circle, signifying that it has been modified by  an external source/tool.  Like Nexus Dashboard Orchestrator or in this instance Terraform.",
            "minLength": 1,
            "maxLength": 128,
            "pattern": "^[a-zA-Z0-9\\\\!#$%()*,-\\./:;@ _{|}~?&+]+$",
            "title": "annotation"
        },
        "Tenants:Annotations": {
            "type": "object",
            "additionalProperties": false,
            "description": "(APIC Only) You can add arbitrary key:value pairs of metadata to an object as annotations (tagAnnotation). Annotations are provided for the user's custom purposes, such as descriptions, markers for personal scripting or API calls, or flags for monitoring tools or orchestration applications such as Cisco Multi-Site Orchestrator (MSO).",
            "properties": {
                "key": {
                    "type": "string",
                    "default": "key_name",
                    "description": "Annotation Key Name.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "key"
                },
                "value": {
                    "type": "string",
                    "default": "key_value",
                    "description": "Annotation Key Value.",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "value"
                }
            },
            "required": [
                "key",
                "value"
            ],
            "title": "annotations - Annotations to Apply to EPG's, Bridge Domains, and other Objects"
        },
        "Tenants:ApicInbandMgmtAddresses": {
            "type": "object",
            "additionalProperties": false,
            "description": "Attributes are:\n  * ipv4_address\n  * ipv4_gateway\n  * ipv6_address\n  * ipv6_gateway\n  * management_epg\n  * node_id\n  * pod_id\nAPI Information:\n  * Classes: mgmtRsInBStNode or mgmtRsOoBStNode\n  * Distinguished Names:\n    - 'uni/tn-mgmt/mgmtp-default/inb-{management_epg}/rsinBStNode-[topology/pod-{pod_id}/node-{node_id}]'\n    - 'uni/tn-mgmt/mgmtp-default/oob-{management_epg}/rsooBStNode-[topology/pod-{pod_id}/node-{node_id}]'\nGUI Location:\n  * Tenants > mgmt > Node Management Addresses > Static Node Management Addresses",
            "properties": {
                "ipv4_address": {
                    "type": "string",
                    "default": "198.18.1.10/24",
                    "description": "IPv4 Address/Prefix of the Inband Management EPG.",
                    "minLength": 7,
                    "maxLength": 18,
                    "pattern": "^(([1-9]|[1-9][0-9]{1}|1[0-9]{2}|2[0-1][0-9]|22[0-3])\\.)(([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){2}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([1-9]|[1-2][\\d]|3[0-1])$",
                    "title": "ipv4_address"
                },
                "ipv4_gateway": {
                    "type": "string",
                    "default": "198.18.1.1",
                    "description": "IPv4 Gateway of the Inband Management EPG.",
                    "minLength": 7,
                    "maxLength": 15,
                    "pattern": "^(([1-9]|[1-9][0-9]{1}|1[0-9]{2}|2[0-1][0-9]|22[0-3])\\.)(([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){2}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
                    "title": "ipv4_gateway"
                },
                "ipv6_address": {
                    "type": "string",
                    "description": "IPv6 Address/Prefix of the Inband Management EPG.",
                    "minLength": 7,
                    "maxLength": 132,
                    "pattern": "^(([a-fA-F]|[a-fA-F][a-fA-F0-9\\-]*[a-fA-F0-9])\\.)*([A-Fa-f]|[A-Fa-f][A-Fa-f0-9\\-]*[A-Fa-f0-9])$|^(?:(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){6})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:::(?:(?:(?:[0-9a-fA-F]{1,4})):){5})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){4})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,1}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){3})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,2}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){2})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,3}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:[0-9a-fA-F]{1,4})):)(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,4}(?:(?:[0-9a-fA-F]{1,4})))?::)(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,5}(?:(?:[0-9a-fA-F]{1,4})))?::)(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,6}(?:(?:[0-9a-fA-F]{1,4})))?::))))/([1-9]|[1-9][0-9]|1[0-1][0-9]|12[0-7])$",
                    "title": "ipv6_address"
                },
                "ipv6_gateway": {
                    "type": "string",
                    "description": "IPv6 Gateway of the Inband Management EPG.",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^(([a-fA-F]|[a-fA-F][a-fA-F0-9\\-]*[a-fA-F0-9])\\.)*([A-Fa-f]|[A-Fa-f][A-Fa-f0-9\\-]*[A-Fa-f0-9])$|^(?:(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){6})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:::(?:(?:(?:[0-9a-fA-F]{1,4})):){5})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){4})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,1}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){3})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,2}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){2})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,3}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:[0-9a-fA-F]{1,4})):)(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,4}(?:(?:[0-9a-fA-F]{1,4})))?::)(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,5}(?:(?:[0-9a-fA-F]{1,4})))?::)(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,6}(?:(?:[0-9a-fA-F]{1,4})))?::))))$",
                    "title": "ipv6_gateway"
                },
                "management_epg": {
                    "type": "string",
                    "default": "default",
                    "description": "Name of the Inband Management EPG.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "management_epg"
                },
                "node_id": {
                    "type": "integer",
                    "default": 1,
                    "description": "APIC Node Identifier.",
                    "minimum": 1,
                    "maximum": 9,
                    "title": "node_id"
                },
                "pod_id": {
                    "type": "integer",
                    "default": 1,
                    "description": "Identifier of the pod where the node is located.  Unless you are configuring Multi-Pod, this should always be 1.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "pod_id"
                }
            },
            "required": [
                "node_id"
            ],
            "dependentRequired": {
                "ipv4_address": ["ipv4_gateway"],
                "ipv6_address": ["ipv6_gateway"]
            },
            "title": "apics_inband_mgmt_addresses"
        },
        "Tenants:ApplicationProfiles": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "alias": {
                    "$ref": "#/definitions/Tenants:Alias"
                },
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "annotations": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "(APIC Only) You can add arbitrary key:value pairs of metadata to an object as annotations (tagAnnotation). Annotations are provided for the user's custom purposes, such as descriptions, markers for personal scripting or API calls, or flags for monitoring tools or orchestration applications such as Cisco Multi-Site Orchestrator (MSO).",
                    "items": {
                        "$ref": "#/definitions/Tenants:Annotations"
                    },
                    "title": "annotations - tagAnnotation"
                },
                "application_epgs": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "Required Attributes are:\n  * name\nOptional Attributes are:\n  * alias\n  * annotation\n  * annotations\n  * bridge_domain\n  * combine_description\n  * contract_exception_tag\n  * contracts\n  * custom_qos_policy\n  * data_plane_policer\n  * description\n  * domains\n  * epg_admin_state\n  * epg_contract_masters\n  * epg_template\n  * epg_to_aaeps\n  * epg_type\n  * fhs_trust_control_policy\n  * flood_in_encapsulation\n  * global_alias\n  * has_multicast_source\n  * label_match_criteria\n  * intra_epg_isolation\n  * monitoring_policy\n  * name_prefix\n  * name_suffix\n  * preferred_group_member\n  * qos_class\n  * static_paths\n  * useg_epg\n  * vlans\n  * vzGraphCont\n\nAPI Information:\n  * Class: fvAEPg\n  * DN: Distinguished Name: '/uni/tn-{Tenant}/ap-{App_Profile}/epg-{EPG}'\nGUI Location:\n  * Tenants -> Application Profiles -> Application EPGs.",
                    "items": {
                        "$ref": "#/definitions/Tenants:ApplicationProfiles:ApplicationEpgs"
                    },
                    "title": "application_epgs"
                },
                "create": {
                    "$ref": "#/definitions/Tenants:Create"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "global_alias": {
                    "$ref": "#/definitions/Tenants:GlobalAlias"
                },
                "monitoring_policy": {
                    "$ref": "#/definitions/Tenants:MonitoringPolicy"
                },
                "name": {
                    "$ref": "#/definitions/Tenants:Name"
                },
                "qos_class": {
                    "$ref": "#/definitions/Tenants:QosClass"
                },
                "ndo": {
                    "$ref": "#/definitions/Tenants:NdoSettings"
                }
            },
            "required": [
                "name"
            ],
            "title": "application_profiles - Tenants -> Application Profiles."
        },
        "Tenants:ApplicationProfiles:ApplicationEpgs": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "alias": {
                    "$ref": "#/definitions/Tenants:Alias"
                },
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "annotations": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "(APIC Only) You can add arbitrary key:value pairs of metadata to an object as annotations (tagAnnotation). Annotations are provided for the user's custom purposes, such as descriptions, markers for personal scripting or API calls, or flags for monitoring tools or orchestration applications such as Cisco Multi-Site Orchestrator (MSO).",
                    "items": {
                        "$ref": "#/definitions/Tenants:Annotations"
                    },
                    "title": "annotations - tagAnnotation"
                },
                "bridge_domain": {
                    "type": "string",
                    "default": "default",
                    "description": "Name of the Bridge Domain to assign to the EPG.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "bridge_domain"
                },
                "combine_description": {
                    "type": "boolean",
                    "default": false,
                    "description": "Flag to Combine the EPG Name and the Description into the Display Name in Nexus Dashboard Orchestrator.",
                    "title": "combine_description"
                },
                "contract_exception_tag": {
                    "type": "integer",
                    "description": "Contracts between EPGs are enhanced to include exceptions to subjects or contracts. This enables a subset of EPGs to be excluded in contract filtering. For example, a provider EPG can communicate with all consumer EPGs except those that match criteria configured in a Subject Exception in the contract governing their communication.  Assign a Tag Attribute to the EPG.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "contract_exception_tag"
                },
                "contracts": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "List of Contracts and their attributes to assign to the EPG.  Required Attributes are:\n  * contract_type\n  * name\n\nOptional Attributes are:\n  * qos_class\n  * ndo\n  * tenant",
                    "items": {
                        "$ref": "#/definitions/Tenants:Contracts:ContractApply"
                    },
                    "title": "contracts"
                },
                "custom_qos_policy": {
                    "type": "string",
                    "description": "Name of a Custom QoS Policy to assign to the object or policy.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "custom_qos_policy"
                },
                "data_plane_policer": {
                    "type": "string",
                    "description": "Name of a Data Plane Policer Policy to assign to the EPG.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "data_plane_policer"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "domains": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "Required Attributes are: \n  * domain\n\nOptional Attributes are:\n  * annotation\n  * allow_micro_segmentation\n  * delimiter\n  * deploy_immediacy\n  * domain_type\n  * enhanced_lag_policy\n  * number_of_ports\n  * port_allocation\n  * port_binding\n  * resolution_immediacy\n  * security\n  * sites\n  * switch_provider\n  * vlan_mode\n  * vlans",
                    "items": {
                        "$ref": "#/definitions/Tenants:ApplicationProfiles:ApplicationEpgs:Domains"
                    },
                    "title": "Physical and VMM Domains"
                },
                "epg_admin_state": {
                    "type": "string",
                    "default": "admin_up",
                    "description": "Operational state of the EPG.  Options are:\n  - admin_up\n  - admin_shut",
                    "enum": [
                        "admin_up",
                        "admin_shut"
                    ],
                    "title": "epg_admin_state"
                },
                "epg_contract_masters": {
                    "type": "array",
                    "description": "Use this to assign EPG(s) that will serve as contract master(s) for this EPG, from which this EPG will inherit contracts (you must have previously created the contract master EPG.)\n  * application_profile: (default: EPG application profile) - Name of the Application Profile for the contract master EPG.\n  * application_epg: (required) - Name of the Application EPG that will act as a contract master.",
                    "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "application_profile": {
                                "type": "string",
                                "default": "default",
                                "description": "Name of the Application Profile.",
                                "minLength": 1,
                                "maxLength": 64,
                                "pattern": "^[a-zA-Z0-9_\\.:-]+$"
                            },
                            "application_epg": {
                                "type": "string",
                                "default": "default",
                                "description": "Name of the Application EPG Acting as a Contract Master.",
                                "minLength": 1,
                                "maxLength": 64,
                                "pattern": "^[a-zA-Z0-9_\\.:-]+$"
                            }
                        }
                    },
                    "title": "epg_contract_masters"
                },
                "epg_template": {
                    "type": "string",
                    "description": "A Template that can be defined with EPG Settings to reduce the repetitive nature of attributes per EPG.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "epg_template"
                },
                "epg_to_aaeps": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "List of Objects to assign EPG to AAEP mappings.\nRequired Attributes are:\n aaep\n vlans\n\nOptional Attributes are:\n instrumentation_immediacy\n mode",
                    "items": {
                        "$ref": "#/definitions/Tenants:ApplicationProfiles:ApplicationEpgs:EpgToAaeps"
                    },
                    "title": "epg_to_aaeps - EPG to AAEP Mappings."
                },
                "epg_type": {
                    "type": "string",
                    "default": "standard",
                    "description": "The Type of EPG to Create.  Options are:\n  * inb - Use this option to create an Inband EPG.\n  * oob - Use this option to create an Out-of-Band EPG.\n  * standard: (default)",
                    "enum": [
                        "inb",
                        "oob",
                        "standard"
                    ],
                    "title": "epg_type"
                },
                "fhs_trust_control_policy": {
                    "type": "string",
                    "description": "Name of a First Hop Security Control Policy to assign to the EPG.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "fhs_trust_control_policy"
                },
                "flood_in_encapsulation": {
                    "type": "string",
                    "default": "disabled",
                    "description": "Specifies whether flooding is enabled for the routing protocols. If flooding is disabled, unicast routing is performed on the target IP address.  The options are:\n  - disabled: (default)\n  - enabled",
                    "enum": [
                        "disabled",
                        "enabled"
                    ],
                    "title": "flood_in_encapsulation"
                },
                "global_alias": {
                    "$ref": "#/definitions/Tenants:GlobalAlias"
                },
                "has_multicast_source": {
                    "type": "boolean",
                    "default": false,
                    "description": "",
                    "title": "has_multicast_source"
                },
                "label_match_criteria": {
                    "type": "string",
                    "default": "AtLeastOne",
                    "description": "Label matching is used to determine which consumer and provider EPGs can communicate. Contract subjects of a given producer or consumer of that contract determine that consumers and providers can communicate.  The match type algorithm is determined by the matchT attribute that can have one of the following values:\n  * All\n  * AtLeastOne (default)\n  * AtmostOne\n  * None",
                    "enum": [
                        "All",
                        "AtLeastOne",
                        "None",
                        "AtmostOne"
                    ],
                    "title": "label_match_criteria"
                },
                "intra_epg_isolation": {
                    "type": "string",
                    "default": false,
                    "description": "Intra-EPG endpoint isolation policies provide full isolation for virtual or physical endpoints; no communication is allowed between endpoints in an EPG that is operating with isolation enforced. Isolation enforced EPGs reduce the number of EPG encapsulations required when many clients access a common service but are not allowed to communicate with each other.  An EPG is isolation enforced for all Cisco Application Centric Infrastructure (ACI) network domains or none. While the Cisco ACI fabric implements isolation directly to connected endpoints, switches connected to the fabric are made aware of isolation rules according to a primary VLAN (PVLAN) tag.",
                    "enum": [
                        "enforced",
                        "unenforced"
                    ],
                    "title": "intra_epg_isolation"
                },
                "monitoring_policy": {
                    "$ref": "#/definitions/Tenants:MonitoringPolicy"
                },
                "name": {
                    "$ref": "#/definitions/Tenants:Name"
                },
                "name_prefix": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "name_prefix"
                },
                "name_suffix": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "name_suffix"
                },
                "preferred_group_member": {
                    "type": "boolean",
                    "default": true,
                    "description": "If an EPG or External EPG is marked as a Preferred Group Member, it is put into an internally created contract group where all members of the group can communicate with each other without requiring a contract between them.  The options are:\n  * false: (default) - The External EPG is not included in the subgroup.\n  * true - The External EPG is included in the subgroup.",
                    "title": "preferred_group_member"
                },
                "qos_class": {
                    "$ref": "#/definitions/Tenants:QosClass"
                },
                "static_paths": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "List of Paths to assign to the EPG.",
                    "items": {
                        "$ref": "#/definitions/Tenants:ApplicationProfiles:ApplicationEpgs:StaticPaths"
                    },
                    "title": ""
                },
                "useg_epg": {
                    "type": "boolean",
                    "default": true,
                    "description": "",
                    "title": "useg_epg"
                },
                "vlans": {
                    "type": "array",
                    "items": {},
                    "description": "(VMM Domains - optional) - Only required when the vlan_mode is set to static.  List of VLANs to assign to the VMM Domain.  The list should contain One VLAN for typical deployments, encapsulation VLAN.  If doing micro-segmentation/private-vlan then the list should contain two vlans with the first VLAN for encapsulation and the second VLAN for primary encapsulation."
                },
                "vzGraphCont": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "vzGraphCont"
                }
            },
            "required": [
                "bridge_domain",
                "name"
            ],
            "title": "application_epgs"
        },
        "Tenants:ApplicationProfiles:ApplicationEpgs:Domains": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "allow_micro_segmentation": {
                    "type": "boolean",
                    "default": true,
                    "description": "(VMM Domains - optional) - Allows microsegmentation for the base EPG.  Default is false.",
                    "title": "allow_micro_segmentation"
                },
                "delimiter": {
                    "type": "string",
                    "default": "",
                    "description": "(VMM Domains - optional) - The delimiter symbol to use with the VMware portgroup name.\n  * The acceptable symbols are |, ~, !, @, ^, +, =, and _.\n  * The default symbol is '|'",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "delimiter"
                },
                "deploy_immediacy": {
                    "type": "string",
                    "default": "",
                    "description": "(VMM Domains - optional) - Once policies are downloaded to the leaf software, deployment immediacy can specify when the policy is pushed into the hardware policy CAM. The options are:\n  * immediate - Specifies that the policy is programmed in the hardware policy CAM when the policy is downloaded in the leaf software.\n  * on-demand: (default) - Specifies that the policy is programmed in the hardware policy CAM only when the first packet is received through the data path. This process helps to optimize the hardware space.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "deploy_immediacy"
                },
                "domain": {
                    "type": "string",
                    "default": "",
                    "description": "Name of the Domain to assign to the EPG.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "domain"
                },
                "domain_type": {
                    "type": "string",
                    "default": "",
                    "description": "The Type of Domain you are assigning.  Options are:\n  * physical: (default)\n  * vmm",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "domain_type"
                },
                "enhanced_lag_policy": {
                    "type": "string",
                    "default": "",
                    "description": "(VMM Domains - optional) - Allows you to associate the EPG with a vCenter domain that has an enhanced link aggregation group (LAG) configured on it.  The policy consists of distributed virtual switch (DVS) uplink port groups configured in LAGs and associated with a load-balancing algorithm.  You need to configure the policy first for the VMM domain.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "enhanced_lag_policy"
                },
                "number_of_ports": {
                    "type": "integer",
                    "default": 1,
                    "description": "(VMM Domains - optional) - REQUIRED If Port Binding is staticBinding.  Number of Ports to assign to the VMM Domain Policy.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "number_of_ports"
                },
                "port_allocation": {
                    "type": "string",
                    "default": "",
                    "description": "(VMM Domains - optional) - The port allocation mode.  Only used when port_binding is staticBinding.  Options are:\n  * elastic\n  * fixed\n  * none: (default)",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "port_allocation"
                },
                "port_binding": {
                    "type": "string",
                    "default": "",
                    "description": "(VMM Domains - optional) - Enables you to choose a port-binding method:\n  * default - Default\n  * dynamic_binding - Dynamic Binding\n  * ephemeral - Ephemeral\n  * static_binding - Static",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "port_binding"
                },
                "resolution_immediacy": {
                    "type": "string",
                    "default": "",
                    "description": "(VMM Domains - optional) - Specifies whether policies are resolved immediately or when needed. The options are:\n  * immediate - Specifies that EPG policies (including contracts and filters) are downloaded to the associated leaf switch software upon hypervisor attachment to the VMware vSphere Distributed Switch (VDS). LLDP or OpFlex permissions are used to resolve the hypervisor to leaf node attachments.\n  * on-demand - Specifies that a policy (for example, VLAN, VXLAN bindings, contracts, or filters) is pushed to the leaf node only when a hypervisor is attached to VDS and a VM is placed in the port group (EPG).\n  * pre-provision: (default) - Specifies that a policy (for example, VLAN, VXLAN binding, contracts, or filters) is downloaded to a leaf switch even before a hypervisor is attached to the VDS, thereby pre-provisioning the configuration on the switch.\n  * Notes:  The default for Cisco AVS and Cisco ACI Virtual Edge is immediate.  The default for VMware VDS is pre-provision unless the Allow Microsegmentation check box is checked. In that case, resolution is immediate, and the options are grayed out.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "resolution_immediacy"
                },
                "security": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "(VMM Domains - optional) - \n  * allow_promiscuous: (VMM Domains - optional) - Allows all packets to pass to the VMM domain, which is often used to monitor network activity.\n  * accept - All traffic is received within the VMM domain.\n  * reject: (default) - Packets that do not include the network address are dropped.\n  * forged_transmits: (VMM Domains - optional) - Specifies whether to allow forged transmits. A forged transmit occurs when a network adapter starts sending out traffic that identifies itself as something else. This security policy compares the effective address of the virtual network adapter and the source address inside of an 802.3 Ethernet frame generated by the virtual machine to ensure that they match.\n  * accept - Non-matching frames are received.\n  * reject: (default) - All non-matching frames are dropped.\n  * mac_changes: (VMM Domains - optional) - Allows definition of new MAC addresses for the network adapter within the virtual machine (VM).\n  * accept - Allows new MAC addresses.\n  * reject: (default) - Does not allow new MAC addresses.",
                    "$ref": "#/definitions/Tenants:ApplicationProfiles:ApplicationEpgs:Domains:Security"
                },
                "sites": {
                    "type": "array",
                    "additionalProperties": false,
                    "items": {},
                    "description": "(required when controller_type is ndo) - When using Nexus Dashboard Orchestrator the sites attribute is used to distinguish the site and cloud types."
                },
                "switch_provider": {
                    "type": "string",
                    "default": "",
                    "description": "(VMM Domains - optional) - The provider type of the VMM Domain.  Options are:\n  * CloudFoundry\n  * Kubernetes\n  * Microsoft\n  * OpenShift\n  * OpenStack\n  * Redhat\n  * VMware: (default)",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "switch_provider"
                },
                "vlan_mode": {
                    "type": "string",
                    "default": "",
                    "description": "(VMM Domains - optional) - Setting to determine the Mode of the VLAN Assignment.  Options are:\n  * dynamic: (default) - The VLAN is dynamically assigned from the VLAN Pool.\n  * static - The VLAN is statically assigned from the VLAN Pool.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "vlan_mode"
                },
                "vlans": {
                    "type": "array",
                    "items": {},
                    "description": "(VMM Domains - optional) - Only required when the vlan_mode is set to static.  List of VLANs to assign to the VMM Domain.  The list should contain One VLAN for typical deployments, encapsulation VLAN.  If doing micro-segmentation/private-vlan then the list should contain two vlans with the first VLAN for encapsulation and the second VLAN for primary encapsulation."
                }
            },
            "required": [
                "allow_micro_segmentation",
                "annotation",
                "delimiter",
                "deploy_immediacy",
                "domain",
                "domain_type",
                "enhanced_lag_policy",
                "number_of_ports",
                "port_allocation",
                "port_binding",
                "resolution_immediacy",
                "security",
                "sites",
                "switch_provider",
                "vlan_mode",
                "vlans"
            ],
            "title": "domains - Application Epgs -> Domains."
        },
        "Tenants:ApplicationProfiles:ApplicationEpgs:Domains:Security": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "allow_promiscuous": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "allow_promiscuous"
                },
                "forged_transmits": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "forged_transmits"
                },
                "mac_changes": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "mac_changes"
                }
            },
            "required": [
                "allow_promiscuous",
                "forged_transmits",
                "mac_changes"
            ],
            "title": "security - Application EPGs -> Domains -> VMM Security."
        },
        "Tenants:ApplicationProfiles:ApplicationEpgs:EpgToAaeps": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "aaep": {
                    "type": "string",
                    "default": "",
                    "description": "Name of the Attachable Access Entity Profile to assign",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "aaep"
                },
                "instrumentation_immediacy": {
                    "type": "string",
                    "default": "",
                    "description": "The EPG to AAEP deployment immediacy.  Options are:\n  * immediate - Specifies that EPG policies (including contracts and filters) are downloaded to the associated leaf switch software upon deployment.\n  * on-demand: (default) - Specifies that a policy (for example, VLAN, VXLAN bindings, contracts, or filters) is pushed to the leaf node only when an endpoint is discovered, attached to the (EPG).",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "instrumentation_immediacy"
                },
                "mode": {
                    "type": "string",
                    "default": "",
                    "description": "The Mode of the Port.  Options are:\n  * access - Select this mode if the traffic from the host is untagged (without VLAN ID). When a leaf switch is configured for an EPG to be untagged, for every port this EPG uses, the packets will exit the switch untagged.\n  * dot1p - Select this mode if the traffic from the host is tagged with a 802.1P tag. When an access port is configured with a single EPG in native 802.1p mode, its packets exit that port untagged. When an access port is configured with multiple EPGs, one in native 802.1p mode, and some with VLAN tags, all packets exiting that access port are tagged VLAN 0 for EPG configured in native 802.1p mode and for all other EPGs packets exit with their respective VLAN tags.\n  * trunk: (default) - Select this mode if the traffic from the host is tagged with a VLAN ID.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "mode"
                },
                "vlans": {
                    "type": "array",
                    "items": {},
                    "description": "(VMM Domains - optional) - Only required when the vlan_mode is set to static.  List of VLANs to assign to the VMM Domain.  The list should contain One VLAN for typical deployments, encapsulation VLAN.  If doing micro-segmentation/private-vlan then the list should contain two vlans with the first VLAN for encapsulation and the second VLAN for primary encapsulation."
                }
            },
            "required": [
                "aaep",
                "instrumentation_immediacy",
                "mode",
                "vlans"
            ],
            "title": "epg_to_aaeps - Attach EPGs to a Attachable Access Entity Profile."
        },
        "Tenants:ApplicationProfiles:ApplicationEpgs:StaticPaths": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "encapsulation_type": {
                    "type": "string",
                    "default": "",
                    "description": "The Type of Encapsulation to use on the Interface\n  * micro_seg - \n  * qinq - Port Encapsulation is QinQ based.\n  * vlan: (default) - Port Encapsulation is VLAN based.\n  * vxlan - Port Encapsulation is VXLAN based.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "encapsulation_type"
                },
                "mode": {
                    "type": "string",
                    "default": "",
                    "description": "The Mode of the Port.  Options are:\n  * access - Select this mode if the traffic from the host is untagged (without VLAN ID). When a leaf switch is configured for an EPG to be untagged, for every port this EPG uses, the packets will exit the switch untagged.\n  * dot1p - Select this mode if the traffic from the host is tagged with a 802.1P tag. When an access port is configured with a single EPG in native 802.1p mode, its packets exit that port untagged. When an access port is configured with multiple EPGs, one in native 802.1p mode, and some with VLAN tags, all packets exiting that access port are tagged VLAN 0 for EPG configured in native 802.1p mode and for all other EPGs packets exit with their respective VLAN tags.\n  * trunk: (default) - Select this mode if the traffic from the host is tagged with a VLAN ID.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "mode"
                },
                "names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of DHCP Relay Policies to assign to the bridge domain"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "If the Path type is vpc this should be a list of 2 leaf's.  Otherwise a list of 1 leaf."
                },
                "path_type": {
                    "type": "string",
                    "default": "",
                    "description": "(required)\n  * pc - Path Type is Port-Channel\n  * port: (default) - Path Type is Physical Port\n  * vpc - Path Type is Virtual-Port-Channel",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "path_type"
                },
                "pod": {
                    "type": "integer",
                    "default": 1,
                    "description": "Identifier for the Pod the Nodes are assigned to for the static path.  Default is 1",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "pod"
                },
                "vlans": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "(VMM Domains - optional) - Only required when the vlan_mode is set to static.  List of VLANs to assign to the VMM Domain.  The list should contain One VLAN for typical deployments, encapsulation VLAN.  If doing micro-segmentation/private-vlan then the list should contain two vlans with the first VLAN for encapsulation and the second VLAN for primary encapsulation."
                }
            },
            "required": [
                "encapsulation_type",
                "mode",
                "names",
                "nodes",
                "path_type",
                "pod",
                "vlans"
            ],
            "title": "StaticPaths"
        },
        "Tenants:Contracts": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "contracts": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "List of Contracts and their attributes to assign to the EPG.",
                    "items": {
                        "$ref": "#/definitions/Tenants:Contracts:Contracts"
                    },
                    "title": ""
                },
                "filters": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "List of Filters to add to the Subject.",
                    "items": {
                        "$ref": "#/definitions/Tenants:Contracts:Filters"
                    },
                    "title": ""
                }
            },
            "required": [
                "contracts",
                "filters"
            ],
            "title": "contracts - Tenants -> Contracts."
        },
        "Tenants:Contracts:ContractApply": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "contract_type": {
                    "type": "string",
                    "default": "provided",
                    "description": "The Type of Contract.  Options are:\n  * consumed\n  * contract_interface\n  * intra_epg\n  * provided: (default)\n  * taboo",
                    "enum": [
                        "consumed",
                        "contract_interface",
                        "intra_epg",
                        "provided",
                        "taboo"
                    ],
                    "title": "contract_type"
                },
                "name": {
                    "$ref": "#/definitions/Tenants:Name"
                },
                "qos_class": {
                    "$ref": "#/definitions/Tenants:QosClass"
                },
                "ndo": {
                    "$ref": "#/definitions/Tenants:NdoSettings"
                },
                "tenant": {
                    "type": "string",
                    "description": "The Name of the Tenant the Contract exists in.  By default this will refer back to the Parent Object Tenant definition, if undefined.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "tenant"
                }
            },
            "required": [
                "name",
                "tenant"
            ],
            "title": "Apply EPG Contracts to Object."
        },
        "Tenants:Contracts:Contracts": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "alias": {
                    "$ref": "#/definitions/Tenants:Alias"
                },
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "annotations": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "(APIC Only) You can add arbitrary key:value pairs of metadata to an object as annotations (tagAnnotation). Annotations are provided for the user's custom purposes, such as descriptions, markers for personal scripting or API calls, or flags for monitoring tools or orchestration applications such as Cisco Multi-Site Orchestrator (MSO).",
                    "items": {
                        "$ref": "#/definitions/Tenants:Annotations"
                    },
                    "title": "annotations - tagAnnotation"
                },
                "contract_type": {
                    "type": "string",
                    "default": "",
                    "description": "The Type of Contract.  Options are:\n  * consumed\n  * contract_interface\n  * intra_epg\n  * provided\n  * taboo",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "contract_type"
                },
                "controller_type": {
                    "type": "string",
                    "default": "",
                    "description": "The type of controller.  Options are:\n  * apic: (default)\n  * ndo",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "controller_type"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "global_alias": {
                    "$ref": "#/definitions/Tenants:GlobalAlias"
                },
                "log": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enables contract permit and deny logging.  Default is false.",
                    "title": "log"
                },
                "qos_class": {
                    "$ref": "#/definitions/Tenants:QosClass"
                },
                "scope": {
                    "type": "string",
                    "default": "",
                    "description": "(default: infra) -  The owner of the target relay. The DHCP relay is any host that forwards DHCP packets between clients and servers. The relays are used to forward requests and replies between clients and servers when they are not on the same physical subnet. The relay owner can be:\n  * infra - The owner is the infrastructure\n  * tenant - The owner is the tenant",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "scope"
                },
                "subjects": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Contracts:Contracts:Subjects"
                    },
                    "title": ""
                },
                "target_dscp": {
                    "type": "string",
                    "default": "",
                    "description": "The target differentiated services code point (DSCP). The options are as follows:\n  * AF11 - low drop Priority\n  * AF12 - medium drop Priority\n  * AF13 - high drop Priority\n  * AF21 - low drop Immediate\n  * AF22 - medium drop Immediate\n  * AF23 - high drop Immediate\n  * AF31 - low drop Flash\n  * AF32 - medium drop Flash\n  * AF33 - high drop Flash\n  * AF41 - low drop-Flash Override\n  * AF42 - medium drop Flash Override\n  * AF43 - high drop Flash Override\n  * CS0 - class of service level 0\n  * CS1 - class of service level 1\n  * CS2 - class of service level 2\n  * CS3 - class of service level 3\n  * CS4 - class of service level 4\n  * CS5 - class of service level 5\n  * CS6 - class of service level 6\n  * CS7 - class of service level 7\n  * EF - Expedited Forwarding Critical\n  * VA - Voice Admit\n  * unspecified: (default)",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "target_dscp"
                }
            },
            "required": [
                "alias",
                "annotation",
                "annotations",
                "contract_type",
                "controller_type",
                "description",
                "global_alias",
                "log",
                "qos_class",
                "scope",
                "subjects",
                "target_dscp"
            ],
            "title": "contracts - Tenants -> Contracts -> Contracts."
        },
        "Tenants:Contracts:Contracts:Subjects": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "action": {
                    "type": "string",
                    "default": "",
                    "description": "You can set the following actions for the filter:\n  * deny\n  * permit: (default)",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "action"
                },
                "apply_both_directions": {
                    "type": "boolean",
                    "default": true,
                    "description": "Sets the contract filter to apply on both ingress and egress traffic directions.  Default is true.",
                    "title": "apply_both_directions"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "directives": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "Some features, such as statistics, will be unavailable while Policy Compression is active. Filters containing prio, qos and markDscp are not considered for compression.",
                    "$ref": "#/definitions/Tenants:Contracts:Contracts:Subjects:Directives"
                },
                "filters": {
                    "type": "array",
                    "additionalProperties": false,
                    "items": {},
                    "description": "List of Filters to add to the Subject."
                },
                "label_match_criteria": {
                    "type": "string",
                    "default": "",
                    "description": "The provider label match criteria.  Options are:\n  * All\n  * AtleastOne: (default)\n  * AtmostOne\n  * None",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "label_match_criteria"
                },
                "name": {
                    "type": "string",
                    "default": "",
                    "description": "Name of the Contract to assign to the EPG.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "name"
                },
                "qos_class": {
                    "$ref": "#/definitions/Tenants:QosClass"
                },
                "target_dscp": {
                    "type": "string",
                    "default": "",
                    "description": "The target differentiated services code point (DSCP). The options are as follows:\n  * AF11 - low drop Priority\n  * AF12 - medium drop Priority\n  * AF13 - high drop Priority\n  * AF21 - low drop Immediate\n  * AF22 - medium drop Immediate\n  * AF23 - high drop Immediate\n  * AF31 - low drop Flash\n  * AF32 - medium drop Flash\n  * AF33 - high drop Flash\n  * AF41 - low drop-Flash Override\n  * AF42 - medium drop Flash Override\n  * AF43 - high drop Flash Override\n  * CS0 - class of service level 0\n  * CS1 - class of service level 1\n  * CS2 - class of service level 2\n  * CS3 - class of service level 3\n  * CS4 - class of service level 4\n  * CS5 - class of service level 5\n  * CS6 - class of service level 6\n  * CS7 - class of service level 7\n  * EF - Expedited Forwarding Critical\n  * VA - Voice Admit\n  * unspecified: (default)",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "target_dscp"
                }
            },
            "required": [
                "action",
                "apply_both_directions",
                "description",
                "directives",
                "filters",
                "label_match_criteria",
                "name",
                "qos_class",
                "target_dscp"
            ],
            "title": "subjects - Contracts -> Subjects."
        },
        "Tenants:Contracts:Contracts:Subjects:Directives": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "enable_policy_compression": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enables contract data storage optimization.  Default is false.",
                    "title": "enable_policy_compression"
                },
                "log": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enables contract permit and deny logging.  Default is false.",
                    "title": "log"
                }
            },
            "required": [
                "enable_policy_compression",
                "log"
            ],
            "title": "Directives"
        },
        "Tenants:Contracts:Filters": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "alias": {
                    "$ref": "#/definitions/Tenants:Alias"
                },
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "annotations": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "(APIC Only) You can add arbitrary key:value pairs of metadata to an object as annotations (tagAnnotation). Annotations are provided for the user's custom purposes, such as descriptions, markers for personal scripting or API calls, or flags for monitoring tools or orchestration applications such as Cisco Multi-Site Orchestrator (MSO).",
                    "items": {
                        "$ref": "#/definitions/Tenants:Annotations"
                    },
                    "title": "annotations - tagAnnotation"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "filter_entries": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "List of Filter Entries to assign to the Filter.",
                    "items": {
                        "$ref": "#/definitions/Tenants:Contracts:Filters:FilterEntries"
                    },
                    "title": ""
                },
                "global_alias": {
                    "type": "string",
                    "default": "",
                    "description": "(APIC Only) The Global Alias feature simplifies querying a specific object in the API. When querying an object, you must specify a unique object identifier, which is typically the object's DN. As an alternative, this feature allows you to assign to an object a label that is unique within the fabric.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "global_alias"
                }
            },
            "required": [
                "alias",
                "annotation",
                "annotations",
                "description",
                "filter_entries",
                "global_alias"
            ],
            "title": "Filters"
        },
        "Tenants:Contracts:Filters:FilterEntries": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "alias": {
                    "$ref": "#/definitions/Tenants:Alias"
                },
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "annotations": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "(APIC Only) You can add arbitrary key:value pairs of metadata to an object as annotations (tagAnnotation). Annotations are provided for the user's custom purposes, such as descriptions, markers for personal scripting or API calls, or flags for monitoring tools or orchestration applications such as Cisco Multi-Site Orchestrator (MSO).",
                    "items": {
                        "$ref": "#/definitions/Tenants:Annotations"
                    },
                    "title": "annotations - tagAnnotation"
                },
                "arp_flag": {
                    "type": "string",
                    "default": "",
                    "description": "If the EtherType is not arp then this should be unspecified.  Options are:\n  * req\n  * reply\n  * unspecified: (default)",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "arp_flag"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "destination_port_from": {
                    "type": "string",
                    "default": "",
                    "description": "The start of the destination port range. The start of the port range is determined by the server type. You can define a single port by specifying the same value in the From and To fields, or you can define a range of ports from 0 to 65535 by specifying different values in the From and To fields. Instead of specifying a number, you can instead choose one of the following server types to use the pre-defined port of that type:\n  * 1-65535\n  * dns\n  * ftpData\n  * http\n  * https\n  * pop3\n  * rtsp\n  * smtp\n  * unspecified: (default)",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "destination_port_from"
                },
                "destination_port_to": {
                    "type": "string",
                    "default": "",
                    "description": "The end of the destination port range. The end of the port range is determined by the server type. You can define a single port by specifying the same value in the From and To fields, or you can define a range of ports from 0 to 65535 by specifying different values in the From and To fields. Instead of specifying a number, you can instead choose one of the following server types to use the pre-defined port of that type:\n  * 1-65535\n  * dns\n  * ftpData\n  * http\n  * https\n  * pop3\n  * rtsp\n  * smtp\n  * unspecified: (default)",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "destination_port_to"
                },
                "ethertype": {
                    "type": "string",
                    "default": "",
                    "description": "Option to set the ethertype to match with the Filter Entry.  Options are:\n  * arp\n  * fcoe\n  * ip\n  * ipv4\n  * ipv6\n  * trill\n  * mac_security\n  * mpls_ucast\n  * unspecified: (default)",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "ethertype"
                },
                "icmpv4_type": {
                    "type": "string",
                    "default": "",
                    "description": "If the IP Protocol is icmp you can select the ICMPv4 Type.  Options are:\n  * dst-unreach\n  * echo\n  * echo-rep\n  * src-quench\n  * time-exceeded\n  * unspecified: (default)",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "icmpv4_type"
                },
                "icmpv6_type": {
                    "type": "string",
                    "default": "",
                    "description": "If the IP Protocol is icmp you can select the ICMPv6 Type.  Options are:\n  * dst-unreach\n  * echo-req\n  * echo-rep\n  * nbr-solicit\n  * nbr-advert\n  * redirect\n  * time-exceeded\n  * unspecified: (default)",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "icmpv6_type"
                },
                "ip_protocol": {
                    "type": "string",
                    "default": "",
                    "description": "The IP Protocol type for the filter entry.  Options are:\n  * egp\n  * eigrp\n  * igp\n  * icmp\n  * icmpv6\n  * igmp\n  * l2tp\n  * ospfigp\n  * pim\n  * tcp\n  * udp\n  * unspecified: (default)",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "ip_protocol"
                },
                "global_alias": {
                    "$ref": "#/definitions/Tenants:GlobalAlias"
                },
                "match_dscp": {
                    "type": "string",
                    "default": "",
                    "description": "Match only traffic marked with the specified Differentiated Services Code Point (DSCP) value. Enter the DSCP value to match.\n  * Note: Contracts using filters matching DSCP values are only supported on cloud scale switches  \u201cEX/FX/FX2/FXP/GX\u201d etc. For example, N9K-93108TC-EX.\n  * AF11 - low drop Priority\n  * AF12 - medium drop Priority\n  * AF13 - high drop Priority\n  * AF21 - low drop Immediate\n  * AF22 - medium drop Immediate\n  * AF23 - high drop Immediate\n  * AF31 - low drop Flash\n  * AF32 - medium drop Flash\n  * AF33 - high drop Flash\n  * AF41 - low drop-Flash Override\n  * AF42 - medium drop Flash Override\n  * AF43 - high drop Flash Override\n  * CS0 - class of service level 0\n  * CS1 - class of service level 1\n  * CS2 - class of service level 2\n  * CS3 - class of service level 3\n  * CS4 - class of service level 4\n  * CS5 - class of service level 5\n  * CS6 - class of service level 6\n  * CS7 - class of service level 7\n  * EF - Expedited Forwarding Critical\n  * VA - Voice Admit\n  * unspecified: (default)",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "match_dscp"
                },
                "match_only_fragments": {
                    "type": "boolean",
                    "default": true,
                    "description": "Match only packet fragments. When enabled, the rule applies to any IP fragment with an offset that is greater than 0 (all IP fragments except the first). When disabled, the rule will not apply to IP fragments with an offset greater than 0 because TCP/UDP port information can only be checked in initial fragments.\n  * false: (default)\n  * true",
                    "title": "match_only_fragments"
                },
                "name": {
                    "type": "string",
                    "default": "",
                    "description": "Name of the Contract to assign to the EPG.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "name"
                },
                "source_port_from": {
                    "type": "string",
                    "default": "",
                    "description": "The start of the source port range. The start of the port range is determined by the server type. You can define a single port by specifying the same value in the From and To fields, or you can define a range of ports from 0 to 65535 by specifying different values in the From and To fields. Instead of specifying a number, you can instead choose one of the following server types to use the pre-defined port of that type:\n  * 1-65535\n  * dns\n  * ftpData\n  * http\n  * https\n  * pop3\n  * rtsp\n  * smtp\n  * unspecified: (default)",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "source_port_from"
                },
                "source_port_to": {
                    "type": "string",
                    "default": "",
                    "description": "The end of the source port range. The end of the port range is determined by the server type. You can define a single port by specifying the same value in the From and To fields, or you can define a range of ports from 0 to 65535 by specifying different values in the From and To fields. Instead of specifying a number, you can instead choose one of the following server types to use the pre-defined port of that type:\n  * 1-65535\n  * dns\n  * ftpData\n  * http\n  * https\n  * pop3\n  * rtsp\n  * smtp\n  * unspecified: (default)",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "source_port_to"
                },
                "stateful": {
                    "type": "boolean",
                    "default": true,
                    "description": "Specifies if the entry is stateful. This applies to the TCP protocol only. Default is false.",
                    "title": "stateful"
                },
                "tcp_session_rules": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "The TCP session rules of the filter entry. The TCP session rules are:\n  * acknowledgement\n  * false: (default)\n  * true\n  * established\n  * false: (default)\n  * true\n  * finish\n  * false: (default)\n  * true\n  * reset\n  * false: (default)\n  * true\n  * synchronize\n  * false: (default)\n  * true",
                    "$ref": "#/definitions/Tenants:Contracts:Filters:FilterEntries:TCPSessionRules"
                }
            },
            "required": [
                "alias",
                "annotation",
                "annotations",
                "arp_flag",
                "description",
                "destination_port_from",
                "destination_port_to",
                "ethertype",
                "global_alias",
                "icmpv4_type",
                "icmpv6_type",
                "ip_protocol",
                "match_dscp",
                "match_only_fragments",
                "name",
                "source_port_from",
                "source_port_to",
                "stateful",
                "tcp_session_rules"
            ],
            "title": "FilterEntries"
        },
        "Tenants:Contracts:Filters:FilterEntries:TCPSessionRules": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "acknowledgement": {
                    "type": "boolean",
                    "default": true,
                    "description": "",
                    "title": "acknowledgement"
                },
                "established": {
                    "type": "boolean",
                    "default": true,
                    "description": "",
                    "title": "established"
                },
                "finish": {
                    "type": "boolean",
                    "default": true,
                    "description": "",
                    "title": "finish"
                },
                "reset": {
                    "type": "boolean",
                    "default": true,
                    "description": "",
                    "title": "reset"
                },
                "synchronize": {
                    "type": "boolean",
                    "default": true,
                    "description": "",
                    "title": "synchronize"
                }
            },
            "required": [
                "acknowledgement",
                "established",
                "finish",
                "reset",
                "synchronize"
            ],
            "title": "TCPSessionRules"
        },
        "Tenants:ColorTag": {
            "type": "string",
            "default": "yellow-green",
            "description": "Specifies the color of a policy label.\n  * alice-blue\n  * antique-white\n  * aqua\n  * aquamarine\n  * azure\n  * beige\n  * bisque\n  * black\n  * blanched-almond\n  * blue\n  * blue-violet\n  * brown\n  * burlywood\n  * cadet-blue\n  * chartreuse\n  * chocolate\n  * coral\n  * cornflower-blue\n  * cornsilk\n  * crimson\n  * cyan\n  * dark-blue\n  * dark-cyan\n  * dark-goldenrod\n  * dark-gray\n  * dark-green\n  * dark-khaki\n  * dark-magenta\n  * dark-olive-green\n  * dark-orange\n  * dark-orchid\n  * dark-red\n  * dark-salmon\n  * dark-sea-green\n  * dark-slate-blue\n  * dark-slate-gray\n  * dark-turquoise\n  * dark-violet\n  * deep-pink\n  * deep-sky-blue\n  * dim-gray\n  * dodger-blue\n  * fire-brick\n  * floral-white\n  * forest-green\n  * fuchsia\n  * gainsboro\n  * ghost-white\n  * gold\n  * goldenrod\n  * gray\n  * green\n  * green-yellow\n  * honeydew\n  * hot-pink\n  * indian-red\n  * indigo\n  * ivory\n  * khaki\n  * lavender\n  * lavender-blush\n  * lawn-green\n  * lemon-chiffon\n  * light-blue\n  * light-coral\n  * light-cyan\n  * light-goldenrod-yellow\n  * light-gray\n  * light-green\n  * light-pink\n  * light-salmon\n  * light-sea-green\n  * light-sky-blue\n  * light-slate-gray\n  * light-steel-blue\n  * light-yellow\n  * lime\n  * lime-green\n  * linen\n  * magenta\n  * maroon\n  * medium-aquamarine\n  * medium-blue\n  * medium-orchid\n  * medium-purple\n  * medium-sea-green\n  * medium-slate-blue\n  * medium-spring-green\n  * medium-turquoise\n  * medium-violet-red\n  * midnight-blue\n  * mint-cream\n  * misty-rose\n  * moccasin\n  * navajo-white\n  * navy\n  * old-lace\n  * olive\n  * olive-drab\n  * orange\n  * orange-red\n  * orchid\n  * pale-goldenrod\n  * pale-green\n  * pale-turquoise\n  * pale-violet-red\n  * papaya-whip\n  * peachpuff\n  * peru\n  * pink\n  * plum\n  * powder-blue\n  * purple\n  * red\n  * rosy-brown\n  * royal-blue\n  * saddle-brown\n  * salmon\n  * sandy-brown\n  * sea-green\n  * seashell\n  * sienna\n  * silver\n  * sky-blue\n  * slate-blue\n  * slate-gray\n  * snow\n  * spring-green\n  * steel-blue\n  * tan\n  * teal\n  * thistle\n  * tomato\n  * turquoise\n  * violet\n  * wheat\n  * white\n  * white-smoke\n  * yellow\n  * yellow-green: (default).",
            "enum": [
                "alice-blue",
                "antique-white",
                "aqua",
                "aquamarine",
                "azure",
                "beige",
                "bisque",
                "black",
                "blanched-almond",
                "blue",
                "blue-violet",
                "brown",
                "burlywood",
                "cadet-blue",
                "chartreuse",
                "chocolate",
                "coral",
                "cornflower-blue",
                "cornsilk",
                "crimson",
                "cyan",
                "dark-blue",
                "dark-cyan",
                "dark-goldenrod",
                "dark-gray",
                "dark-green",
                "dark-khaki",
                "dark-magenta",
                "dark-olive-green",
                "dark-orange",
                "dark-orchid",
                "dark-red",
                "dark-salmon",
                "dark-sea-green",
                "dark-slate-blue",
                "dark-slate-gray",
                "dark-turquoise",
                "dark-violet",
                "deep-pink",
                "deep-sky-blue",
                "dim-gray",
                "dodger-blue",
                "fire-brick",
                "floral-white",
                "forest-green",
                "fuchsia",
                "gainsboro",
                "ghost-white",
                "gold",
                "goldenrod",
                "gray",
                "green",
                "green-yellow",
                "honeydew",
                "hot-pink",
                "indian-red",
                "indigo",
                "ivory",
                "khaki",
                "lavender",
                "lavender-blush",
                "lawn-green",
                "lemon-chiffon",
                "light-blue",
                "light-coral",
                "light-cyan",
                "light-goldenrod-yellow",
                "light-gray",
                "light-green",
                "light-pink",
                "light-salmon",
                "light-sea-green",
                "light-sky-blue",
                "light-slate-gray",
                "light-steel-blue",
                "light-yellow",
                "lime",
                "lime-green",
                "linen",
                "magenta",
                "maroon",
                "medium-aquamarine",
                "medium-blue",
                "medium-orchid",
                "medium-purple",
                "medium-sea-green",
                "medium-slate-blue",
                "medium-spring-green",
                "medium-turquoise",
                "medium-violet-red",
                "midnight-blue",
                "mint-cream",
                "misty-rose",
                "moccasin",
                "navajo-white",
                "navy",
                "old-lace",
                "olive",
                "olive-drab",
                "orange",
                "orange-red",
                "orchid",
                "pale-goldenrod",
                "pale-green",
                "pale-turquoise",
                "pale-violet-red",
                "papaya-whip",
                "peachpuff",
                "peru",
                "pink",
                "plum",
                "powder-blue",
                "purple",
                "red",
                "rosy-brown",
                "royal-blue",
                "saddle-brown",
                "salmon",
                "sandy-brown",
                "sea-green",
                "seashell",
                "sienna",
                "silver",
                "sky-blue",
                "slate-blue",
                "slate-gray",
                "snow",
                "spring-green",
                "steel-blue",
                "tan",
                "teal",
                "thistle",
                "tomato",
                "turquoise",
                "violet",
                "wheat",
                "white",
                "white-smoke",
                "yellow",
                "yellow-green"
            ],
            "title": "color_tag"
        },
        "Tenants:Create": {
            "type": "boolean",
            "default": true,
            "description": "Flag to determine if the Object should be created or just read as a data source.",
            "title": "create"
        },
        "Tenants:Description": {
            "type": "string",
            "default": "default",
            "description": "Description to add to the Object.  The description can be up to 128 characters.",
            "minLength": 1,
            "maxLength": 128,
            "pattern": "^[a-zA-Z0-9\\\\!#$%()*,-\\./:;@ _{|}~?&+]+$",
            "title": "description"
        },
        "Tenants:GlobalAlias": {
            "type": "string",
            "default": "",
            "description": "(APIC Only) The Global Alias feature simplifies querying a specific object in the API. When querying an object, you must specify a unique object identifier, which is typically the object's DN. As an alternative, this feature allows you to assign to an object a label that is unique within the fabric.",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9_\\.:-]+$",
            "title": "global_alias"
        },
        "Tenants:MonitoringPolicy": {
            "type": "string",
            "default": "",
            "description": "Name of a Monitoring Policy to assign to the EPG.",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9_\\.:-]+$",
            "title": "monitoring_policy"
        },
        "Tenants:Name": {
            "type": "string",
            "default": "default",
            "description": "A Name for the Object or Policy.",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9_\\.:-]+$",
            "title": "name"
        },
        "Tenants:Networking": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "bridge_domains": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Networking:BridgeDomains"
                    },
                    "title": ""
                },
                "l3outs": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Networking:L3Outs"
                    },
                    "title": ""
                },
                "vrfs": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Networking:Vrfs"
                    },
                    "title": ""
                }
            },
            "required": [
                "bridge_domains",
                "l3outs",
                "vrfs"
            ],
            "title": "Networking"
        },
        "Tenants:Networking:BridgeDomains": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "combine_description": {
                    "type": "boolean",
                    "default": true,
                    "description": "",
                    "title": "combine_description"
                },
                "dhcp_relay_labels": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "DHCP Relay Policies to assign to the bridge domain.",
                    "items": {
                        "$ref": "#/definitions/Tenants:Networking:BridgeDomains:DHCPRelayLabels"
                    },
                    "title": ""
                },
                "general": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "Map of General Configuration Parameters for the Bridge Domain.",
                    "$ref": "#/definitions/Tenants:Networking:BridgeDomains:General"
                },
                "l3_configurations": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "Map of Layer 3 Configuration Parameters for the Bridge Domain.",
                    "$ref": "#/definitions/Tenants:Networking:BridgeDomains:L3Configurations"
                },
                "advanced_troubleshooting": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "Map of Advanced/Troubleshooting Configuration Parameters for the Bridge Domain.",
                    "$ref": "#/definitions/Tenants:Networking:BridgeDomains:AdvancedTroubleshooting"
                },
                "name": {
                    "type": "string",
                    "default": "",
                    "description": "Name of the Contract to assign to the EPG.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "name"
                },
                "name_prefix": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "name_prefix"
                },
                "name_suffix": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "name_suffix"
                },
                "ndo": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "",
                    "$ref": "#/definitions/Tenants:Networking:BridgeDomains:Ndo"
                }
            },
            "required": [
                "advanced_troubleshooting",
                "combine_description",
                "dhcp_relay_labels",
                "general",
                "l3_configurations",
                "name",
                "name_prefix",
                "name_suffix",
                "ndo"
            ],
            "title": "BridgeDomains"
        },
        "Tenants:Networking:BridgeDomains:AdvancedTroubleshooting": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "disable_ip_data_plane_learning_for_pbr": {
                    "type": "boolean",
                    "default": true,
                    "description": "Controls whether the remote leaf switch should update the IP-to-VTEP information with the source VTEP of traffic coming from this bridge domain. The options are:\n  * false: (default)\n  * true - Change this setting to true, only if the bridge domain is to be associated with policy-based redirect (PBR) enabled endpoint groups.\n  * Note: Use caution when changing the default setting for this field. Setting this option to no can cause suboptimal traffic forwarding for non-PBR scenarios.",
                    "title": "disable_ip_data_plane_learning_for_pbr"
                },
                "endpoint_clear": {
                    "type": "boolean",
                    "default": true,
                    "description": "Set this to Clear the Endpoint Table on the Bridge Domain.  Default is false.",
                    "title": "endpoint_clear"
                },
                "first_hop_security_policy": {
                    "type": "string",
                    "default": "",
                    "description": "The name of a First Hop Security Policy to Associate.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "first_hop_security_policy"
                },
                "intersite_bum_traffic_allow": {
                    "type": "boolean",
                    "default": true,
                    "description": "When extending the bridge domain between sites this option is to permit broadcast unknown multicast (BUM) traffic between the sites.  Default is false.",
                    "title": "intersite_bum_traffic_allow"
                },
                "intersite_l2_stretch": {
                    "type": "boolean",
                    "default": true,
                    "description": "Extend the Bridge Domain between ACI Fabrics.  Default is false.",
                    "title": "intersite_l2_stretch"
                },
                "monitoring_policy": {
                    "$ref": "#/definitions/Tenants:MonitoringPolicy"
                },
                "netflow_monitor_policies": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "A NetFlow Monitor Policy identifies packet flows for ingress IP packets and provides statistics based on these packet flows.",
                    "items": {
                        "$ref": "#/definitions/Tenants:Networking:BridgeDomains:AdvancedTroubleshooting:NetflowMonitorPolicies"
                    }
                },
                "optimize_wan_bandwidth": {
                    "type": "boolean",
                    "default": true,
                    "description": "Any defined bridge domain is associated with a multicast group address (or a set of multicast addresses), usually referred to as the GIPo address. Depending on the number of configured bridge domains, the same GIPo address may be associated with different bridge domains. Thus, when flooding for one of those bridge domains is enabled across sites, BUM traffic for the other bridge domains using the same GIPo address is also sent across the sites and will then be dropped on the received spine nodes. This behavior can increase the bandwidth utilization in the intersite network.  Because of this behavior, when a bridge domain is configured as stretched with BUM flooding enabled from the Cisco Multi-Site Orchestrator GUI, by default a GIPo address is assigned from a separate range of multicast addresses. This is reflected in the GUI by the \u201cOPTIMIZE WAN BANDWIDTH\u201d.  Default is false.",
                    "title": "optimize_wan_bandwidth"
                },
                "rogue_coop_exception_list": {
                    "type": "array",
                    "items": {},
                    "description": "A list of MAC addresses for which you want to have a higher tolerance for endpoint movement with rogue endpoint control before the endpoints get marked as rogue. Endpoints in the rogue/COOP exception list get marked as rogue only if they move 3000 or more times within 10 minutes. After an endpoint is marked as rogue, the endpoint is kept static so that learning is prevented and the traffic to and from the endpoint is dropped. The rogue endpoint is deleted after 30 seconds."
                }
            },
            "required": [
                "disable_ip_data_plane_learning_for_pbr",
                "endpoint_clear",
                "first_hop_security_policy",
                "intersite_bum_traffic_allow",
                "intersite_l2_stretch",
                "monitoring_policy",
                "netflow_monitor_policies",
                "optimize_wan_bandwidth",
                "rogue_coop_exception_list"
            ],
            "title": "AdvancedTroubleshooting"
        },
        "Tenants:Networking:BridgeDomains:AdvancedTroubleshooting:NetflowMonitorPolicies": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "filter_type": {
                    "type": "string",
                    "default": "",
                    "description": "The Type of IP Traffic to provide statistics for.  Options are:\n  * ce\n  * ipv4: (default)\n  * ipv6",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "filter_type"
                },
                "netflow_policy": {
                    "type": "string",
                    "default": "",
                    "description": "(required) - Name of a Netflow Policy to assign to the Bridge Domain.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "netflow_policy"
                }
            },
            "required": [
                "filter_type",
                "netflow_policy"
            ],
            "title": "NetflowMonitorPolicies"
        },
        "Tenants:Networking:BridgeDomains:DHCPRelayLabels": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "dhcp_option_policy": {
                    "type": "string",
                    "default": "",
                    "description": "Name of the DHCP option policy to assign to the relay labels.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "dhcp_option_policy"
                },
                "dhcp_option_policy_version": {
                    "type": "integer",
                    "default": 1,
                    "description": "",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "dhcp_option_policy_version"
                },
                "names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of DHCP Relay Policies to assign to the bridge domain"
                },
                "scope": {
                    "type": "string",
                    "default": "",
                    "description": "(default: infra) -  The owner of the target relay. The DHCP relay is any host that forwards DHCP packets between clients and servers. The relays are used to forward requests and replies between clients and servers when they are not on the same physical subnet. The relay owner can be:\n  * infra - The owner is the infrastructure\n  * tenant - The owner is the tenant",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "scope"
                },
                "version": {
                    "type": "integer",
                    "default": 1,
                    "description": "Compatibility catalog version.  Options are:\n  - v1\n  - v2",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "version"
                }
            },
            "required": [
                "dhcp_option_policy",
                "dhcp_option_policy_version",
                "names",
                "scope",
                "version"
            ],
            "title": "DHCPRelayLabels"
        },
        "Tenants:Networking:BridgeDomains:General": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "advertise_host_routes": {
                    "type": "boolean",
                    "default": true,
                    "description": ".  Default is false.",
                    "title": "advertise_host_routes"
                },
                "alias": {
                    "$ref": "#/definitions/Tenants:Alias"
                },
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "annotations": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "(APIC Only) You can add arbitrary key:value pairs of metadata to an object as annotations (tagAnnotation). Annotations are provided for the user's custom purposes, such as descriptions, markers for personal scripting or API calls, or flags for monitoring tools or orchestration applications such as Cisco Multi-Site Orchestrator (MSO).",
                    "items": {
                        "$ref": "#/definitions/Tenants:Annotations"
                    },
                    "title": "annotations - tagAnnotation"
                },
                "arp_flooding": {
                    "type": "boolean",
                    "default": true,
                    "description": "\nDefault is false",
                    "title": "arp_flooding"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "endpoint_retention_policy": {
                    "type": "string",
                    "default": "",
                    "description": "(APIC Only) Provides the parameters for the lifecycle of the endpoint group in the bridge domain.  This will assign the policy to the BD.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "endpoint_retention_policy"
                },
                "global_alias": {
                    "$ref": "#/definitions/Tenants:GlobalAlias"
                },
                "igmp_interface_policy": {
                    "type": "string",
                    "default": "",
                    "description": "(APIC Only) Name of the IGMP Interface Policy to assign to the Bridge Domain.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "igmp_interface_policy"
                },
                "igmp_snooping_policy": {
                    "type": "string",
                    "default": "",
                    "description": "(APIC Only) Name of the IGMP Snooping Policy to assign to the Bridge Domain.  IGMP snooping is the process of listening to Internet Group Management Protocol (IGMP) network traffic. The feature allows a network switch to listen in on the IGMP conversation between hosts and routers and filter multicasts links that do not need them, thus controlling which ports receive specific multicast traffic.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "igmp_snooping_policy"
                },
                "ipv6_l3_unknown_multicast": {
                    "type": "string",
                    "default": "",
                    "description": "The node forwarding parameter for Layer 3 unknown Multicast destinations. The value can be:\n  * flood: (default) - Send the data to the front panel ports if a router port exists on any bridge domain or send the data to the fabric if the data is in transit.\n  * opt-flood - Send the data only to router ports in the fabric.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "ipv6_l3_unknown_multicast"
                },
                "l2_unknown_unicast": {
                    "type": "string",
                    "default": "",
                    "description": "By default, unicast traffic is flooded to all Layer 2 ports. If enabled, unicast traffic flooding is blocked at a specific port, only permitting egress traffic with MAC addresses that are known to exist on the port. The method can be:\n  * flood\n  * proxy: (default)\n  * NOTE: When the BD has L2 Unknown Unicast set to Flood, if an endpoint is deleted the system deletes it from both the local leaf switches as well as the remote leaf switches where the BD is deployed, by selecting Clear Remote MAC Entries. Without this feature, the remote leaf continues to have this endpoint learned until the timer expires.\n  * CAUTION:  Modifying the L2 Unknown Unicast setting causes traffic to bounce (go down and up) on interfaces to devices attached to EPGs associated with this bridge domain.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "l2_unknown_unicast"
                },
                "l3_unknown_multicast_flooding": {
                    "type": "string",
                    "default": "",
                    "description": "The node forwarding parameter for Layer 3 unknown Multicast destinations. The value can be:\n  * flood: (default) - Send the data to the front panel ports if a router port exists on any bridge domain or send the data to the fabric if the data is in transit.\n  * opt-flood - Send the data only to router ports in the fabric.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "l3_unknown_multicast_flooding"
                },
                "limit_ip_learn_to_subnets": {
                    "type": "boolean",
                    "default": true,
                    "description": "Default is true.",
                    "title": "limit_ip_learn_to_subnets"
                },
                "mld_snoop_policy": {
                    "type": "string",
                    "default": "",
                    "description": "(APIC Only) Name of the MLD Snooping Policy to assign to the Bridge Domain.  The Multicast Listener Discovery (MLD) Snooping policy enables the efficient distribution of IPv6 multicast traffic between hosts and routers. It is a Layer 2 feature that restricts IPv6 multicast traffic within a bridge domain to a subset of ports that have transmitted or received MLD queries or reports.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "mld_snoop_policy"
                },
                "multi_destination_flooding": {
                    "type": "string",
                    "default": "",
                    "description": "The multiple destination forwarding method for L2 Multicast, Broadcast, and Link Layer traffic types. The method can be:\n  * bd-flood: (default) - Sends the data to all ports on the same bridge domain.\n  * drop - Drops Packet. Never sends the data to any other ports.\n  * encap-flood - Sends the data to the ports on the same VLAN within the bridge domain regardless of the EPG, with the exception that data for the following protocols is flooded to the entire bridge domain:\n  * ARP/GARP\n  * BGP\n  * EIGRP\n  * IGMP\n  * IS-IS\n  * OSPF/OSPFv6\n  * ND\n  * PIM",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "multi_destination_flooding"
                },
                "pim": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enables the Protocol Independent Multicast (PIM) protocol.  Default is false.",
                    "title": "pim"
                },
                "pimv6": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enables the Protocol Independent Multicast (PIM) IPv6 protocol.  Options are:\n  * false: (default)\n  * true",
                    "title": "pimv6"
                },
                "type": {
                    "type": "string",
                    "default": "",
                    "description": "(APIC Only) The Type of bridge domain to create.  Options are:\n  * fc\n  * regular: (default)",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "type"
                },
                "vrf": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "(default: default) - Name of the VRF to Assign to the Bridge Domain.",
                    "$ref": "#/definitions/Tenants:Networking:BridgeDomains:General:Vrf"
                }
            },
            "required": [
                "advertise_host_routes",
                "alias",
                "annotation",
                "annotations",
                "arp_flooding",
                "description",
                "endpoint_retention_policy",
                "global_alias",
                "igmp_interface_policy",
                "igmp_snooping_policy",
                "ipv6_l3_unknown_multicast",
                "l2_unknown_unicast",
                "l3_unknown_multicast_flooding",
                "limit_ip_learn_to_subnets",
                "mld_snoop_policy",
                "multi_destination_flooding",
                "pim",
                "pimv6",
                "type",
                "vrf"
            ],
            "title": "General"
        },
        "Tenants:Networking:BridgeDomains:General:Vrf": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "name": {
                    "type": "string",
                    "default": "",
                    "description": "Name of the Contract to assign to the EPG.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "name"
                },
                "schema": {
                    "type": "string",
                    "default": "",
                    "description": "The Name of the Schema.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "schema"
                },
                "template": {
                    "type": "string",
                    "default": "",
                    "description": "The Template name to assign to the Schema.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "template"
                },
                "tenant": {
                    "type": "string",
                    "default": "",
                    "description": "The Name of the Tenant the Contract exists in.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "tenant"
                }
            },
            "required": [
                "name",
                "schema",
                "template",
                "tenant"
            ],
            "title": "Vrf"
        },
        "Tenants:Networking:BridgeDomains:L3Configurations": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "associated_l3outs": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "List of L3Outs to Associate to the Bridge Domain.",
                    "items": {
                        "$ref": "#/definitions/Tenants:Networking:BridgeDomains:L3Configurations:AssociatedL3Outs"
                    }
                },
                "custom_mac_address": {
                    "type": "string",
                    "default": "",
                    "description": "(SVI MAC Address in NDO) The MAC address of the bridge domain (BD) or switched virtual interface (SVI). By default, a BD takes the fabric wide default MAC address of 00:22:BD:F8:19:FF. Configure this property to override the default address.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "custom_mac_address"
                },
                "ep_move_detection_mode": {
                    "type": "boolean",
                    "default": true,
                    "description": "When the GARP based detection option is enabled, Cisco ACI will trigger an endpoint move based on GARP packets if the move occurs on the same interface and same EPG.  The Default is 'false', but it is a best practice to set to 'true', if ARP Flooding is enabled.\n  * false: (default)\n  * true\n  * Note: This can only be used when ARP Flooding is enabled.",
                    "title": "ep_move_detection_mode"
                },
                "link_local_ipv6_address": {
                    "type": "string",
                    "default": "",
                    "description": "Link-Local IPv6 address (LLA) for the bridge domain.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "link_local_ipv6_address"
                },
                "subnets": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "List of Subnets and their Settings to Assign to the Bridge Domain.",
                    "items": {
                        "$ref": "#/definitions/Tenants:Networking:BridgeDomains:L3Configurations:Subnets"
                    },
                    "title": ""
                },
                "unicast_routing": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable or disable unicast routing on the Bridge Domain.   Default is true.\n  * Note: We recommend disabling, if you have not configured a subnet on the BD.",
                    "title": "unicast_routing"
                },
                "virtual_mac_address": {
                    "type": "string",
                    "default": "",
                    "description": "The Bridge Domain Virtual MAC address.  The BD virtual MAC address and the subnet virutal IP address must be the same for all ACI fabrics for that bridge domain. Multiple bridge domains can be configured to communicate across connected ACI fabrics. The virtual MAC address and the virtual IP address can be shared across bridge domains.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "virtual_mac_address"
                }
            },
            "required": [
                "associated_l3outs",
                "custom_mac_address",
                "ep_move_detection_mode",
                "link_local_ipv6_address",
                "subnets",
                "unicast_routing",
                "virtual_mac_address"
            ],
            "title": "L3Configurations"
        },
        "Tenants:Networking:BridgeDomains:L3Configurations:AssociatedL3Outs": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "l3out": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Names of the L3Outs to Associate. One L3Out with APIC, One per site for Nexus Dashboard Orchestrator"
                },
                "route_profile": {
                    "type": "string",
                    "default": "",
                    "description": "Name of a Route Profile to associate to the L3Out.\n**Note: Only one L3out can have a route_profile associated to it for the BD",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "route_profile"
                },
                "tenant": {
                    "type": "string",
                    "default": "",
                    "description": "The Name of the Tenant the Contract exists in.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "tenant"
                }
            },
            "required": [
                "l3out",
                "route_profile",
                "tenant"
            ],
            "title": "AssociatedL3Outs"
        },
        "Tenants:Networking:BridgeDomains:L3Configurations:Subnets": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "address": {
                    "type": "string",
                    "default": "",
                    "description": "The server IP address.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "address"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "ip_data_plane_learning": {
                    "type": "string",
                    "default": "",
                    "description": "Choose whether to enable or disable IP address learning for this subnet. The possible values are:\n disabled - Disables IP address learning for this subnet.\n enabled: (default) - Enables IP address learning for this subnet.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "ip_data_plane_learning"
                },
                "make_this_ip_address_primary": {
                    "type": "boolean",
                    "default": true,
                    "description": "Indicates if the subnet is the primary IP address for the bridge domain (preferred over the available alternatives).  Default is false.",
                    "title": "make_this_ip_address_primary"
                },
                "scope": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "(default: infra) -  The owner of the target relay. The DHCP relay is any host that forwards DHCP packets between clients and servers. The relays are used to forward requests and replies between clients and servers when they are not on the same physical subnet. The relay owner can be:\n  * infra - The owner is the infrastructure\n  * tenant - The owner is the tenant",
                    "$ref": "#/definitions/Tenants:Networking:BridgeDomains:L3Configurations:Subnets:Scope"
                },
                "subnet_control": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "",
                    "$ref": "#/definitions/Tenants:Networking:BridgeDomains:L3Configurations:Subnets:SubnetControl"
                },
                "treat_as_virtual_ip_address": {
                    "type": "boolean",
                    "default": true,
                    "description": "An IP address that doesn't correspond to an actual physical network interface, that is shared by multiple devices.  This is typically used for the Common Pervasive Gateway use case. For more information, see Common Pervasive Gateway in Cisco APIC Layer 3 Configuration Guide.   Default is false.",
                    "title": "treat_as_virtual_ip_address"
                }
            },
            "required": [
                "address",
                "description",
                "ip_data_plane_learning",
                "make_this_ip_address_primary",
                "scope",
                "subnet_control",
                "treat_as_virtual_ip_address"
            ],
            "title": "L3ConfigurationsSubnets"
        },
        "Tenants:Networking:BridgeDomains:L3Configurations:Subnets:Scope": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "advertise_externally": {
                    "type": "boolean",
                    "default": true,
                    "description": "The subnet can be exported to a routed connection.  Default is false.",
                    "title": "advertise_externally"
                },
                "shared_between_vrfs": {
                    "type": "boolean",
                    "default": true,
                    "description": "The subnet can be shared with and exported to multiple contexts (VRFs) in the same tenant or across tenants as part of a shared service. An example of a shared service is a routed connection to an EPG present in another context (VRF) in a different tenant. This enables traffic to pass in both directions across contexts (VRFs). An EPG that provides a shared service must have its subnet configured under that EPG (not under a bridge domain), and its scope must be set to advertised externally, and shared between VRFs.  Default is false.\nNote: Shared subnets must be unique across the contexts (VRF) involved in the communication. When a subnet under an EPG provides a Layer 3 external network shared service, such a subnet must be globally unique within the entire ACI fabric.",
                    "title": "shared_between_vrfs"
                }
            },
            "required": [
                "advertise_externally",
                "shared_between_vrfs"
            ],
            "title": "Scope"
        },
        "Tenants:Networking:BridgeDomains:L3Configurations:Subnets:SubnetControl": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "neighbor_discovery": {
                    "type": "boolean",
                    "default": true,
                    "description": "(APIC Only) Enables Neighbor Discovery on the subnet. Default is false.",
                    "title": "neighbor_discovery"
                },
                "no_default_svi_gateway": {
                    "type": "boolean",
                    "default": true,
                    "description": "When using Cisco ACI Multi-Site with this APIC fabric domain (site), indicates that the VRF, EPG, or BD using this subnet are mirrored from another site, which has a relationship to this site through a contract. Do not modify or delete the mirrored objects.  Default is false.",
                    "title": "no_default_svi_gateway"
                },
                "querier_ip": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enables IGMP Snooping on the subnet.   Default is false.",
                    "title": "querier_ip"
                }
            },
            "required": [
                "neighbor_discovery",
                "no_default_svi_gateway",
                "querier_ip"
            ],
            "title": "SubnetControl"
        },
        "Tenants:Networking:BridgeDomains:Ndo": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "template": {
                    "type": "null",
                    "description": "The Template name to assign to the Schema."
                },
                "sites": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "(required when controller_type is ndo) - When using Nexus Dashboard Orchestrator the sites attribute is used to distinguish the site and cloud types.",
                    "items": {}
                }
            },
            "required": [
                "sites",
                "template"
            ],
            "title": "BridgeDomainsNdo"
        },
        "Tenants:Networking:L3Outs": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "alias": {
                    "$ref": "#/definitions/Tenants:Alias"
                },
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "annotations": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "You can add arbitrary key:value pairs of metadata to an object as annotations (tagAnnotation). Annotations are provided for the user's custom purposes, such as descriptions, markers for personal scripting or API calls, or flags for monitoring tools or orchestration applications such as Cisco Multi-Site Orchestrator (MSO). Because APIC ignores these annotations and merely stores them with other object data, there are no format or content restrictions imposed by APIC.",
                    "items": {
                        "$ref": "#/definitions/Tenants:Annotations"
                    },
                    "title": "annotations - (APIC Only) You can add arbitrary key:value pairs of metadata to an object as annotations (tagAnnotation). Annotations are provided for the user's custom purposes, such as descriptions, markers for personal scripting or API calls, or flags for monitoring tools or orchestration applications such as Cisco Multi-Site Orchestrator (MSO)."
                },
                "consumer_label": {
                    "type": "string",
                    "default": "",
                    "description": "The optional contract consumer label that allows non-infra tenants to consume any Layer 3 EVPN routed policy that is assigned a provider label.  This field specifies the provider label of the Layer 3 EVPN routed policy that this policy wants to use.\n  * value must be 'hcloudGolfLabel' if assigned.\nNote:  Not applicable to L3 outside policies belonging to Tenant infra.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "consumer_label"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "enable_bgp": {
                    "type": "boolean",
                    "default": true,
                    "description": "Flag to enable BGP for the L3Out.  Default is false",
                    "title": "enable_bgp"
                },
                "external_epgs": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "List of External EPG(s) with their attributes for the L3Out.",
                    "items": {
                        "$ref": "#/definitions/Tenants:Networking:L3Outs:ExternalEpgs"
                    },
                    "title": ""
                },
                "global_alias": {
                    "$ref": "#/definitions/Tenants:GlobalAlias"
                },
                "l3_domain": {
                    "type": "string",
                    "default": "",
                    "description": "Name of the L3 Domain Policy.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "l3_domain"
                },
                "logical_node_profiles": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Networking:L3Outs:LogicalNodeProfiles"
                    },
                    "title": ""
                },
                "ndo": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "",
                    "$ref": "#/definitions/Tenants:Networking:L3Outs:Ndo"
                },
                "pim": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enables the Protocol Independent Multicast (PIM) protocol.  Default is false.",
                    "title": "pim"
                },
                "pimv6": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enables the Protocol Independent Multicast (PIM) IPv6 protocol.  Options are:\n  * false: (default)\n  * true",
                    "title": "pimv6"
                },
                "provider_label": {
                    "type": "string",
                    "default": "",
                    "description": "The contract provider label for this policy. Any tenant that uses this Layer 3 EVPN routed connection must specify this label as its consumer label.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "provider_label"
                },
                "ospf_external_profile": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "",
                    "$ref": "#/definitions/Tenants:Networking:L3Outs:OSPFExternalProfile"
                },
                "route_control_enforcement": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "The enforce route control type.\nNote1: The default is export set to true. Export control is supported with BGP, OSPF, and EIGRP. import control is supported only with BGP and OSPF.\nNote2: Enabling import enables the import_route_control_subnet option on the Create Subnet dialog box under the Create External EPG panel.",
                    "$ref": "#/definitions/Tenants:Networking:L3Outs:RouteControlEnforcement"
                },
                "route_control_for_dampening": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "Dampening minimizes propagation into the fabric of flapping e-BGP routes received from external routers connected to border leaf switches (BLs). Frequently flapping routes from external routers are suppressed on BLs based on configured criteria and prohibited from redistribution to iBGP peers (ACI spine switches). Suppressed routes are reused after a configured time criteria.",
                    "$ref": "#/definitions/Tenants:Networking:L3Outs:RouteControlForDampening"
                },
                "route_profile_for_interleak": {
                    "type": "string",
                    "default": "",
                    "description": "Assign a Route Map/Profile. A route profile allows the user to set attributes, such as community, preference, and metric for route leaking from OSPF to BGP.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "route_profile_for_interleak"
                },
                "route_profiles_for_redistribution": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "",
                    "$ref": "#/definitions/Tenants:Networking:L3Outs:RouteProfilesForRedistribution"
                },
                "target_dscp": {
                    "type": "string",
                    "default": "",
                    "description": "The target differentiated services code point (DSCP). The options are as follows:\n  * AF11 - low drop Priority\n  * AF12 - medium drop Priority\n  * AF13 - high drop Priority\n  * AF21 - low drop Immediate\n  * AF22 - medium drop Immediate\n  * AF23 - high drop Immediate\n  * AF31 - low drop Flash\n  * AF32 - medium drop Flash\n  * AF33 - high drop Flash\n  * AF41 - low drop-Flash Override\n  * AF42 - medium drop Flash Override\n  * AF43 - high drop Flash Override\n  * CS0 - class of service level 0\n  * CS1 - class of service level 1\n  * CS2 - class of service level 2\n  * CS3 - class of service level 3\n  * CS4 - class of service level 4\n  * CS5 - class of service level 5\n  * CS6 - class of service level 6\n  * CS7 - class of service level 7\n  * EF - Expedited Forwarding Critical\n  * VA - Voice Admit\n  * unspecified: (default)",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "target_dscp"
                },
                "vrf": {
                    "type": "string",
                    "default": "",
                    "description": "(default: default) - Name of the VRF to Assign to the Bridge Domain.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "vrf"
                }
            },
            "required": [
                "alias",
                "annotation",
                "annotations",
                "consumer_label",
                "description",
                "enable_bgp",
                "external_epgs",
                "global_alias",
                "l3_domain",
                "logical_node_profiles",
                "ndo",
                "ospf_external_profile",
                "pim",
                "pimv6",
                "provider_label",
                "route_control_enforcement",
                "route_control_for_dampening",
                "route_profile_for_interleak",
                "route_profiles_for_redistribution",
                "target_dscp",
                "vrf"
            ],
            "title": "L3Outs"
        },
        "Tenants:Networking:L3Outs:ExternalEpgs": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "alias": {
                    "$ref": "#/definitions/Tenants:Alias"
                },
                "contract_exception_tag": {
                    "type": "integer",
                    "default": 1,
                    "description": "Contracts between EPGs are enhanced to include exceptions to subjects or contracts. This enables a subset of EPGs to be excluded in contract filtering. For example, a provider EPG can communicate with all consumer EPGs except those that match criteria configured in a Subject Exception in the contract governing their communication.  Assign a Tag Attribute to the EPG.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "contract_exception_tag"
                },
                "contracts": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "List of Contracts and their attributes to assign to the EPG.",
                    "items": {
                        "$ref": "#/definitions/Tenants:Networking:L3Outs:ExternalEpgs:Contracts"
                    },
                    "title": ""
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "flood_on_encapsulation": {
                    "type": "string",
                    "default": "",
                    "description": "Specifies whether flooding is enabled for the EPG or not. If flooding is disabled, the value specified in the BD mode is considered.  Options are:\n  * disabled: (default)\n  * enabled",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "flood_on_encapsulation"
                },
                "label_match_criteria": {
                    "type": "string",
                    "default": "",
                    "description": "The provider label match criteria.  Options are:\n  * All\n  * AtleastOne: (default)\n  * AtmostOne\n  * None",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "label_match_criteria"
                },
                "name": {
                    "type": "string",
                    "default": "",
                    "description": "Name of the Contract to assign to the EPG.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "name"
                },
                "preferred_group_member": {
                    "type": "boolean",
                    "default": true,
                    "description": "If an EPG or External EPG is marked as a Preferred Group Member, it is put into an internally created contract group where all members of the group can communicate with each other without requiring a contract between them.  The options are:\n  * false: (default) - The External EPG is not included in the subgroup.\n  * true - The External EPG is included in the subgroup.",
                    "title": "preferred_group_member"
                },
                "qos_class": {
                    "$ref": "#/definitions/Tenants:QosClass"
                },
                "subnets": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "List of Subnets and their Settings to Assign to the Bridge Domain.",
                    "items": {
                        "$ref": "#/definitions/Tenants:Networking:L3Outs:ExternalEpgs:Subnets"
                    },
                    "title": ""
                },
                "route_control_profiles": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "Enter the name and direction of the route control profile.",
                    "items": {
                        "$ref": "#/definitions/Tenants:Networking:L3Outs:ExternalEpgs:RouteControlProfiles"
                    },
                    "title": ""
                },
                "target_dscp": {
                    "type": "string",
                    "default": "",
                    "description": "The target differentiated services code point (DSCP). The options are as follows:\n  * AF11 - low drop Priority\n  * AF12 - medium drop Priority\n  * AF13 - high drop Priority\n  * AF21 - low drop Immediate\n  * AF22 - medium drop Immediate\n  * AF23 - high drop Immediate\n  * AF31 - low drop Flash\n  * AF32 - medium drop Flash\n  * AF33 - high drop Flash\n  * AF41 - low drop-Flash Override\n  * AF42 - medium drop Flash Override\n  * AF43 - high drop Flash Override\n  * CS0 - class of service level 0\n  * CS1 - class of service level 1\n  * CS2 - class of service level 2\n  * CS3 - class of service level 3\n  * CS4 - class of service level 4\n  * CS5 - class of service level 5\n  * CS6 - class of service level 6\n  * CS7 - class of service level 7\n  * EF - Expedited Forwarding Critical\n  * VA - Voice Admit\n  * unspecified: (default)",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "target_dscp"
                }
            },
            "required": [
                "alias",
                "contract_exception_tag",
                "contracts",
                "description",
                "flood_on_encapsulation",
                "label_match_criteria",
                "name",
                "preferred_group_member",
                "qos_class",
                "route_control_profiles",
                "subnets",
                "target_dscp"
            ],
            "title": "ExternalEpgs"
        },
        "Tenants:Networking:L3Outs:ExternalEpgs:Contracts": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "name": {
                    "type": "string",
                    "default": "",
                    "description": "Name of the Contract to assign to the EPG.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "name"
                },
                "contract_type": {
                    "type": "string",
                    "default": "",
                    "description": "The Type of Contract.  Options are:\n  * consumed\n  * contract_interface\n  * intra_epg\n  * provided\n  * taboo",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "contract_type"
                },
                "qos_class": {
                    "$ref": "#/definitions/Tenants:QosClass"
                },
                "schema": {
                    "type": "string",
                    "default": "",
                    "description": "The Name of the Schema.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "schema"
                },
                "template": {
                    "type": "string",
                    "default": "",
                    "description": "The Template name to assign to the Schema.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "template"
                },
                "tenant": {
                    "type": "string",
                    "default": "",
                    "description": "The Name of the Tenant the Contract exists in.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "tenant"
                }
            },
            "required": [
                "contract_type",
                "name",
                "qos_class",
                "schema",
                "template",
                "tenant"
            ],
            "title": "ExternalEpgsContracts"
        },
        "Tenants:Networking:L3Outs:ExternalEpgs:RouteControlProfiles": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "direction": {
                    "type": "string",
                    "default": "",
                    "description": "The direction of control.  Options are:\n  * export\n  * import",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "direction"
                },
                "route_map": {
                    "type": "string",
                    "default": "",
                    "description": "The Name of a Route Map for import and export route control",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "route_map"
                },
                "tenant": {
                    "type": "string",
                    "default": "",
                    "description": "The Name of the Tenant the Contract exists in.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "tenant"
                }
            },
            "required": [
                "direction",
                "route_map",
                "tenant"
            ],
            "title": "RouteControlProfiles"
        },
        "Tenants:Networking:L3Outs:ExternalEpgs:Subnets": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "aggregate": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "Aggregated Route for object l3out static route. Default is false.",
                    "$ref": "#/definitions/Tenants:Networking:L3Outs:ExternalEpgs:Subnets:Aggregate"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "external_epg_classification": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "",
                    "$ref": "#/definitions/Tenants:Networking:L3Outs:ExternalEpgs:Subnets:ExternalEpgClassification"
                },
                "route_control": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "",
                    "$ref": "#/definitions/Tenants:Networking:L3Outs:ExternalEpgs:Subnets:RouteControl"
                },
                "route_control_profiles": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "Enter the name and direction of the route control profile.",
                    "items": {
                        "$ref": "#/definitions/Tenants:Networking:L3Outs:ExternalEpgs:RouteControlProfiles"
                    },
                    "title": ""
                },
                "route_summarization_policy": {
                    "type": "string",
                    "default": "",
                    "description": "Available if you set export_route_control_subnet to true.  The Name of the BGP Route Summarization Policy.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "route_summarization_policy"
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Subnets and their Settings to Assign to the Bridge Domain."
                }
            },
            "required": [
                "aggregate",
                "description",
                "external_epg_classification",
                "route_control",
                "route_control_profiles",
                "route_summarization_policy",
                "subnets"
            ],
            "title": "ExternalEpgsSubnets"
        },
        "Tenants:Networking:L3Outs:ExternalEpgs:Subnets:Aggregate": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "aggregate_export": {
                    "type": "boolean",
                    "default": true,
                    "description": "Exports all routes of a subnet (0/0 subnets).  Default is false.",
                    "title": "aggregate_export"
                },
                "aggregate_import": {
                    "type": "boolean",
                    "default": true,
                    "description": "Imports all routes of a subnet (0/0 subnets).  Default is false.",
                    "title": "aggregate_import"
                },
                "aggregate_shared_routes": {
                    "type": "boolean",
                    "default": true,
                    "description": "When a route is learned in one VRF that needs to be leaked into another VRF, the routes can be leaked by matching the subnet exactly, or can be leaked aggregated according to a subnet mask.  Default is false.",
                    "title": "aggregate_shared_routes"
                }
            },
            "required": [
                "aggregate_export",
                "aggregate_import",
                "aggregate_shared_routes"
            ],
            "title": "Aggregate"
        },
        "Tenants:Networking:L3Outs:ExternalEpgs:Subnets:ExternalEpgClassification": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "external_subnets_for_external_epg": {
                    "type": "boolean",
                    "default": true,
                    "description": "A classifier for the external EPG, similar to an Access Control List (ACL). The rules and contracts in the external EPG apply at the VRF level to networks matching this subnet.  Default is true.",
                    "title": "external_subnets_for_external_epg"
                },
                "shared_security_import_subnet": {
                    "type": "boolean",
                    "default": true,
                    "description": "Configures the classifier for the subnets in the VRF where the routes are leaked.  Default is false.",
                    "title": "shared_security_import_subnet"
                }
            },
            "required": [
                "external_subnets_for_external_epg",
                "shared_security_import_subnet"
            ],
            "title": "ExternalEpgClassification"
        },
        "Tenants:Networking:L3Outs:ExternalEpgs:Subnets:RouteControl": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "export_route_control_subnet": {
                    "type": "boolean",
                    "default": true,
                    "description": "Controls which external networks are advertised out of the fabric using route-maps and IP prefix lists. An IP prefix list is created on the border leaf switch for each subnet that is defined. The export control policy is enabled by default and is supported for BGP, EIGRP, and OSPF.    Default is false.",
                    "title": "export_route_control_subnet"
                },
                "import_route_control_subnet": {
                    "type": "boolean",
                    "default": true,
                    "description": "Controls the subnets allowed into the fabric, and can include set and match rules to filter routes. Supported for BGP and OSPF, but not for EIGRP; if the user enables the import control policy for an unsupported protocol, it will be automatically ignored. The import control policy is not enabled by default, but you can enable it by navigating to the configured L3Out. Click the Policy/Main tabs to display the Properties window for the configured L3Out, then check the box next to Route Control Enforcement.  Default is false.",
                    "title": "import_route_control_subnet"
                },
                "shared_route_control_subnet": {
                    "type": "boolean",
                    "default": true,
                    "description": "Controls which external prefixes are advertised to other VRFs, which have a contract interface for shared L3Out services.  Default is false.",
                    "title": "shared_route_control_subnet"
                }
            },
            "required": [
                "export_route_control_subnet",
                "import_route_control_subnet",
                "shared_route_control_subnet"
            ],
            "title": "SubnetsRouteControl"
        },
        "Tenants:Networking:L3Outs:LogicalNodeProfiles": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "alias": {
                    "$ref": "#/definitions/Tenants:Alias"
                },
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "annotations": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "You can add arbitrary key:value pairs of metadata to an object as annotations (tagAnnotation). Annotations are provided for the user's custom purposes, such as descriptions, markers for personal scripting or API calls, or flags for monitoring tools or orchestration applications such as Cisco Multi-Site Orchestrator (MSO). Because APIC ignores these annotations and merely stores them with other object data, there are no format or content restrictions imposed by APIC.",
                    "items": {
                        "$ref": "#/definitions/Tenants:Annotations"
                    },
                    "title": "annotations - (APIC Only) You can add arbitrary key:value pairs of metadata to an object as annotations (tagAnnotation). Annotations are provided for the user's custom purposes, such as descriptions, markers for personal scripting or API calls, or flags for monitoring tools or orchestration applications such as Cisco Multi-Site Orchestrator (MSO)."
                },
                "color_tag": {
                    "$ref": "#/definitions/Tenants:ColorTag"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "logical_interface_profiles": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Networking:L3Outs:LogicalNodeProfiles:LogicalInterfaceProfiles"
                    },
                    "title": ""
                },
                "name": {
                    "type": "string",
                    "default": "",
                    "description": "Name of the Contract to assign to the EPG.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "name"
                },
                "nodes": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "If the Path type is vpc this should be a list of 2 leaf's.  Otherwise a list of 1 leaf.",
                    "items": {
                        "$ref": "#/definitions/Tenants:Networking:L3Outs:LogicalNodeProfiles:Nodes"
                    },
                    "title": ""
                },
                "static_routes": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "Map of Static route attributes",
                    "items": {
                        "$ref": "#/definitions/Tenants:Networking:L3Outs:LogicalNodeProfiles:StaticRoutes"
                    },
                    "title": ""
                },
                "pod_id": {
                    "type": "integer",
                    "default": 1,
                    "description": "Identifier of the pod where the node is located.  Unless you are configuring Multi-Pod, this should always be 1.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "pod_id"
                },
                "target_dscp": {
                    "type": "string",
                    "default": "",
                    "description": "The target differentiated services code point (DSCP). The options are as follows:\n  * AF11 - low drop Priority\n  * AF12 - medium drop Priority\n  * AF13 - high drop Priority\n  * AF21 - low drop Immediate\n  * AF22 - medium drop Immediate\n  * AF23 - high drop Immediate\n  * AF31 - low drop Flash\n  * AF32 - medium drop Flash\n  * AF33 - high drop Flash\n  * AF41 - low drop-Flash Override\n  * AF42 - medium drop Flash Override\n  * AF43 - high drop Flash Override\n  * CS0 - class of service level 0\n  * CS1 - class of service level 1\n  * CS2 - class of service level 2\n  * CS3 - class of service level 3\n  * CS4 - class of service level 4\n  * CS5 - class of service level 5\n  * CS6 - class of service level 6\n  * CS7 - class of service level 7\n  * EF - Expedited Forwarding Critical\n  * VA - Voice Admit\n  * unspecified: (default)",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "target_dscp"
                }
            },
            "required": [
                "alias",
                "annotation",
                "annotations",
                "color_tag",
                "description",
                "logical_interface_profiles",
                "name",
                "nodes",
                "pod_id",
                "static_routes",
                "target_dscp"
            ],
            "title": "LogicalNodeProfiles"
        },
        "Tenants:Networking:L3Outs:LogicalNodeProfiles:LogicalInterfaceProfiles": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "arp_policy": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "arp_policy"
                },
                "auto_state": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "auto_state"
                },
                "bgp_peers": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Networking:L3Outs:LogicalNodeProfiles:LogicalInterfaceProfiles:BGPPeers"
                    },
                    "title": ""
                },
                "color_tag": {
                    "$ref": "#/definitions/Tenants:ColorTag"
                },
                "custom_qos_policy": {
                    "type": "string",
                    "default": "",
                    "description": "Name of a Custom QoS Policy to assign to the object or policy.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "custom_qos_policy"
                },
                "data_plane_policing_egress": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "data_plane_policing_egress"
                },
                "data_plane_policing_ingress": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "data_plane_policing_ingress"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "encap_scope": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "encap_scope"
                },
                "encap_vlan": {
                    "type": "integer",
                    "default": 1,
                    "description": "",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "encap_vlan"
                },
                "hsrp_interface_profiles": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Networking:L3Outs:LogicalNodeProfiles:LogicalInterfaceProfiles:HsrpInterfaceProfiles"
                    },
                    "title": ""
                },
                "interface_or_policy_group": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "interface_or_policy_group"
                },
                "interface_type": {
                    "type": "string",
                    "default": "",
                    "description": "Interface type for L3out floating SVI object. Allowed values are:\n  * ext-svi\n  * l3-port\n  * sub-interface\n  * unspecified: (default)",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "interface_type"
                },
                "ipv6_dad": {
                    "type": "string",
                    "default": "",
                    "description": "IPv6 dad for L3out floating SVI object. Allowed values are:\n  * disabled\n  * enabled: (default)",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "ipv6_dad"
                },
                "link_local_address": {
                    "type": "string",
                    "default": "",
                    "description": "Link local address for L3out floating SVI object. Default value: '::'.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "link_local_address"
                },
                "mac_address": {
                    "type": "string",
                    "default": "",
                    "description": "MAC address for L3out HSRP interface group object.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "mac_address"
                },
                "mode": {
                    "type": "string",
                    "default": "",
                    "description": "The Mode of the Port.  Options are:\n  * access - Select this mode if the traffic from the host is untagged (without VLAN ID). When a leaf switch is configured for an EPG to be untagged, for every port this EPG uses, the packets will exit the switch untagged.\n  * dot1p - Select this mode if the traffic from the host is tagged with a 802.1P tag. When an access port is configured with a single EPG in native 802.1p mode, its packets exit that port untagged. When an access port is configured with multiple EPGs, one in native 802.1p mode, and some with VLAN tags, all packets exiting that access port are tagged VLAN 0 for EPG configured in native 802.1p mode and for all other EPGs packets exit with their respective VLAN tags.\n  * trunk: (default) - Select this mode if the traffic from the host is tagged with a VLAN ID.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "mode"
                },
                "mtu": {
                    "type": "string",
                    "default": "",
                    "description": "Administrative MTU port on the aggregated interface for L3out floating SVI object. Range of allowed values is 576 to 9216. Default value is 'inherit'.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "mtu"
                },
                "name": {
                    "type": "string",
                    "default": "",
                    "description": "Name of the Contract to assign to the EPG.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "name"
                },
                "nd_policy": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "nd_policy"
                },
                "netflow_monitor_policies": {
                    "type": "array",
                    "items": {},
                    "description": "A NetFlow Monitor Policy identifies packet flows for ingress IP packets and provides statistics based on these packet flows."
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "If the Path type is vpc this should be a list of 2 leaf's.  Otherwise a list of 1 leaf."
                },
                "ospf_interface_profile": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Networking:L3Outs:LogicalNodeProfiles:LogicalInterfaceProfiles:OSPFInterfaceProfile"
                    },
                    "title": ""
                },
                "primary_preferred_address": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "primary_preferred_address"
                },
                "qos_class": {
                    "$ref": "#/definitions/Tenants:QosClass"
                },
                "secondary_addresses": {
                    "type": "array",
                    "items": {}
                },
                "svi_addresses": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Networking:L3Outs:LogicalNodeProfiles:LogicalInterfaceProfiles:SviAddresses"
                    },
                    "title": ""
                }
            },
            "required": [
                "arp_policy",
                "auto_state",
                "bgp_peers",
                "color_tag",
                "custom_qos_policy",
                "data_plane_policing_egress",
                "data_plane_policing_ingress",
                "description",
                "encap_scope",
                "encap_vlan",
                "hsrp_interface_profiles",
                "interface_or_policy_group",
                "interface_type",
                "ipv6_dad",
                "link_local_address",
                "mac_address",
                "mode",
                "mtu",
                "name",
                "nd_policy",
                "netflow_monitor_policies",
                "nodes",
                "ospf_interface_profile",
                "primary_preferred_address",
                "qos_class",
                "secondary_addresses",
                "svi_addresses"
            ],
            "title": "LogicalInterfaceProfiles"
        },
        "Tenants:Networking:L3Outs:LogicalNodeProfiles:LogicalInterfaceProfiles:BGPPeers": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "asn": {
                    "type": "null"
                },
                "address_type_controls": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "Ucast/Mcast Addr Type AF Control.",
                    "$ref": "#/definitions/Tenants:Networking:L3Outs:LogicalNodeProfiles:LogicalInterfaceProfiles:BGPPeers:AddressTypeControls"
                },
                "admin_state": {
                    "type": "string",
                    "default": "",
                    "description": "The administrative state of the object or policy. Allowed values are:\n  * disabled\n  * enabled: (default)",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "admin_state"
                },
                "allowed_self_as_count": {
                    "type": "integer",
                    "default": 1,
                    "description": "The number of occurrences of a local Autonomous System Number (ASN). Default value is 3.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "allowed_self_as_count"
                },
                "bgp_controls": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "The peer controls specify which Border Gateway Protocol (BGP) attributes are sent to a peer.",
                    "$ref": "#/definitions/Tenants:Networking:L3Outs:LogicalNodeProfiles:LogicalInterfaceProfiles:BGPPeers:BGPControls"
                },
                "bgp_peer_prefix_policy": {
                    "type": "string",
                    "default": "",
                    "description": "The Name of the BGP Peer Prefix Policy.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "bgp_peer_prefix_policy"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "ebgp_multihop_ttl": {
                    "type": "integer",
                    "default": 1,
                    "description": "Specifies time to live (TTL). Default value: 1.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "ebgp_multihop_ttl"
                },
                "local_as_number": {
                    "type": "integer",
                    "default": 1,
                    "description": "The local autonomous system number (ASN).",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "local_as_number"
                },
                "local_as_number_config": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "local_as_number_config"
                },
                "password": {
                    "type": "integer",
                    "default": 1,
                    "description": "",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "password"
                },
                "peer_controls": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "",
                    "$ref": "#/definitions/Tenants:Networking:L3Outs:LogicalNodeProfiles:LogicalInterfaceProfiles:BGPPeers:PeerControls"
                },
                "peer_level": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "peer_level"
                },
                "private_as_control": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "",
                    "$ref": "#/definitions/Tenants:Networking:L3Outs:LogicalNodeProfiles:LogicalInterfaceProfiles:BGPPeers:PrivateAsControl"
                },
                "route_control_profiles": {
                    "type": "array",
                    "items": {},
                    "description": "Enter the name and direction of the route control profile."
                },
                "weight_for_routes_from_neighbor": {
                    "type": "integer",
                    "default": 1,
                    "description": "The weight of the fault in calculating the health score of an object. A higher weight causes a higher degradation of the health score of the affected object. Default value is 0.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "weight_for_routes_from_neighbor"
                }
            },
            "required": [
                "address_type_controls",
                "addresses",
                "admin_state",
                "allowed_self_as_count",
                "asn",
                "bgp_controls",
                "bgp_peer_prefix_policy",
                "description",
                "ebgp_multihop_ttl",
                "local_as_number",
                "local_as_number_config",
                "password",
                "peer_controls",
                "peer_level",
                "private_as_control",
                "route_control_profiles",
                "weight_for_routes_from_neighbor"
            ],
            "title": "BGPPeers"
        },
        "Tenants:Networking:L3Outs:LogicalNodeProfiles:LogicalInterfaceProfiles:BGPPeers:AddressTypeControls": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "af_mcast": {
                    "type": "boolean",
                    "default": true,
                    "description": "Default is false.",
                    "title": "af_mcast"
                },
                "af_ucast": {
                    "type": "boolean",
                    "default": true,
                    "description": "Default is true.",
                    "title": "af_ucast"
                }
            },
            "required": [
                "af_mcast",
                "af_ucast"
            ],
            "title": "AddressTypeControls"
        },
        "Tenants:Networking:L3Outs:LogicalNodeProfiles:LogicalInterfaceProfiles:BGPPeers:BGPControls": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "allow_self_as": {
                    "type": "boolean",
                    "default": true,
                    "description": "Default is false.",
                    "title": "allow_self_as"
                },
                "as_override": {
                    "type": "boolean",
                    "default": true,
                    "description": "Default is false.",
                    "title": "as_override"
                },
                "disable_peer_as_check": {
                    "type": "boolean",
                    "default": true,
                    "description": "Default is false.",
                    "title": "disable_peer_as_check"
                },
                "next_hop_self": {
                    "type": "boolean",
                    "default": true,
                    "description": "Default is false.",
                    "title": "next_hop_self"
                },
                "send_community": {
                    "type": "boolean",
                    "default": true,
                    "description": "Default is true.",
                    "title": "send_community"
                },
                "send_domain_path": {
                    "type": "boolean",
                    "default": true,
                    "description": "Default is true.",
                    "title": "send_domain_path"
                },
                "send_extended_community": {
                    "type": "boolean",
                    "default": true,
                    "description": "",
                    "title": "send_extended_community"
                }
            },
            "required": [
                "allow_self_as",
                "as_override",
                "disable_peer_as_check",
                "next_hop_self",
                "send_community",
                "send_domain_path",
                "send_extended_community"
            ],
            "title": "BGPControls"
        },
        "Tenants:Networking:L3Outs:LogicalNodeProfiles:LogicalInterfaceProfiles:BGPPeers:PeerControls": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "bidirectional_forwarding_detection": {
                    "type": "boolean",
                    "default": true,
                    "description": "",
                    "title": "bidirectional_forwarding_detection"
                },
                "disable_connected_check": {
                    "type": "boolean",
                    "default": true,
                    "description": "",
                    "title": "disable_connected_check"
                }
            },
            "required": [
                "bidirectional_forwarding_detection",
                "disable_connected_check"
            ],
            "title": "PeerControls"
        },
        "Tenants:Networking:L3Outs:LogicalNodeProfiles:LogicalInterfaceProfiles:BGPPeers:PrivateAsControl": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "remove_all_private_as": {
                    "type": "boolean",
                    "default": true,
                    "description": "",
                    "title": "remove_all_private_as"
                },
                "remove_private_as": {
                    "type": "boolean",
                    "default": true,
                    "description": "",
                    "title": "remove_private_as"
                },
                "replace_private_as_with_local_as": {
                    "type": "boolean",
                    "default": true,
                    "description": "",
                    "title": "replace_private_as_with_local_as"
                }
            },
            "required": [
                "remove_all_private_as",
                "remove_private_as",
                "replace_private_as_with_local_as"
            ],
            "title": "PrivateAsControl"
        },
        "Tenants:Networking:L3Outs:LogicalNodeProfiles:LogicalInterfaceProfiles:HsrpInterfaceProfiles": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "alias": {
                    "$ref": "#/definitions/Tenants:Alias"
                },
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "groups": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "Map of group objects",
                    "items": {
                        "$ref": "#/definitions/Tenants:Networking:L3Outs:LogicalNodeProfiles:LogicalInterfaceProfiles:HsrpInterfaceProfiles:Groups"
                    },
                    "title": ""
                },
                "hsrp_interface_policy": {
                    "type": "string",
                    "default": "",
                    "description": "Name of the HSRP Interface Policy.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "hsrp_interface_policy"
                },
                "version": {
                    "type": "string",
                    "default": "",
                    "description": "Compatibility catalog version.  Options are:\n  - v1\n  - v2",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "version"
                }
            },
            "required": [
                "alias",
                "annotation",
                "description",
                "groups",
                "hsrp_interface_policy",
                "version"
            ],
            "title": "HsrpInterfaceProfiles"
        },
        "Tenants:Networking:L3Outs:LogicalNodeProfiles:LogicalInterfaceProfiles:HsrpInterfaceProfiles:Groups": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "alias": {
                    "$ref": "#/definitions/Tenants:Alias"
                },
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "group_id": {
                    "type": "integer",
                    "default": 1,
                    "description": "Group id for L3out HSRP interface group object.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "group_id"
                },
                "group_name": {
                    "type": "string",
                    "default": "",
                    "description": "Group name for L3out HSRP interface group object.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "group_name"
                },
                "group_type": {
                    "type": "string",
                    "default": "",
                    "description": "Group address-family type for L3out HSRP interface group object.  Options are:\n  * ipv4: (default)\n  * ipv6",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "group_type"
                },
                "hsrp_group_policy": {
                    "type": "string",
                    "default": "",
                    "description": "Name of the HSRP Group Policy",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "hsrp_group_policy"
                },
                "ip_address": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "ip_address"
                },
                "ip_obtain_mode": {
                    "type": "string",
                    "default": "",
                    "description": "IP obtain mode for L3out HSRP interface group object. Allowed values are:\n  * admin - Address is configured.\n  * auto - Auto configure IPv6 address.\n  * learn - Learn IP from HSRP Peer.\n  Default value is admin",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "ip_obtain_mode"
                },
                "mac_address": {
                    "type": "string",
                    "default": "",
                    "description": "MAC address for L3out HSRP interface group object.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "mac_address"
                },
                "name": {
                    "type": "string",
                    "default": "",
                    "description": "Name of the Contract to assign to the EPG.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "name"
                },
                "secondary_virtual_ips": {
                    "type": "array",
                    "items": {},
                    "description": "List of secondary virtual IP's to assign to the group."
                }
            },
            "required": [
                "alias",
                "annotation",
                "description",
                "group_id",
                "group_name",
                "group_type",
                "hsrp_group_policy",
                "ip_address",
                "ip_obtain_mode",
                "mac_address",
                "name",
                "secondary_virtual_ips"
            ],
            "title": "Groups"
        },
        "Tenants:Networking:L3Outs:LogicalNodeProfiles:LogicalInterfaceProfiles:OSPFInterfaceProfile": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "authentication_type": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "authentication_type"
                },
                "name": {
                    "type": "string",
                    "default": "",
                    "description": "Name of the Contract to assign to the EPG.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "name"
                },
                "ospf_key": {
                    "type": "integer",
                    "default": 1,
                    "description": "",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "ospf_key"
                },
                "ospf_interface_policy": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "ospf_interface_policy"
                }
            },
            "required": [
                "authentication_type",
                "description",
                "name",
                "ospf_interface_policy",
                "ospf_key"
            ],
            "title": "OSPFInterfaceProfile"
        },
        "Tenants:Networking:L3Outs:LogicalNodeProfiles:LogicalInterfaceProfiles:SviAddresses": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "link_local_addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "primary_preferred_addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "secondary_addresses": {
                    "type": "array",
                    "items": {}
                }
            },
            "required": [
                "link_local_addresses",
                "primary_preferred_addresses",
                "secondary_addresses"
            ],
            "title": "SviAddresses"
        },
        "Tenants:Networking:L3Outs:LogicalNodeProfiles:Nodes": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "node_id": {
                    "type": "integer",
                    "default": 1,
                    "description": "Node ID of the Node to assign to the Node Profile.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "node_id"
                },
                "router_id": {
                    "type": "string",
                    "default": "",
                    "description": "Router ID of the Node to assign to the Node Profile.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "router_id"
                },
                "use_router_id_as_loopback": {
                    "type": "boolean",
                    "default": true,
                    "description": "Should the Router ID be assigned as a Loopback on the Node.  Default is true.",
                    "title": "use_router_id_as_loopback"
                }
            },
            "required": [
                "node_id",
                "router_id",
                "use_router_id_as_loopback"
            ],
            "title": "Nodes"
        },
        "Tenants:Networking:L3Outs:LogicalNodeProfiles:StaticRoutes": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "aggregate": {
                    "type": "boolean",
                    "default": true,
                    "description": "Aggregated Route for object l3out static route. Default is false.",
                    "title": "aggregate"
                },
                "alias": {
                    "$ref": "#/definitions/Tenants:Alias"
                },
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "fallback_preference": {
                    "type": "integer",
                    "default": 1,
                    "description": "The administrative preference value for this route. This value is useful for resolving routes advertised from different protocols. Range of allowed values is '1-255'.  Default value is 1.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "fallback_preference"
                },
                "next_hop_addresses": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Networking:L3Outs:LogicalNodeProfiles:StaticRoutes:NextHopAddresses"
                    },
                    "title": ""
                },
                "prefixes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "route_control": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "",
                    "$ref": "#/definitions/Tenants:Networking:L3Outs:LogicalNodeProfiles:StaticRoutes:RouteControl"
                },
                "track_list": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "track_list"
                }
            },
            "required": [
                "aggregate",
                "alias",
                "annotation",
                "description",
                "fallback_preference",
                "next_hop_addresses",
                "prefixes",
                "route_control",
                "track_list"
            ],
            "title": "StaticRoutes"
        },
        "Tenants:Networking:L3Outs:LogicalNodeProfiles:StaticRoutes:NextHopAddresses": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "alias": {
                    "$ref": "#/definitions/Tenants:Alias"
                },
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "preference": {
                    "type": "integer",
                    "default": 1,
                    "description": "",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "preference"
                },
                "next_hop_ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "next_hop_type": {
                    "type": "string",
                    "default": "",
                    "description": "Component type.  Allowed values:\n  * none\n  * prefix: (default)",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "next_hop_type"
                },
                "track_list": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "track_list"
                },
                "track_member": {
                    "type": "array",
                    "items": {}
                }
            },
            "required": [
                "alias",
                "annotation",
                "description",
                "next_hop_ips",
                "next_hop_type",
                "preference",
                "track_list",
                "track_member"
            ],
            "title": "NextHopAddresses"
        },
        "Tenants:Networking:L3Outs:LogicalNodeProfiles:StaticRoutes:RouteControl": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "bfd": {
                    "type": "boolean",
                    "default": true,
                    "description": "Flag to Enable Bidirectional Forward Detection on the interface.  Default value is true.",
                    "title": "bfd"
                }
            },
            "required": [
                "bfd"
            ],
            "title": "StaticRoutesRouteControl"
        },
        "Tenants:Networking:L3Outs:Ndo": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "sites": {
                    "type": "string",
                    "default": "",
                    "description": "(required when controller_type is ndo) - When using Nexus Dashboard Orchestrator the sites attribute is used to distinguish the site and cloud types.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "sites"
                },
                "template": {
                    "type": "string",
                    "default": "",
                    "description": "The Template name to assign to the Schema.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "template"
                }
            },
            "required": [
                "sites",
                "template"
            ],
            "title": "L3OutsNdo"
        },
        "Tenants:Networking:L3Outs:OSPFExternalProfile": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "ospf_area_cost": {
                    "type": "integer",
                    "default": 1,
                    "description": "The OSPF area cost. The range is from 0 to 16777215.  Default is 1.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "ospf_area_cost"
                },
                "ospf_area_control": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "OSPF uses link-state advertisements (LSAs) to build its routing table.",
                    "$ref": "#/definitions/Tenants:Networking:L3Outs:OSPFExternalProfile:OSPFAreaControl"
                },
                "ospf_area_id": {
                    "type": "string",
                    "default": "",
                    "description": "The OSPF area identifier.  This can be dotted notation, 0.0.0.0, or a digit 0.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "ospf_area_id"
                },
                "ospf_area_type": {
                    "type": "string",
                    "default": "",
                    "description": "Sets the area type on the external routers in order to bring up OSPF adjacency. The type can be:\n  * nssa - Allows AS external routes within an NSSA.\n  * regular: (default) - Allows AS external routes within the area.\n  * stub - Does not allow AS External LSAs.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "ospf_area_type"
                }
            },
            "required": [
                "ospf_area_control",
                "ospf_area_cost",
                "ospf_area_id",
                "ospf_area_type"
            ],
            "title": "OSPFExternalProfile"
        },
        "Tenants:Networking:L3Outs:OSPFExternalProfile:OSPFAreaControl": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "send_redistribution_lsas_into_nssa_area": {
                    "type": "boolean",
                    "default": true,
                    "description": "LSA generated by the ASBR within a not-so-stubby area (NSSA). This LSA includes the link cost to an external autonomous system destination. NSSA External LSAs are flooded only within the local NSSA.  Default is false.",
                    "title": "send_redistribution_lsas_into_nssa_area"
                },
                "originate_summary_lsa": {
                    "type": "boolean",
                    "default": true,
                    "description": "LSA sent by the area border router to an external area.  Default is false.",
                    "title": "originate_summary_lsa"
                },
                "suppress_forwarding_address": {
                    "type": "boolean",
                    "default": true,
                    "description": "LSA generated by the ASBR within a not-so-stubby area (NSSA). This LSA does not include the link cost to an external autonomous system destination.  Default is false.",
                    "title": "suppress_forwarding_address"
                }
            },
            "required": [
                "originate_summary_lsa",
                "send_redistribution_lsas_into_nssa_area",
                "suppress_forwarding_address"
            ],
            "title": "OSPFAreaControl"
        },
        "Tenants:Networking:L3Outs:RouteControlEnforcement": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "import": {
                    "type": "boolean",
                    "default": true,
                    "description": "Default is false.",
                    "title": "import"
                }
            },
            "required": [
                "import"
            ],
            "title": "RouteControlEnforcement"
        },
        "Tenants:Networking:L3Outs:RouteControlForDampening": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "address_family": {
                    "type": "string",
                    "default": "",
                    "description": "Address Family for the dampening policy.  Options are:\n  * ipv4: (default)\n  * ipv6",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "address_family"
                },
                "route_map": {
                    "type": "string",
                    "default": "",
                    "description": "The Name of a Route Map for import and export route control",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "route_map"
                }
            },
            "required": [
                "address_family",
                "route_map"
            ],
            "title": "RouteControlForDampening"
        },
        "Tenants:Networking:L3Outs:RouteProfilesForRedistribution": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "l3out": {
                    "type": "string",
                    "default": "",
                    "description": "Names of the L3Outs to Associate. One L3Out with APIC, One per site for Nexus Dashboard Orchestrator",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "l3out"
                },
                "route_map": {
                    "type": "string",
                    "default": "",
                    "description": "The Name of a Route Map for import and export route control",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "route_map"
                },
                "source": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "source"
                }
            },
            "required": [
                "l3out",
                "route_map",
                "source"
            ],
            "title": "RouteProfilesForRedistribution"
        },
        "Tenants:Networking:Vrfs": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "alias": {
                    "$ref": "#/definitions/Tenants:Alias"
                },
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "annotations": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "You can add arbitrary key:value pairs of metadata to an object as annotations (tagAnnotation). Annotations are provided for the user's custom purposes, such as descriptions, markers for personal scripting or API calls, or flags for monitoring tools or orchestration applications such as Cisco Multi-Site Orchestrator (MSO). Because APIC ignores these annotations and merely stores them with other object data, there are no format or content restrictions imposed by APIC.",
                    "items": {
                        "$ref": "#/definitions/Tenants:Annotations"
                    },
                    "title": "annotations - (APIC Only) You can add arbitrary key:value pairs of metadata to an object as annotations (tagAnnotation). Annotations are provided for the user's custom purposes, such as descriptions, markers for personal scripting or API calls, or flags for monitoring tools or orchestration applications such as Cisco Multi-Site Orchestrator (MSO)."
                },
                "bd_enforcement_status": {
                    "type": "boolean",
                    "default": true,
                    "description": "",
                    "title": "bd_enforcement_status"
                },
                "bgp_timers": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "bgp_timers"
                },
                "bgp_timers_per_address_family": {
                    "type": "array",
                    "items": {}
                },
                "communities": {
                    "type": "array",
                    "items": {}
                },
                "controller_type": {
                    "type": "string",
                    "default": "",
                    "description": "The type of controller.  Options are:\n  * apic: (default)\n  * ndo",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "controller_type"
                },
                "create": {
                    "$ref": "#/definitions/Tenants:Create"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "eigrp_timers_per_address_family": {
                    "type": "array",
                    "items": {}
                },
                "endpoint_retention_policy": {
                    "type": "string",
                    "default": "",
                    "description": "(APIC Only) Provides the parameters for the lifecycle of the endpoint group in the bridge domain.  This will assign the policy to the BD.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "endpoint_retention_policy"
                },
                "epg_esg_collection_for_vrfs": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "",
                    "$ref": "#/definitions/Tenants:Networking:Vrfs:EpgEsgCollectionForVrfs"
                },
                "global_alias": {
                    "$ref": "#/definitions/Tenants:GlobalAlias"
                },
                "ip_data_plane_learning": {
                    "type": "string",
                    "default": "",
                    "description": "Choose whether to enable or disable IP address learning for this subnet. The possible values are:\n disabled - Disables IP address learning for this subnet.\n enabled: (default) - Enables IP address learning for this subnet.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "ip_data_plane_learning"
                },
                "layer3_multicast": {
                    "type": "boolean",
                    "default": true,
                    "description": "",
                    "title": "layer3_multicast"
                },
                "monitoring_policy": {
                    "$ref": "#/definitions/Tenants:MonitoringPolicy"
                },
                "ospf_timers": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "ospf_timers"
                },
                "ospf_timers_per_address_family": {
                    "type": "array",
                    "items": {}
                },
                "policy_control_enforcement_direction": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "policy_control_enforcement_direction"
                },
                "policy_control_enforcement_preference": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "policy_control_enforcement_preference"
                },
                "preferred_group": {
                    "type": "boolean",
                    "default": true,
                    "description": "",
                    "title": "preferred_group"
                },
                "ndo": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "",
                    "$ref": "#/definitions/Tenants:Networking:Vrfs:Ndo"
                },
                "transit_route_tag_policy": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "transit_route_tag_policy"
                }
            },
            "required": [
                "alias",
                "annotation",
                "annotations",
                "bd_enforcement_status",
                "bgp_timers",
                "bgp_timers_per_address_family",
                "communities",
                "controller_type",
                "create",
                "description",
                "eigrp_timers_per_address_family",
                "endpoint_retention_policy",
                "epg_esg_collection_for_vrfs",
                "global_alias",
                "ip_data_plane_learning",
                "layer3_multicast",
                "monitoring_policy",
                "ndo",
                "ospf_timers",
                "ospf_timers_per_address_family",
                "policy_control_enforcement_direction",
                "policy_control_enforcement_preference",
                "preferred_group",
                "transit_route_tag_policy"
            ],
            "title": "Vrfs"
        },
        "Tenants:Networking:Vrfs:EpgEsgCollectionForVrfs": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "contracts": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "List of Contracts and their attributes to assign to the EPG.",
                    "items": {
                        "$ref": "#/definitions/Tenants:Contracts:ContractApply"
                    },
                    "title": ""
                },
                "label_match_criteria": {
                    "type": "string",
                    "default": "",
                    "description": "The provider label match criteria.  Options are:\n  * All\n  * AtleastOne: (default)\n  * AtmostOne\n  * None",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "label_match_criteria"
                }
            },
            "required": [
                "contracts",
                "label_match_criteria"
            ],
            "title": "EpgEsgCollectionForVrfs"
        },
        "Tenants:Networking:Vrfs:Ndo": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "template": {
                    "type": "string",
                    "default": "",
                    "description": "The Template name to assign to the Schema.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "template"
                }
            },
            "required": [
                "template"
            ],
            "title": "VrfsNdo"
        },
        "Tenants:Ndo": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "schemas": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Ndo:Schemas"
                    },
                    "title": ""
                },
                "sites": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "(required when controller_type is ndo) - When using Nexus Dashboard Orchestrator the sites attribute is used to distinguish the site and cloud types.",
                    "items": {
                        "$ref": "#/definitions/Tenants:Ndo:Sites"
                    },
                    "title": ""
                },
                "users": {
                    "type": "array",
                    "additionalProperties": false,
                    "items": {},
                    "description": "(required when controller_type is ndo) - List of Users to associate to the Parent Tenant Object."
                }
            },
            "required": [
                "schemas",
                "sites",
                "users"
            ],
            "title": "TenantsNdo"
        },
        "Tenants:Ndo:Schemas": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "create": {
                    "$ref": "#/definitions/Tenants:Create"
                },
                "name": {
                    "type": "string",
                    "default": "",
                    "description": "Name of the Contract to assign to the EPG.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "name"
                },
                "templates": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Ndo:Schemas:Templates"
                    },
                    "title": ""
                }
            },
            "required": [
                "create",
                "name",
                "templates"
            ],
            "title": "Schemas"
        },
        "Tenants:Ndo:Schemas:Templates": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "name": {
                    "type": "string",
                    "default": "",
                    "description": "Name of the Contract to assign to the EPG.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "name"
                },
                "sites": {
                    "type": "array",
                    "items": {},
                    "description": "(required when controller_type is ndo) - When using Nexus Dashboard Orchestrator the sites attribute is used to distinguish the site and cloud types."
                }
            },
            "required": [
                "name",
                "sites"
            ],
            "title": "Templates"
        },
        "Tenants:Ndo:Sites": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "aws_access_key_id": {
                    "type": "string",
                    "default": "",
                    "description": "AWS Access Key Id. It must be provided if the AWS account is not trusted. This parameter will only have effect with vendor = aws.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "aws_access_key_id"
                },
                "aws_account_id": {
                    "type": "string",
                    "default": "",
                    "description": "Id of AWS account. It's required when vendor is set to aws. This parameter will only have effect with vendor = aws.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "aws_account_id"
                },
                "azure_access_type": {
                    "type": "string",
                    "default": "",
                    "description": "Type of Azure Account Configuration. Allowed values are managed, shared and credentials. Other Credentials are not required if azure_access_type is set to managed. This parameter will only have effect with vendor = azure.\n  * credentials\n  * managed: (default)\n  * shared",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "azure_access_type"
                },
                "azure_active_directory_id": {
                    "type": "string",
                    "default": "",
                    "description": "Azure Active Directory Id. It must be provided when azure_access_type to credentials. This parameter will only have effect with vendor = azure.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "azure_active_directory_id"
                },
                "azure_application_id": {
                    "type": "string",
                    "default": "",
                    "description": "Azure Application Id. It must be provided when azure_access_type to credentials. This parameter will only have effect with vendor = azure.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "azure_application_id"
                },
                "azure_shared_account_id": {
                    "type": "string",
                    "default": "",
                    "description": "Azure shared account Id. It must be provided when azure_access_type to shared. This parameter will only have effect with vendor = azure.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "azure_shared_account_id"
                },
                "azure_subscription_id": {
                    "type": "string",
                    "default": "",
                    "description": "Azure subscription id. It's required when vendor is set to azure. This parameter will only have effect with vendor = azure.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "azure_subscription_id"
                },
                "is_aws_account_trusted": {
                    "type": "boolean",
                    "default": true,
                    "description": "Flag to Set the AWS Account to trusted.  Default is true.",
                    "title": "is_aws_account_trusted"
                },
                "name": {
                    "type": "string",
                    "default": "",
                    "description": "Name of the Contract to assign to the EPG.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "name"
                },
                "vendor": {
                    "type": "string",
                    "default": "",
                    "description": "The type of vendor to apply the tenant to.\n  * aws\n  * azure\n  * cisco: (default)",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "vendor"
                }
            },
            "required": [
                "aws_access_key_id",
                "aws_account_id",
                "azure_access_type",
                "azure_active_directory_id",
                "azure_application_id",
                "azure_shared_account_id",
                "azure_subscription_id",
                "is_aws_account_trusted",
                "name",
                "vendor"
            ],
            "title": "Sites"
        },
        "Tenants:NdoSettings": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "schema": {
                    "type": "string",
                    "default": "",
                    "description": "The Name of the Schema to Create the Object within.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "schema"
                },
                "sites": {
                    "type": "array",
                    "description": "A list of Site Names to Assign Site Specific Settings to.",
                    "items": {
                        "type": "string",
                        "default": "default",
                        "description": "The Name of a Site assigned to the template for Site specific settings.",
                        "minLength": 1,
                        "maxLength": 64,
                        "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                        "title": "Site Name"
                    },
                    "title": "sites"
                },
                "template": {
                    "type": "string",
                    "default": "",
                    "description": "The Name of the Template to assign within the Schema.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "template"
                }
            },
            "required": [
                "schema",
                "template"
            ],
            "title": "ndo - Tenants -> Nexus Dashboard Orchestrator Settings"
        },
        "Tenants:Policies": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "protocol": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "",
                    "$ref": "#/definitions/Tenants:Policies:Protocol"
                }
            },
            "required": [
                "protocol"
            ],
            "title": "policies"
        },
        "Tenants:Policies:Protocol": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "bfd_interface": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Policies:Protocol:BFDInterface"
                    },
                    "title": ""
                },
                "bgp": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "",
                    "$ref": "#/definitions/Tenants:Policies:Protocol:BGP"
                },
                "dhcp": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "",
                    "$ref": "#/definitions/Tenants:Policies:Protocol:DHCP"
                },
                "endpoint_retention": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Policies:Protocol:EndpointRetention"
                    },
                    "title": ""
                },
                "hsrp": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "",
                    "$ref": "#/definitions/Tenants:Policies:Protocol:Hsrp"
                },
                "ip_sla": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "",
                    "$ref": "#/definitions/Tenants:Policies:Protocol:IPSla"
                },
                "l4-l7_policy-based_redirect": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Policies:Protocol:L4L7PolicyBasedRedirect"
                    },
                    "title": ""
                },
                "l4-l7_redirect_health_groups": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Policies:Protocol:L4L7RedirectHealthGroups"
                    },
                    "title": ""
                },
                "ospf": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "",
                    "$ref": "#/definitions/Tenants:Policies:Protocol:OSPF"
                },
                "route_maps_for_route_control": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Policies:Protocol:RouteMapsForRouteControl"
                    },
                    "title": ""
                },
                "route_map_match_rules": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Policies:Protocol:RouteMapMatchRules"
                    },
                    "title": ""
                },
                "route_map_set_rules": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Policies:Protocol:RouteMapSetRules"
                    },
                    "title": ""
                }
            },
            "required": [
                "bfd_interface",
                "bgp",
                "dhcp",
                "endpoint_retention",
                "hsrp",
                "ip_sla",
                "l4-l7_policy-based_redirect",
                "l4-l7_redirect_health_groups",
                "ospf",
                "route_map_match_rules",
                "route_map_set_rules",
                "route_maps_for_route_control"
            ],
            "title": "Protocol"
        },
        "Tenants:Policies:Protocol:BFDInterface": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "admin_state": {
                    "type": "string",
                    "default": "",
                    "description": "The administrative state of the object or policy. Allowed values are:\n  * disabled\n  * enabled: (default)",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "admin_state"
                },
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "detection_multiplier": {
                    "type": "integer",
                    "default": 1,
                    "description": "",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "detection_multiplier"
                },
                "echo_admin_state": {
                    "type": "string",
                    "default": "",
                    "description": "Echo mode indicator for object BFD Interface Policy. Allowed values are:\n  * disabled\n  * enabled: (default)",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "echo_admin_state"
                },
                "echo_recieve_interval": {
                    "type": "integer",
                    "default": 1,
                    "description": "Echo rx interval for object BFD Interface Policy. Range: 50-999.  Default is 50.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "echo_recieve_interval"
                },
                "enable_sub_interface_optimization": {
                    "type": "boolean",
                    "default": true,
                    "description": "Control state for object BFD Interface Policy.  Default is false.",
                    "title": "enable_sub_interface_optimization"
                },
                "minimum_recieve_interval": {
                    "type": "integer",
                    "default": 1,
                    "description": "Required minimum rx interval for boject BFD Interface Policy. Range: 50-999.  Default is 50.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "minimum_recieve_interval"
                },
                "minimum_transmit_interval": {
                    "type": "integer",
                    "default": 1,
                    "description": "Desired minimum tx interval for object BFD Interface Policy. Range: 50-999.  Default is 50.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "minimum_transmit_interval"
                }
            },
            "required": [
                "admin_state",
                "annotation",
                "description",
                "detection_multiplier",
                "echo_admin_state",
                "echo_recieve_interval",
                "enable_sub_interface_optimization",
                "minimum_recieve_interval",
                "minimum_transmit_interval"
            ],
            "title": "BFDInterface"
        },
        "Tenants:Policies:Protocol:BGP": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "bgp_address_family_context": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Policies:Protocol:BGP:BGPAddressFamilyContext"
                    },
                    "title": ""
                },
                "bgp_best_path": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Policies:Protocol:BGP:BGPBestPath"
                    },
                    "title": ""
                },
                "bgp_peer_prefix": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Policies:Protocol:BGP:BGPPeerPrefix"
                    },
                    "title": ""
                },
                "bgp_route_summarization": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Policies:Protocol:BGP:BGPRouteSummarization"
                    },
                    "title": ""
                },
                "bgp_timers": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Policies:Protocol:BGP:BGPTimers"
                    },
                    "title": ""
                }
            },
            "required": [
                "bgp_address_family_context",
                "bgp_best_path",
                "bgp_peer_prefix",
                "bgp_route_summarization",
                "bgp_timers"
            ],
            "title": "BGP"
        },
        "Tenants:Policies:Protocol:BGP:BGPAddressFamilyContext": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "ebgp_distance": {
                    "type": "integer",
                    "default": 1,
                    "description": "Administrative distance of EBGP routes for BGP address family context object. Range of allowed values is 1-255.  Default is 20.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "ebgp_distance"
                },
                "ebgp_max_ecmp": {
                    "type": "integer",
                    "default": 1,
                    "description": "Maximum number of equal-cost paths for BGP address family context object.Range of allowed values is 1-64.  Default is 16.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "ebgp_max_ecmp"
                },
                "enable_host_route_leak": {
                    "type": "boolean",
                    "default": true,
                    "description": "Control state for BGP address family context object.  Default is false.",
                    "title": "enable_host_route_leak"
                },
                "ibgp_distance": {
                    "type": "integer",
                    "default": 1,
                    "description": "Administrative distance of IBGP routes for BGP address family context object. Range of allowed values is 1-255.  Default is 200",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "ibgp_distance"
                },
                "ibgp_max_ecmp": {
                    "type": "integer",
                    "default": 1,
                    "description": "Maximum ECMP IBGP for BGP address family context object. Range of allowed values is 1 to 64. Default value is 16.  Default is 16",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "ibgp_max_ecmp"
                },
                "local_distance": {
                    "type": "integer",
                    "default": 1,
                    "description": "Administrative distance of local routes for BGP address family context object. Range of allowed values is 1-255.  Default is 220",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "local_distance"
                }
            },
            "required": [
                "annotation",
                "description",
                "ebgp_distance",
                "ebgp_max_ecmp",
                "enable_host_route_leak",
                "ibgp_distance",
                "ibgp_max_ecmp",
                "local_distance"
            ],
            "title": "BGPAddressFamilyContext"
        },
        "Tenants:Policies:Protocol:BGP:BGPBestPath": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "relax_as_path_restriction": {
                    "type": "boolean",
                    "default": true,
                    "description": "The control state.  Default is false.",
                    "title": "relax_as_path_restriction"
                }
            },
            "required": [
                "annotation",
                "description",
                "relax_as_path_restriction"
            ],
            "title": "BGPBestPath"
        },
        "Tenants:Policies:Protocol:BGP:BGPPeerPrefix": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "action": {
                    "type": "string",
                    "default": "",
                    "description": "You can set the following actions for the filter:\n  * deny\n  * permit: (default)",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "action"
                },
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "maximum_number_of_prefixes": {
                    "type": "integer",
                    "default": 1,
                    "description": "Maximum number of prefixes allowed from the peer for BGP peer prefix object.  Range is 1-300000. Default value is 20000.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "maximum_number_of_prefixes"
                },
                "restart_time": {
                    "type": "integer",
                    "default": 1,
                    "description": "The period of time in minutes before restarting the peer when the prefix limit is reached for BGP peer prefix object. Range is 1-65535. Default value is 65535.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "restart_time"
                },
                "threshold": {
                    "type": "integer",
                    "default": 1,
                    "description": "Threshold percentage of the maximum number of prefixes before a warning is issued for BGP peer prefix object. Range is 1-100. Default value is 75.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "threshold"
                }
            },
            "required": [
                "action",
                "annotation",
                "description",
                "maximum_number_of_prefixes",
                "restart_time",
                "threshold"
            ],
            "title": "BGPPeerPrefix"
        },
        "Tenants:Policies:Protocol:BGP:BGPRouteSummarization": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "address_type_controls": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "Ucast/Mcast Addr Type AF Control.",
                    "$ref": "#/definitions/Tenants:Policies:Protocol:BGP:BGPRouteSummarization:AddressTypeControls"
                },
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "control_state": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "",
                    "$ref": "#/definitions/Tenants:Policies:Protocol:BGP:BGPRouteSummarization:ControlState"
                }
            },
            "required": [
                "address_type_controls",
                "annotation",
                "control_state",
                "description"
            ],
            "title": "BGPRouteSummarization"
        },
        "Tenants:Policies:Protocol:BGP:BGPRouteSummarization:AddressTypeControls": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "af_mcast": {
                    "type": "boolean",
                    "default": true,
                    "description": "Default is false.",
                    "title": "af_mcast"
                },
                "af_ucast": {
                    "type": "boolean",
                    "default": true,
                    "description": "Default is true.",
                    "title": "af_ucast"
                }
            },
            "required": [
                "af_mcast",
                "af_ucast"
            ],
            "title": "AddressTypeControls"
        },
        "Tenants:Policies:Protocol:BGP:BGPRouteSummarization:ControlState": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "do_not_advertise_more_specifics": {
                    "type": "boolean",
                    "default": true,
                    "description": "",
                    "title": "do_not_advertise_more_specifics"
                },
                "generate_as_set_information": {
                    "type": "boolean",
                    "default": true,
                    "description": "Generate AS-SET information.  Default is false.",
                    "title": "generate_as_set_information"
                }
            },
            "required": [
                "do_not_advertise_more_specifics",
                "generate_as_set_information"
            ],
            "title": "ControlState"
        },
        "Tenants:Policies:Protocol:BGP:BGPTimers": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "graceful_restart_helper": {
                    "type": "boolean",
                    "default": true,
                    "description": "Graceful restart enabled or helper only for bgp timers object.  Default is false.",
                    "title": "graceful_restart_helper"
                },
                "hold_interval": {
                    "type": "integer",
                    "default": 1,
                    "description": "Time period before declaring neighbor down for bgp timers object. Default value is 180.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "hold_interval"
                },
                "keepalive_interval": {
                    "type": "integer",
                    "default": 1,
                    "description": "Interval time between keepalive messages for bgp timers object. Default value is 60.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "keepalive_interval"
                },
                "maximum_as_limit": {
                    "type": "integer",
                    "default": 1,
                    "description": "Maximum AS limit for bgp timers object. Range of allowed values is 0 to 2000. Default value is 0.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "maximum_as_limit"
                },
                "name": {
                    "type": "string",
                    "default": "",
                    "description": "Name of the Contract to assign to the EPG.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "name"
                },
                "stale_interval": {
                    "type": "integer",
                    "default": 1,
                    "description": "Stale interval for routes advertised by peer for bgp timers object. Range of allowed values is 1 to 3600. Default value is 300.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "stale_interval"
                }
            },
            "required": [
                "annotation",
                "description",
                "graceful_restart_helper",
                "hold_interval",
                "keepalive_interval",
                "maximum_as_limit",
                "name",
                "stale_interval"
            ],
            "title": "BGPTimers"
        },
        "Tenants:Policies:Protocol:DHCP": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "option_policies": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Policies:Protocol:DHCP:OptionPolicies"
                    },
                    "title": ""
                },
                "relay_policies": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Policies:Protocol:DHCP:RelayPolicies"
                    },
                    "title": ""
                }
            },
            "required": [
                "option_policies",
                "relay_policies"
            ],
            "title": "DHCP"
        },
        "Tenants:Policies:Protocol:DHCP:OptionPolicies": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "options": {
                    "type": "array",
                    "items": {}
                }
            },
            "required": [
                "annotation",
                "description",
                "options"
            ],
            "title": "OptionPolicies"
        },
        "Tenants:Policies:Protocol:DHCP:RelayPolicies": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "name_addr_list": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "application_profile": {
                    "type": "string",
                    "default": "",
                    "description": "(required if epg_type is epg) - Name of parent Application Profile object.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "application_profile"
                },
                "epg": {
                    "type": "string",
                    "default": "",
                    "description": "Name of the EPG/External-EPG Object.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "epg"
                },
                "epg_type": {
                    "type": "string",
                    "default": "",
                    "description": "The Type of EPG to Create.  Options are:\n  * inb - Use this option to create an Inband EPG.\n  * oob - Use this option to create an Out-of-Band EPG.\n  * standard: (default)",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "epg_type"
                },
                "l3out": {
                    "type": "string",
                    "default": "",
                    "description": "Names of the L3Outs to Associate. One L3Out with APIC, One per site for Nexus Dashboard Orchestrator",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "l3out"
                },
                "mode": {
                    "type": "string",
                    "default": "",
                    "description": "The Mode of the Port.  Options are:\n  * access - Select this mode if the traffic from the host is untagged (without VLAN ID). When a leaf switch is configured for an EPG to be untagged, for every port this EPG uses, the packets will exit the switch untagged.\n  * dot1p - Select this mode if the traffic from the host is tagged with a 802.1P tag. When an access port is configured with a single EPG in native 802.1p mode, its packets exit that port untagged. When an access port is configured with multiple EPGs, one in native 802.1p mode, and some with VLAN tags, all packets exiting that access port are tagged VLAN 0 for EPG configured in native 802.1p mode and for all other EPGs packets exit with their respective VLAN tags.\n  * trunk: (default) - Select this mode if the traffic from the host is tagged with a VLAN ID.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "mode"
                }
            },
            "required": [
                "annotation",
                "application_profile",
                "description",
                "epg",
                "epg_type",
                "l3out",
                "mode",
                "name_addr_list"
            ],
            "title": "RelayPolicies"
        },
        "Tenants:Policies:Protocol:EndpointRetention": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "bounce_entry_aging_interval": {
                    "type": "integer",
                    "default": 1,
                    "description": "The aging interval for a bounce entry. When an endpoint (VM) migrates to another switch, the endpoint is marked as bouncing for the specified aging interval and is deleted afterwards. Allowed value range is 0-65535. Default value is 630.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "bounce_entry_aging_interval"
                },
                "bounce_trigger": {
                    "type": "string",
                    "default": "",
                    "description": "Specifies whether to install the bounce entry by RARP flood or by COOP protocol. Allowed values are:\n  * protocol: (default)\n  * rarp-flood",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "bounce_trigger"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "hold_interval": {
                    "type": "integer",
                    "default": 1,
                    "description": "Time period before declaring neighbor down for bgp timers object. Default value is 180.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "hold_interval"
                },
                "local_endpoint_aging_interval": {
                    "type": "integer",
                    "default": 1,
                    "description": "The aging interval for all local endpoints learned in this bridge domain. When 75% of the interval is reached, 3 ARP requests are sent to verify the existence of the endpoint. If no response is received, the endpoint is deleted. Allowed value range is 0,120-65535. '0' is treated as special value here. Providing interval as '0' is treated as infinite interval. Default value is 900.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "local_endpoint_aging_interval"
                },
                "move_frequency": {
                    "type": "integer",
                    "default": 1,
                    "description": "A maximum allowed number of endpoint moves per second. If the move frequency is exceeded, the hold interval is triggered, and new endpoint learn events will not be honored until after the hold interval expires. Allowed value range is 0-65535. Default value is 256.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "move_frequency"
                },
                "remote_endpoint_aging_interval": {
                    "type": "integer",
                    "default": 1,
                    "description": "The aging interval for all remote endpoints learned in this bridge domain.Allowed value range is '120' - '0xffff'. Default is '900'. '0' is treated as special value here. Providing interval as '0' is treated as infinite interval.  Default value is 300.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "remote_endpoint_aging_interval"
                }
            },
            "required": [
                "annotation",
                "bounce_entry_aging_interval",
                "bounce_trigger",
                "description",
                "hold_interval",
                "local_endpoint_aging_interval",
                "move_frequency",
                "remote_endpoint_aging_interval"
            ],
            "title": "EndpointRetention"
        },
        "Tenants:Policies:Protocol:Hsrp": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "group_policies": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Policies:Protocol:Hsrp:GroupPolicies"
                    },
                    "title": ""
                },
                "interface_policies": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Policies:Protocol:Hsrp:InterfacePolicies"
                    },
                    "title": ""
                }
            },
            "required": [
                "group_policies",
                "interface_policies"
            ],
            "title": "Hsrp"
        },
        "Tenants:Policies:Protocol:Hsrp:GroupPolicies": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "enable_preemption_for_the_group": {
                    "type": "boolean",
                    "default": true,
                    "description": "Default is false.",
                    "title": "enable_preemption_for_the_group"
                },
                "hello_interval": {
                    "type": "integer",
                    "default": 1,
                    "description": "The interval between hello packets that HSRP sends on the interface. Note that the smaller the hello interval, the faster topological changes will be detected, but more routing traffic will ensue. The range is from 250 to 254000 milliseconds. Default value is 3000.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "hello_interval"
                },
                "hold_interval": {
                    "type": "integer",
                    "default": 1,
                    "description": "Time period before declaring neighbor down for bgp timers object. Default value is 180.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "hold_interval"
                },
                "key": {
                    "type": "string",
                    "default": "",
                    "description": "The key or password used to uniquely identify this configuration object. If key is set, the object key will reset when terraform configuration is applied.  Default is 'cisco'.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "key"
                },
                "max_seconds_to_prevent_preemption": {
                    "type": "integer",
                    "default": 1,
                    "description": "The maximum amount of time allowed for the HSRP client to prevent preemption.  This is disabled by default by setting the value to 0.  Default value is 0.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "max_seconds_to_prevent_preemption"
                },
                "min_preemption_delay": {
                    "type": "integer",
                    "default": 1,
                    "description": "Configures the router to take over as the active router for an HSRP group if it has a higher priority than the current active router.Configures the router to take over as the active router for an HSRP group if it has a higher priority than the current active router. This is disabled by default by setting the value to 0.  Default value is 0.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "min_preemption_delay"
                },
                "preemption_delay_after_reboot": {
                    "type": "integer",
                    "default": 1,
                    "description": "The delay time for the preemptive action after the active HSRP leaf is reloaded.  This is disabled by default by setting the value to 0.  Default value is 0.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "preemption_delay_after_reboot"
                },
                "priority": {
                    "type": "integer",
                    "default": 1,
                    "description": "Sets the priority in HSRP to define the active router and the standby router. This is used to exchanged HSRP hello messages.  The level range is from 0 to 255.  Default value is 100.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "priority"
                },
                "timeout": {
                    "type": "integer",
                    "default": 1,
                    "description": "Configures MD5 authentication for HSRP on this interface. You can use a key chain or key string. If you use a key string, you can optionally set the timeout for when HSRP will only accept a new key.  The range is from 0 to 32767 seconds.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "timeout"
                }
            },
            "required": [
                "annotation",
                "description",
                "enable_preemption_for_the_group",
                "hello_interval",
                "hold_interval",
                "key",
                "max_seconds_to_prevent_preemption",
                "min_preemption_delay",
                "preemption_delay_after_reboot",
                "priority",
                "timeout"
            ],
            "title": "GroupPolicies"
        },
        "Tenants:Policies:Protocol:Hsrp:InterfacePolicies": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "control": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "Control state for HSRP interface policy object.",
                    "$ref": "#/definitions/Tenants:Policies:Protocol:Hsrp:InterfacePolicies:Control"
                },
                "delay": {
                    "type": "integer",
                    "default": 1,
                    "description": "Administrative port delay for HSRP interface policy object.Range: '0-10000'.  Default value is 0.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "delay"
                },
                "reload_delay": {
                    "type": "integer",
                    "default": 1,
                    "description": "Reload delay for HSRP interface policy object.  Range: '0-10000'.  Default value is 0.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "reload_delay"
                }
            },
            "required": [
                "annotation",
                "control",
                "delay",
                "description",
                "reload_delay"
            ],
            "title": "InterfacePolicies"
        },
        "Tenants:Policies:Protocol:Hsrp:InterfacePolicies:Control": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "enable_bidirectional_forwarding_detection": {
                    "type": "boolean",
                    "default": true,
                    "description": "Default value is false.",
                    "title": "enable_bidirectional_forwarding_detection"
                },
                "use_burnt_in_mac_address_of_the_interface": {
                    "type": "boolean",
                    "default": true,
                    "description": "Default value is false.",
                    "title": "use_burnt_in_mac_address_of_the_interface"
                }
            },
            "required": [
                "enable_bidirectional_forwarding_detection",
                "use_burnt_in_mac_address_of_the_interface"
            ],
            "title": "Control"
        },
        "Tenants:Policies:Protocol:IPSla": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "ip_sla_monitoring_policies": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Policies:Protocol:IPSla:IPSlaMonitoringPolicies"
                    },
                    "title": ""
                }
            },
            "required": [
                "ip_sla_monitoring_policies"
            ],
            "title": "IPSla"
        },
        "Tenants:Policies:Protocol:IPSla:IPSlaMonitoringPolicies": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "detect_multiplier": {
                    "type": "integer",
                    "default": 1,
                    "description": "",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "detect_multiplier"
                },
                "http_uri": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "http_uri"
                },
                "http_version": {
                    "type": "integer",
                    "default": 1,
                    "description": "",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "http_version"
                },
                "operation_timeout": {
                    "type": "integer",
                    "default": 1,
                    "description": "",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "operation_timeout"
                },
                "request_data_size": {
                    "type": "integer",
                    "default": 1,
                    "description": "",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "request_data_size"
                },
                "sla_frequency": {
                    "type": "integer",
                    "default": 1,
                    "description": "",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "sla_frequency"
                },
                "sla_port": {
                    "type": "integer",
                    "default": 1,
                    "description": "",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "sla_port"
                },
                "sla_type": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "sla_type"
                },
                "threshold": {
                    "type": "integer",
                    "default": 1,
                    "description": "Threshold percentage of the maximum number of prefixes before a warning is issued for BGP peer prefix object. Range is 1-100. Default value is 75.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "threshold"
                },
                "traffic_class_value": {
                    "type": "integer",
                    "default": 1,
                    "description": "",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "traffic_class_value"
                },
                "type_of_service": {
                    "type": "integer",
                    "default": 1,
                    "description": "",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "type_of_service"
                }
            },
            "required": [
                "annotation",
                "detect_multiplier",
                "http_uri",
                "http_version",
                "operation_timeout",
                "request_data_size",
                "sla_frequency",
                "sla_port",
                "sla_type",
                "threshold",
                "traffic_class_value",
                "type_of_service"
            ],
            "title": "IPSlaMonitoringPolicies"
        },
        "Tenants:Policies:Protocol:L4L7PolicyBasedRedirect": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "anycast_enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "",
                    "title": "anycast_enabled"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "destination_type": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "destination_type"
                },
                "destinations": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Policies:Protocol:L4L7PolicyBasedRedirect:Destinations"
                    },
                    "title": ""
                },
                "enable_pod_id_aware_redirection": {
                    "type": "boolean",
                    "default": true,
                    "description": "",
                    "title": "enable_pod_id_aware_redirection"
                },
                "hashing_algorithm": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "hashing_algorithm"
                },
                "ip_sla_monitoring_policy": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "ip_sla_monitoring_policy"
                },
                "name": {
                    "type": "string",
                    "default": "",
                    "description": "Name of the Contract to assign to the EPG.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "name"
                },
                "max_threshold_percentage": {
                    "type": "integer",
                    "default": 1,
                    "description": "",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "max_threshold_percentage"
                },
                "min_threshold_percentage": {
                    "type": "integer",
                    "default": 1,
                    "description": "",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "min_threshold_percentage"
                },
                "resilient_hashing_enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "",
                    "title": "resilient_hashing_enabled"
                },
                "threshold_enable": {
                    "type": "boolean",
                    "default": true,
                    "description": "",
                    "title": "threshold_enable"
                },
                "threshold_down_action": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "threshold_down_action"
                }
            },
            "required": [
                "annotation",
                "anycast_enabled",
                "description",
                "destination_type",
                "destinations",
                "enable_pod_id_aware_redirection",
                "hashing_algorithm",
                "ip_sla_monitoring_policy",
                "max_threshold_percentage",
                "min_threshold_percentage",
                "name",
                "resilient_hashing_enabled",
                "threshold_down_action",
                "threshold_enable"
            ],
            "title": "L4L7PolicyBasedRedirect"
        },
        "Tenants:Policies:Protocol:L4L7PolicyBasedRedirect:Destinations": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "additional_ipv4_ipv6": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "additional_ipv4_ipv6"
                },
                "ip": {
                    "type": "string",
                    "default": "",
                    "description": "IP address for L3out HSRP interface group object.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "ip"
                },
                "mac": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "mac"
                },
                "pod_id": {
                    "type": "integer",
                    "default": 1,
                    "description": "Identifier of the pod where the node is located.  Unless you are configuring Multi-Pod, this should always be 1.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "pod_id"
                },
                "redirect_health_group": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "redirect_health_group"
                }
            },
            "required": [
                "additional_ipv4_ipv6",
                "ip",
                "mac",
                "pod_id",
                "redirect_health_group"
            ],
            "title": "Destinations"
        },
        "Tenants:Policies:Protocol:L4L7RedirectHealthGroups": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "name": {
                    "type": "string",
                    "default": "",
                    "description": "Name of the Contract to assign to the EPG.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "name"
                }
            },
            "required": [
                "annotation",
                "description",
                "name"
            ],
            "title": "L4L7RedirectHealthGroups"
        },
        "Tenants:Policies:Protocol:OSPF": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "ospf_interface": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Policies:Protocol:OSPF:OSPFInterface"
                    },
                    "title": ""
                },
                "ospf_route_summarization": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Policies:Protocol:OSPF:OSPFRouteSummarization"
                    },
                    "title": ""
                },
                "ospf_timers": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Policies:Protocol:OSPF:OSPFTimers"
                    },
                    "title": ""
                }
            },
            "required": [
                "ospf_interface",
                "ospf_route_summarization",
                "ospf_timers"
            ],
            "title": "OSPF"
        },
        "Tenants:Policies:Protocol:OSPF:OSPFInterface": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "cost_of_interface": {
                    "type": "integer",
                    "default": 1,
                    "description": "The OSPF cost for the interface. The cost (also called metric) of an interface in OSPF is an indication of the overhead required to send packets across a certain interface. The cost of an interface is inversely proportional to the bandwidth of that interface. A higher bandwidth indicates a lower cost. There is more overhead (higher cost) and time delays involved in crossing a 56k serial line than crossing a 10M ethernet line. The formula used to calculate the cost is: cost= 10000 0000/bandwidth in bps For example, it will cost 10 EXP8/10 EXP7 = 10 to cross a 10M Ethernet line and will cost 10 EXP8/1544000 = 64 to cross a T1 line. By default, the cost of an interface is calculated based on the bandwidth; you can force the cost of an interface with the ip OSPF cost value interface sub-configuration mode command. Allowed value range is 0-65535.  Default value is 0.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "cost_of_interface"
                },
                "dead_interval": {
                    "type": "integer",
                    "default": 1,
                    "description": "The interval between hello packets from a neighbor before the router declares the neighbor as down. This value must be the same for all networking devices on a specific network. Specifying a smaller dead interval (seconds) will give faster detection of a neighbor being down and improve convergence, but might cause more routing instability. Allowed value range is 1-65535. Default value is 40.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "dead_interval"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "hello_interval": {
                    "type": "integer",
                    "default": 1,
                    "description": "The interval between hello packets that HSRP sends on the interface. Note that the smaller the hello interval, the faster topological changes will be detected, but more routing traffic will ensue. The range is from 250 to 254000 milliseconds. Default value is 3000.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "hello_interval"
                },
                "interface_controls": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "List of Interface Control Attributes.",
                    "$ref": "#/definitions/Tenants:Policies:Protocol:OSPF:OSPFInterface:InterfaceControls"
                },
                "network_type": {
                    "type": "string",
                    "default": "",
                    "description": "The OSPF interface policy network type. OSPF supports point-to-point and broadcast. Allowed values are:\n  * bcast: (default)\n  * p2p",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "network_type"
                },
                "priority": {
                    "type": "integer",
                    "default": 1,
                    "description": "Sets the priority in HSRP to define the active router and the standby router. This is used to exchanged HSRP hello messages.  The level range is from 0 to 255.  Default value is 100.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "priority"
                },
                "retransmit_interval": {
                    "type": "integer",
                    "default": 1,
                    "description": "The interval between LSA retransmissions. The retransmit interval occurs while the router is waiting for an acknowledgement from the neighbor router that it received the LSA. If no acknowlegment is received at the end of the interval, then the LSA is resent. Allowed value range is 1-65535.  Default value is 5.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "retransmit_interval"
                },
                "transmit_delay": {
                    "type": "integer",
                    "default": 1,
                    "description": "The delay time needed to send an LSA update packet. OSPF increments the LSA age time by the transmit delay amount before transmitting the LSA update. You should take into account the transmission and propagation delays for the interface when you set this value. Allowed value range is 1-450.  Default value is 1.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "transmit_delay"
                }
            },
            "required": [
                "annotation",
                "cost_of_interface",
                "dead_interval",
                "description",
                "hello_interval",
                "interface_controls",
                "network_type",
                "priority",
                "retransmit_interval",
                "transmit_delay"
            ],
            "title": "OSPFInterface"
        },
        "Tenants:Policies:Protocol:OSPF:OSPFInterface:InterfaceControls": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "advertise_subnet": {
                    "type": "boolean",
                    "default": true,
                    "description": "Flag to Enable the connected interface subnet to be advertised.  Default value is true.",
                    "title": "advertise_subnet"
                },
                "bfd": {
                    "type": "boolean",
                    "default": true,
                    "description": "Flag to Enable Bidirectional Forward Detection on the interface.  Default value is true.",
                    "title": "bfd"
                },
                "mtu_ignore": {
                    "type": "boolean",
                    "default": true,
                    "description": "Flag to ignore the MTU when establishing neighbor relationships.  Default value is false.",
                    "title": "mtu_ignore"
                },
                "passive_participation": {
                    "type": "boolean",
                    "default": true,
                    "description": "",
                    "title": "passive_participation"
                }
            },
            "required": [
                "advertise_subnet",
                "bfd",
                "mtu_ignore",
                "passive_participation"
            ],
            "title": "InterfaceControls"
        },
        "Tenants:Policies:Protocol:OSPF:OSPFRouteSummarization": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "cost": {
                    "type": "integer",
                    "default": 1,
                    "description": "The OSPF Area cost for the default summary LSAs. The Area cost is used with NSSA and stub area types only. Range of allowed values is '0' to '16777215'. Default value: 'unspecified'.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "cost"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "inter_area_enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Inter area enabled flag for object OSPF route summarization. Default is false.",
                    "title": "inter_area_enabled"
                }
            },
            "required": [
                "annotation",
                "cost",
                "description",
                "inter_area_enabled"
            ],
            "title": "OSPFRouteSummarization"
        },
        "Tenants:Policies:Protocol:OSPF:OSPFTimers": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "admin_distance_preference": {
                    "type": "integer",
                    "default": 1,
                    "description": "Preferred administrative distance for OSPF timers object. Range of allowed values is '1-255'. Default value is 110.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "admin_distance_preference"
                },
                "bandwidth_reference": {
                    "type": "integer",
                    "default": 1,
                    "description": "OSPF policy bandwidth for OSPF timers object. Range of allowed values is '1-4000000'.  Default is 400000.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "bandwidth_reference"
                },
                "control_knobs": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "List of Control state for OSPF timers object.",
                    "$ref": "#/definitions/Tenants:Policies:Protocol:OSPF:OSPFTimers:ControlKnobs"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "graceful_restart_helper": {
                    "type": "boolean",
                    "default": true,
                    "description": "Graceful restart enabled or helper only for bgp timers object.  Default is false.",
                    "title": "graceful_restart_helper"
                },
                "initial_spf_scheduled_delay_interval": {
                    "type": "integer",
                    "default": 1,
                    "description": "",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "initial_spf_scheduled_delay_interval"
                },
                "lsa_group_pacing_interval": {
                    "type": "integer",
                    "default": 1,
                    "description": "LSA group pacing interval for OSPF timers object. The range of allowed values is '1-1800'. The default value is 10.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "lsa_group_pacing_interval"
                },
                "lsa_generation_throttle_hold_interval": {
                    "type": "integer",
                    "default": 1,
                    "description": "Throttle hold interval between LSAs for OSPF timers object. The range of allowed values is '50-30000'. The default value is 5000.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "lsa_generation_throttle_hold_interval"
                },
                "lsa_generation_throttle_maximum_interval": {
                    "type": "integer",
                    "default": 1,
                    "description": "Throttle max interval between LSAs for OSPF timers object. The range of allowed values is '50-30000'. The default value is 5000.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "lsa_generation_throttle_maximum_interval"
                },
                "lsa_generation_throttle_start_wait_interval": {
                    "type": "integer",
                    "default": 1,
                    "description": "Throttle start-wait interval between LSAs for OSPF timers object. The range of allowed values is '0-5000'. The default value is 0.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "lsa_generation_throttle_start_wait_interval"
                },
                "lsa_maximum_action": {
                    "type": "string",
                    "default": "",
                    "description": "Action to take when maximum LSA limit is reached for OSPF timers object. Allowed values are:\n  * log\n  * reject: (default)\n  * restart",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "lsa_maximum_action"
                },
                "lsa_threshold": {
                    "type": "integer",
                    "default": 1,
                    "description": "Maximum LSA threshold for OSPF timers object. The range of allowed values is '1-100'. The default value is 75.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "lsa_threshold"
                },
                "maximum_ecmp": {
                    "type": "integer",
                    "default": 1,
                    "description": "Maximum ECMP for OSPF timers object. The range of allowed values is '1-64'. The default value is 8.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "maximum_ecmp"
                },
                "maximum_lsa_reset_interval": {
                    "type": "integer",
                    "default": 1,
                    "description": "Time until the sleep count is reset to zero for OSPF timers object. The range of allowed values is '1-1440'. The default value is 10.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "maximum_lsa_reset_interval"
                },
                "maximum_lsa_sleep_count": {
                    "type": "integer",
                    "default": 1,
                    "description": "Number of times OSPF can be placed in a sleep state for OSPF timers object. The range of allowed values is '1-4294967295'. The default value is 5.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "maximum_lsa_sleep_count"
                },
                "maximum_lsa_sleep_interval": {
                    "type": "integer",
                    "default": 1,
                    "description": "Maximum LSA threshold for OSPF timers object. The range of allowed values is '1-1440'. The default value is 5.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "maximum_lsa_sleep_interval"
                },
                "maximum_number_of_not_self_generated_lsas": {
                    "type": "integer",
                    "default": 1,
                    "description": "Maximum number of LSAs that are not self-generated for OSPF timers object. The range of allowed values is '1-4294967295'. The default value is 20000.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "maximum_number_of_not_self_generated_lsas"
                },
                "minimum_hold_time_between_spf_calculations": {
                    "type": "integer",
                    "default": 1,
                    "description": "Minimum hold time between SPF calculations for OSPF timers object. The range of allowed values is '1-600000'. The default value is 1000.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "minimum_hold_time_between_spf_calculations"
                },
                "minimum_interval_between_arrival_of_a_lsa": {
                    "type": "integer",
                    "default": 1,
                    "description": "Initial delay interval for the SPF schedule for OSPF timers object. The range of allowed values is '1-600000'. The default value is 1000.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "minimum_interval_between_arrival_of_a_lsa"
                },
                "maximum_wait_time_between_spf_calculations": {
                    "type": "integer",
                    "default": 1,
                    "description": "Maximum interval between SPF calculations for OSPF timers object. The range of allowed values is '1-600000'. The default value is 5000.",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "maximum_wait_time_between_spf_calculations"
                }
            },
            "required": [
                "admin_distance_preference",
                "annotation",
                "bandwidth_reference",
                "control_knobs",
                "description",
                "graceful_restart_helper",
                "initial_spf_scheduled_delay_interval",
                "lsa_generation_throttle_hold_interval",
                "lsa_generation_throttle_maximum_interval",
                "lsa_generation_throttle_start_wait_interval",
                "lsa_group_pacing_interval",
                "lsa_maximum_action",
                "lsa_threshold",
                "maximum_ecmp",
                "maximum_lsa_reset_interval",
                "maximum_lsa_sleep_count",
                "maximum_lsa_sleep_interval",
                "maximum_number_of_not_self_generated_lsas",
                "maximum_wait_time_between_spf_calculations",
                "minimum_hold_time_between_spf_calculations",
                "minimum_interval_between_arrival_of_a_lsa"
            ],
            "title": "OSPFTimers"
        },
        "Tenants:Policies:Protocol:OSPF:OSPFTimers:ControlKnobs": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "enable_name_lookup_for_router_ids": {
                    "type": "boolean",
                    "default": true,
                    "description": "(default: false)",
                    "title": "enable_name_lookup_for_router_ids"
                },
                "prefix_suppress": {
                    "type": "boolean",
                    "default": true,
                    "description": "(default: false)",
                    "title": "prefix_suppress"
                }
            },
            "required": [
                "enable_name_lookup_for_router_ids",
                "prefix_suppress"
            ],
            "title": "ControlKnobs"
        },
        "Tenants:Policies:Protocol:RouteMapMatchRules": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "alias": {
                    "$ref": "#/definitions/Tenants:Alias"
                },
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "name": {
                    "type": "string",
                    "default": "",
                    "description": "Name of the Contract to assign to the EPG.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "name"
                },
                "match_community_terms": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Policies:Protocol:RouteMapMatchRules:MatchCommunityTerms"
                    },
                    "title": ""
                },
                "match_regex_community_terms": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Policies:Protocol:RouteMapMatchRules:MatchRegexCommunityTerms"
                    },
                    "title": ""
                },
                "match_route_destination_rule": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Policies:Protocol:RouteMapMatchRules:MatchRouteDestinationRule"
                    },
                    "title": ""
                }
            },
            "required": [
                "alias",
                "annotation",
                "description",
                "match_community_terms",
                "match_regex_community_terms",
                "match_route_destination_rule",
                "name"
            ],
            "title": "RouteMapMatchRules"
        },
        "Tenants:Policies:Protocol:RouteMapMatchRules:MatchCommunityTerms": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "name": {
                    "type": "string",
                    "default": "",
                    "description": "Name of the Contract to assign to the EPG.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "name"
                },
                "match_community_factors": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Policies:Protocol:RouteMapMatchRules:MatchCommunityTerms:MatchCommunityFactors"
                    },
                    "title": ""
                }
            },
            "required": [
                "description",
                "match_community_factors",
                "name"
            ],
            "title": "MatchCommunityTerms"
        },
        "Tenants:Policies:Protocol:RouteMapMatchRules:MatchCommunityTerms:MatchCommunityFactors": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "community": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "community"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "scope": {
                    "type": "string",
                    "default": "",
                    "description": "(default: infra) -  The owner of the target relay. The DHCP relay is any host that forwards DHCP packets between clients and servers. The relays are used to forward requests and replies between clients and servers when they are not on the same physical subnet. The relay owner can be:\n  * infra - The owner is the infrastructure\n  * tenant - The owner is the tenant",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "scope"
                }
            },
            "required": [
                "community",
                "description",
                "scope"
            ],
            "title": "MatchCommunityFactors"
        },
        "Tenants:Policies:Protocol:RouteMapMatchRules:MatchRegexCommunityTerms": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "community_type": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "community_type"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "name": {
                    "type": "string",
                    "default": "",
                    "description": "Name of the Contract to assign to the EPG.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "name"
                },
                "regular_expression": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "regular_expression"
                }
            },
            "required": [
                "community_type",
                "description",
                "name",
                "regular_expression"
            ],
            "title": "MatchRegexCommunityTerms"
        },
        "Tenants:Policies:Protocol:RouteMapMatchRules:MatchRouteDestinationRule": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "greater_than_mask": {
                    "type": "integer",
                    "default": 1,
                    "description": "",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "greater_than_mask"
                },
                "ip": {
                    "type": "string",
                    "default": "",
                    "description": "IP address for L3out HSRP interface group object.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "ip"
                },
                "less_than_mask": {
                    "type": "integer",
                    "default": 1,
                    "description": "",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "less_than_mask"
                }
            },
            "required": [
                "description",
                "greater_than_mask",
                "ip",
                "less_than_mask"
            ],
            "title": "MatchRouteDestinationRule"
        },
        "Tenants:Policies:Protocol:RouteMapSetRules": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "alias": {
                    "$ref": "#/definitions/Tenants:Alias"
                },
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "name": {
                    "type": "string",
                    "default": "",
                    "description": "Name of the Contract to assign to the EPG.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "name"
                },
                "additional_communities": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Policies:Protocol:RouteMapSetRules:AdditionalCommunities"
                    },
                    "title": ""
                },
                "multipath": {
                    "type": "boolean",
                    "default": true,
                    "description": "",
                    "title": "multipath"
                },
                "next_hop_propegation": {
                    "type": "boolean",
                    "default": true,
                    "description": "",
                    "title": "next_hop_propegation"
                },
                "set_as_path": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "",
                    "$ref": "#/definitions/Tenants:Policies:Protocol:RouteMapSetRules:SetAsPath"
                },
                "set_communities": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "",
                    "$ref": "#/definitions/Tenants:Policies:Protocol:RouteMapSetRules:SetCommunities"
                },
                "set_dampening": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "",
                    "$ref": "#/definitions/Tenants:Policies:Protocol:RouteMapSetRules:SetDampening"
                },
                "set_external_epg": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "",
                    "$ref": "#/definitions/Tenants:Policies:Protocol:RouteMapSetRules:SetExternalEpg"
                },
                "set_metric": {
                    "type": "integer",
                    "default": 1,
                    "description": "",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "set_metric"
                },
                "set_metric_type": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "set_metric_type"
                },
                "set_next_hop_address": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "set_next_hop_address"
                },
                "set_preference": {
                    "type": "integer",
                    "default": 1,
                    "description": "",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "set_preference"
                },
                "set_route_tag": {
                    "type": "integer",
                    "default": 1,
                    "description": "",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "set_route_tag"
                },
                "set_weight": {
                    "type": "integer",
                    "default": 1,
                    "description": "",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "set_weight"
                }
            },
            "required": [
                "additional_communities",
                "alias",
                "annotation",
                "description",
                "multipath",
                "name",
                "next_hop_propegation",
                "set_as_path",
                "set_communities",
                "set_dampening",
                "set_external_epg",
                "set_metric",
                "set_metric_type",
                "set_next_hop_address",
                "set_preference",
                "set_route_tag",
                "set_weight"
            ],
            "title": "RouteMapSetRules"
        },
        "Tenants:Policies:Protocol:RouteMapSetRules:AdditionalCommunities": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "community": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "community"
                },
                "description": {
                    "type": "string",
                    "default": "default",
                    "description": "Description to add to the Object.  The description can be up to 128 characters.",
                    "minLength": 1,
                    "maxLength": 128,
                    "pattern": "^[a-zA-Z0-9\\\\!#$%()*,-\\./:;@ _{|}~?&+]+$",
                    "title": "description"
                }
            },
            "required": [
                "community",
                "description"
            ],
            "title": "AdditionalCommunities"
        },
        "Tenants:Policies:Protocol:RouteMapSetRules:SetAsPath": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "criteria": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "criteria"
                },
                "autonomous_systems": {
                    "type": "array",
                    "items": {}
                },
                "last_as_count": {
                    "type": "integer",
                    "default": 1,
                    "description": "",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "last_as_count"
                }
            },
            "required": [
                "autonomous_systems",
                "criteria",
                "last_as_count"
            ],
            "title": "SetAsPath"
        },
        "Tenants:Policies:Protocol:RouteMapSetRules:SetCommunities": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "criteria": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "criteria"
                },
                "community": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "community"
                }
            },
            "required": [
                "community",
                "criteria"
            ],
            "title": "SetCommunities"
        },
        "Tenants:Policies:Protocol:RouteMapSetRules:SetDampening": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "half_life": {
                    "type": "integer",
                    "default": 1,
                    "description": "",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "half_life"
                },
                "max_suprress_time": {
                    "type": "integer",
                    "default": 1,
                    "description": "",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "max_suprress_time"
                },
                "reuse_limit": {
                    "type": "integer",
                    "default": 1,
                    "description": "",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "reuse_limit"
                },
                "suppress_limit": {
                    "type": "integer",
                    "default": 1,
                    "description": "",
                    "minimum": 1,
                    "maximum": 64,
                    "title": "suppress_limit"
                }
            },
            "required": [
                "half_life",
                "max_suprress_time",
                "reuse_limit",
                "suppress_limit"
            ],
            "title": "SetDampening"
        },
        "Tenants:Policies:Protocol:RouteMapSetRules:SetExternalEpg": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "external_epg": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "external_epg"
                },
                "l3out": {
                    "type": "string",
                    "default": "",
                    "description": "Names of the L3Outs to Associate. One L3Out with APIC, One per site for Nexus Dashboard Orchestrator",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "l3out"
                },
                "tenant": {
                    "type": "string",
                    "default": "",
                    "description": "The Name of the Tenant the Contract exists in.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "tenant"
                }
            },
            "required": [
                "external_epg",
                "l3out",
                "tenant"
            ],
            "title": "SetExternalEpg"
        },
        "Tenants:Policies:Protocol:RouteMapsForRouteControl": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "annotation": {
                    "$ref": "#/definitions/Tenants:Annotation"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "contexts": {
                    "type": "array",
                    "additionalProperties": false,
                    "description": "",
                    "items": {
                        "$ref": "#/definitions/Tenants:Policies:Protocol:RouteMapsForRouteControl:Contexts"
                    },
                    "title": ""
                },
                "name": {
                    "type": "string",
                    "default": "",
                    "description": "Name of the Contract to assign to the EPG.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "name"
                },
                "type": {
                    "type": "string",
                    "default": "",
                    "description": "(APIC Only) The Type of bridge domain to create.  Options are:\n  * fc\n  * regular: (default)",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "type"
                }
            },
            "required": [
                "annotation",
                "contexts",
                "description",
                "name",
                "type"
            ],
            "title": "RouteMapsForRouteControl"
        },
        "Tenants:Policies:Protocol:RouteMapsForRouteControl:Contexts": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
                "action": {
                    "type": "string",
                    "default": "",
                    "description": "You can set the following actions for the filter:\n  * deny\n  * permit: (default)",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "action"
                },
                "description": {
                    "$ref": "#/definitions/Tenants:Description"
                },
                "match_rules": {
                    "type": "null"
                },
                "name": {
                    "type": "string",
                    "default": "",
                    "description": "Name of the Contract to assign to the EPG.",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "name"
                },
                "set_rule": {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_\\.:-]+$",
                    "title": "set_rule"
                }
            },
            "required": [
                "action",
                "description",
                "match_rules",
                "name",
                "set_rule"
            ],
            "title": "Contexts"
        },
        "Tenants:QosClass": {
            "type": "string",
            "default": "unspecified",
            "description": "The priority class identifier. Allowed values are:\n  * level1\n  * level2\n  * level3\n  * level4\n  * level5\n  * level6\n  * unspecified: (default)",
            "enum": [
                "level1",
                "level2",
                "level3",
                "level4",
                "level5",
                "level6",
                "unspecified"
            ],
            "title": "qos_class"
        }
    }
}