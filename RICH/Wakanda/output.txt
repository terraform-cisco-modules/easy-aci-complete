[0m[1mdata.utils_yaml_merge.model: Reading...[0m[0m
[0m[1mdata.utils_yaml_merge.model: Read complete after 0s [id=9bbf13ec548f14f996e6714919ebfe5445279a4c][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # module.access["default"].aci_access_generic.map["l3out"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_generic" "map" {
      [32m+[0m[0m annotation                          = "orchestrator:terraform"
      [32m+[0m[0m attachable_access_entity_profile_dn = (known after apply)
      [32m+[0m[0m description                         = (known after apply)
      [32m+[0m[0m id                                  = (known after apply)
      [32m+[0m[0m name                                = "default"
      [32m+[0m[0m name_alias                          = (known after apply)
    }

[1m  # module.access["default"].aci_access_generic.map["trunkAep"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_generic" "map" {
      [32m+[0m[0m annotation                          = "orchestrator:terraform"
      [32m+[0m[0m attachable_access_entity_profile_dn = (known after apply)
      [32m+[0m[0m description                         = (known after apply)
      [32m+[0m[0m id                                  = (known after apply)
      [32m+[0m[0m name                                = "default"
      [32m+[0m[0m name_alias                          = (known after apply)
    }

[1m  # module.access["default"].aci_access_switch_policy_group.map["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_switch_policy_group" "map" {
      [32m+[0m[0m annotation                                             = "orchestrator:terraform"
      [32m+[0m[0m description                                            = "Default Leaf Policy Group"
      [32m+[0m[0m id                                                     = (known after apply)
      [32m+[0m[0m name                                                   = "default"
      [32m+[0m[0m name_alias                                             = (known after apply)
      [32m+[0m[0m relation_infra_rs_bfd_ipv4_inst_pol                    = "uni/infra/bfdIpv4Inst-default"
      [32m+[0m[0m relation_infra_rs_bfd_ipv6_inst_pol                    = "uni/infra/bfdIpv6Inst-default"
      [32m+[0m[0m relation_infra_rs_bfd_mh_ipv4_inst_pol                 = "uni/infra/bfdMhIpv4Inst-default"
      [32m+[0m[0m relation_infra_rs_bfd_mh_ipv6_inst_pol                 = "uni/infra/bfdMhIpv6Inst-default"
      [32m+[0m[0m relation_infra_rs_equipment_flash_config_pol           = "uni/infra/flashconfigpol-default"
      [32m+[0m[0m relation_infra_rs_fc_fabric_pol                        = "uni/infra/fcfabricpol-default"
      [32m+[0m[0m relation_infra_rs_fc_inst_pol                          = "uni/infra/fcinstpol-default"
      [32m+[0m[0m relation_infra_rs_iacl_leaf_profile                    = "uni/infra/iaclleafp-default"
      [32m+[0m[0m relation_infra_rs_l2_node_auth_pol                     = "uni/infra/nodeauthpol-default"
      [32m+[0m[0m relation_infra_rs_leaf_copp_profile                    = "uni/infra/coppleafp-default"
      [32m+[0m[0m relation_infra_rs_leaf_p_grp_to_cdp_if_pol             = "uni/infra/cdpIfP-cdpEnabled"
      [32m+[0m[0m relation_infra_rs_leaf_p_grp_to_lldp_if_pol            = "uni/infra/lldpIfP-lldpEnabled"
      [32m+[0m[0m relation_infra_rs_mon_node_infra_pol                   = "uni/infra/moninfra-default"
      [32m+[0m[0m relation_infra_rs_mst_inst_pol                         = "uni/infra/mstpInstPol-default"
      [32m+[0m[0m relation_infra_rs_netflow_node_pol                     = "uni/infra/nodepol-default"
      [32m+[0m[0m relation_infra_rs_poe_inst_pol                         = "uni/infra/poeInstP-default"
      [32m+[0m[0m relation_infra_rs_topoctrl_fast_link_failover_inst_pol = "uni/infra/fastlinkfailoverinstpol-default"
      [32m+[0m[0m relation_infra_rs_topoctrl_fwd_scale_prof_pol          = "uni/infra/fwdscalepol-default"
    }

[1m  # module.access["default"].aci_attachable_access_entity_profile.map["l3out"][0m will be created
[0m  [32m+[0m[0m resource "aci_attachable_access_entity_profile" "map" {
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = "AEP for EPG Assignment"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "l3out"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m relation_infra_rs_dom_p = (known after apply)
    }

[1m  # module.access["default"].aci_attachable_access_entity_profile.map["trunkAep"][0m will be created
[0m  [32m+[0m[0m resource "aci_attachable_access_entity_profile" "map" {
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = "AEP for EPG Assignment"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "trunkAep"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m relation_infra_rs_dom_p = (known after apply)
    }

[1m  # module.access["default"].aci_cdp_interface_policy.map["cdpDisabled"][0m will be created
[0m  [32m+[0m[0m resource "aci_cdp_interface_policy" "map" {
      [32m+[0m[0m admin_st    = "disabled"
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m description = "CDP Disabled Policy"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "cdpDisabled"
      [32m+[0m[0m name_alias  = (known after apply)
    }

[1m  # module.access["default"].aci_cdp_interface_policy.map["cdpEnabled"][0m will be created
[0m  [32m+[0m[0m resource "aci_cdp_interface_policy" "map" {
      [32m+[0m[0m admin_st    = "enabled"
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m description = "CDP Enabled Policy"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "cdpEnabled"
      [32m+[0m[0m name_alias  = (known after apply)
    }

[1m  # module.access["default"].aci_error_disable_recovery.map["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_error_disable_recovery" "map" {
      [32m+[0m[0m annotation          = "orchestrator:terraform"
      [32m+[0m[0m description         = (known after apply)
      [32m+[0m[0m edr_event_ids       = (known after apply)
      [32m+[0m[0m err_dis_recov_intvl = "300"
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m name_alias          = (known after apply)

      [32m+[0m[0m edr_event {
          [32m+[0m[0m annotation  = "orchestrator:terraform"
          [32m+[0m[0m description = (known after apply)
          [32m+[0m[0m event       = "event-bpduguard"
          [32m+[0m[0m id          = (known after apply)
          [32m+[0m[0m name        = (known after apply)
          [32m+[0m[0m name_alias  = (known after apply)
          [32m+[0m[0m recover     = "yes"
        }
      [32m+[0m[0m edr_event {
          [32m+[0m[0m annotation  = "orchestrator:terraform"
          [32m+[0m[0m description = (known after apply)
          [32m+[0m[0m event       = "event-ep-move"
          [32m+[0m[0m id          = (known after apply)
          [32m+[0m[0m name        = (known after apply)
          [32m+[0m[0m name_alias  = (known after apply)
          [32m+[0m[0m recover     = "yes"
        }
      [32m+[0m[0m edr_event {
          [32m+[0m[0m annotation  = "orchestrator:terraform"
          [32m+[0m[0m description = (known after apply)
          [32m+[0m[0m event       = "event-mcp-loop"
          [32m+[0m[0m id          = (known after apply)
          [32m+[0m[0m name        = (known after apply)
          [32m+[0m[0m name_alias  = (known after apply)
          [32m+[0m[0m recover     = "yes"
        }
    }

[1m  # module.access["default"].aci_fabric_if_pol.map["100GAuto"][0m will be created
[0m  [32m+[0m[0m resource "aci_fabric_if_pol" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m auto_neg      = "on"
      [32m+[0m[0m description   = "Speed 100G Negotiation Auto"
      [32m+[0m[0m fec_mode      = "inherit"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m link_debounce = "100"
      [32m+[0m[0m name          = "100GAuto"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m speed         = "100G"
    }

[1m  # module.access["default"].aci_fabric_if_pol.map["100GnoNg"][0m will be created
[0m  [32m+[0m[0m resource "aci_fabric_if_pol" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m auto_neg      = "off"
      [32m+[0m[0m description   = "Speed 100G Negotiation Off"
      [32m+[0m[0m fec_mode      = "inherit"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m link_debounce = "100"
      [32m+[0m[0m name          = "100GnoNg"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m speed         = "100G"
    }

[1m  # module.access["default"].aci_fabric_if_pol.map["100MAuto"][0m will be created
[0m  [32m+[0m[0m resource "aci_fabric_if_pol" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m auto_neg      = "on"
      [32m+[0m[0m description   = "Speed 100M Negotiation Auto"
      [32m+[0m[0m fec_mode      = "inherit"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m link_debounce = "100"
      [32m+[0m[0m name          = "100MAuto"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m speed         = "100M"
    }

[1m  # module.access["default"].aci_fabric_if_pol.map["100MnoNg"][0m will be created
[0m  [32m+[0m[0m resource "aci_fabric_if_pol" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m auto_neg      = "off"
      [32m+[0m[0m description   = "Speed 100M Negotiation Off"
      [32m+[0m[0m fec_mode      = "inherit"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m link_debounce = "100"
      [32m+[0m[0m name          = "100MnoNg"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m speed         = "100M"
    }

[1m  # module.access["default"].aci_fabric_if_pol.map["10GAuto"][0m will be created
[0m  [32m+[0m[0m resource "aci_fabric_if_pol" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m auto_neg      = "on"
      [32m+[0m[0m description   = "Speed 10G Negotiation Auto"
      [32m+[0m[0m fec_mode      = "inherit"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m link_debounce = "100"
      [32m+[0m[0m name          = "10GAuto"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m speed         = "10G"
    }

[1m  # module.access["default"].aci_fabric_if_pol.map["10GnoNg"][0m will be created
[0m  [32m+[0m[0m resource "aci_fabric_if_pol" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m auto_neg      = "off"
      [32m+[0m[0m description   = "Speed 10G Negotiation Off"
      [32m+[0m[0m fec_mode      = "inherit"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m link_debounce = "100"
      [32m+[0m[0m name          = "10GnoNg"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m speed         = "10G"
    }

[1m  # module.access["default"].aci_fabric_if_pol.map["1GAuto"][0m will be created
[0m  [32m+[0m[0m resource "aci_fabric_if_pol" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m auto_neg      = "on"
      [32m+[0m[0m description   = "Speed 1G Negotiation Auto"
      [32m+[0m[0m fec_mode      = "inherit"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m link_debounce = "100"
      [32m+[0m[0m name          = "1GAuto"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m speed         = "1G"
    }

[1m  # module.access["default"].aci_fabric_if_pol.map["1GnoNg"][0m will be created
[0m  [32m+[0m[0m resource "aci_fabric_if_pol" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m auto_neg      = "off"
      [32m+[0m[0m description   = "Speed 1G Negotiation Off"
      [32m+[0m[0m fec_mode      = "inherit"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m link_debounce = "100"
      [32m+[0m[0m name          = "1GnoNg"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m speed         = "1G"
    }

[1m  # module.access["default"].aci_fabric_if_pol.map["200GAuto"][0m will be created
[0m  [32m+[0m[0m resource "aci_fabric_if_pol" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m auto_neg      = "on"
      [32m+[0m[0m description   = "Speed 200G Negotiation Auto"
      [32m+[0m[0m fec_mode      = "inherit"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m link_debounce = "100"
      [32m+[0m[0m name          = "200GAuto"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m speed         = "200G"
    }

[1m  # module.access["default"].aci_fabric_if_pol.map["200GnoNg"][0m will be created
[0m  [32m+[0m[0m resource "aci_fabric_if_pol" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m auto_neg      = "off"
      [32m+[0m[0m description   = "Speed 200G Negotiation Off"
      [32m+[0m[0m fec_mode      = "inherit"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m link_debounce = "100"
      [32m+[0m[0m name          = "200GnoNg"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m speed         = "200G"
    }

[1m  # module.access["default"].aci_fabric_if_pol.map["25GAuto"][0m will be created
[0m  [32m+[0m[0m resource "aci_fabric_if_pol" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m auto_neg      = "on"
      [32m+[0m[0m description   = "Speed 25G Negotiation Auto"
      [32m+[0m[0m fec_mode      = "inherit"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m link_debounce = "100"
      [32m+[0m[0m name          = "25GAuto"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m speed         = "25G"
    }

[1m  # module.access["default"].aci_fabric_if_pol.map["25GnoNg"][0m will be created
[0m  [32m+[0m[0m resource "aci_fabric_if_pol" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m auto_neg      = "off"
      [32m+[0m[0m description   = "Speed 25G Negotiation Off"
      [32m+[0m[0m fec_mode      = "inherit"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m link_debounce = "100"
      [32m+[0m[0m name          = "25GnoNg"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m speed         = "25G"
    }

[1m  # module.access["default"].aci_fabric_if_pol.map["400GAuto"][0m will be created
[0m  [32m+[0m[0m resource "aci_fabric_if_pol" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m auto_neg      = "on"
      [32m+[0m[0m description   = "Speed 400G Negotiation Auto"
      [32m+[0m[0m fec_mode      = "inherit"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m link_debounce = "100"
      [32m+[0m[0m name          = "400GAuto"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m speed         = "400G"
    }

[1m  # module.access["default"].aci_fabric_if_pol.map["400GnoNg"][0m will be created
[0m  [32m+[0m[0m resource "aci_fabric_if_pol" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m auto_neg      = "off"
      [32m+[0m[0m description   = "Speed 400G Negotiation Off"
      [32m+[0m[0m fec_mode      = "inherit"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m link_debounce = "100"
      [32m+[0m[0m name          = "400GnoNg"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m speed         = "400G"
    }

[1m  # module.access["default"].aci_fabric_if_pol.map["40GAuto"][0m will be created
[0m  [32m+[0m[0m resource "aci_fabric_if_pol" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m auto_neg      = "on"
      [32m+[0m[0m description   = "Speed 40G Negotiation Auto"
      [32m+[0m[0m fec_mode      = "inherit"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m link_debounce = "100"
      [32m+[0m[0m name          = "40GAuto"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m speed         = "40G"
    }

[1m  # module.access["default"].aci_fabric_if_pol.map["40GnoNg"][0m will be created
[0m  [32m+[0m[0m resource "aci_fabric_if_pol" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m auto_neg      = "off"
      [32m+[0m[0m description   = "Speed 40G Negotiation Off"
      [32m+[0m[0m fec_mode      = "inherit"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m link_debounce = "100"
      [32m+[0m[0m name          = "40GnoNg"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m speed         = "40G"
    }

[1m  # module.access["default"].aci_fabric_if_pol.map["50GAuto"][0m will be created
[0m  [32m+[0m[0m resource "aci_fabric_if_pol" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m auto_neg      = "on"
      [32m+[0m[0m description   = "Speed 50G Negotiation Auto"
      [32m+[0m[0m fec_mode      = "inherit"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m link_debounce = "100"
      [32m+[0m[0m name          = "50GAuto"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m speed         = "50G"
    }

[1m  # module.access["default"].aci_fabric_if_pol.map["50GnoNg"][0m will be created
[0m  [32m+[0m[0m resource "aci_fabric_if_pol" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m auto_neg      = "off"
      [32m+[0m[0m description   = "Speed 50G Negotiation Off"
      [32m+[0m[0m fec_mode      = "inherit"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m link_debounce = "100"
      [32m+[0m[0m name          = "50GnoNg"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m speed         = "50G"
    }

[1m  # module.access["default"].aci_fabric_if_pol.map["inheritAuto"][0m will be created
[0m  [32m+[0m[0m resource "aci_fabric_if_pol" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m auto_neg      = "on"
      [32m+[0m[0m description   = "Speed Auto Negotiation Auto"
      [32m+[0m[0m fec_mode      = "inherit"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m link_debounce = "100"
      [32m+[0m[0m name          = "inheritAuto"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m speed         = "inherit"
    }

[1m  # module.access["default"].aci_fabric_if_pol.map["inheritnoNg"][0m will be created
[0m  [32m+[0m[0m resource "aci_fabric_if_pol" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m auto_neg      = "off"
      [32m+[0m[0m description   = "Speed Auto Negotiation Off"
      [32m+[0m[0m fec_mode      = "inherit"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m link_debounce = "100"
      [32m+[0m[0m name          = "inheritnoNg"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m speed         = "inherit"
    }

[1m  # module.access["default"].aci_l2_interface_policy.map["portLocal"][0m will be created
[0m  [32m+[0m[0m resource "aci_l2_interface_policy" "map" {
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m description = "VLAN Scope Local"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "portLocal"
      [32m+[0m[0m name_alias  = (known after apply)
      [32m+[0m[0m qinq        = "disabled"
      [32m+[0m[0m vepa        = "disabled"
      [32m+[0m[0m vlan_scope  = "portlocal"
    }

[1m  # module.access["default"].aci_l3_domain_profile.map["l3out"][0m will be created
[0m  [32m+[0m[0m resource "aci_l3_domain_profile" "map" {
      [32m+[0m[0m annotation                         = "orchestrator:terraform"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m name                               = "l3out"
      [32m+[0m[0m name_alias                         = (known after apply)
      [32m+[0m[0m relation_infra_rs_dom_vxlan_ns_def = (known after apply)
      [32m+[0m[0m relation_infra_rs_vlan_ns          = (known after apply)
      [32m+[0m[0m relation_infra_rs_vlan_ns_def      = (known after apply)
    }

[1m  # module.access["default"].aci_lacp_policy.map["lacpActive"][0m will be created
[0m  [32m+[0m[0m resource "aci_lacp_policy" "map" {
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m ctrl        = [
          [32m+[0m[0m "fast-sel-hot-stdby",
          [32m+[0m[0m "graceful-conv",
          [32m+[0m[0m "susp-individual",
        ]
      [32m+[0m[0m description = "LACP Active"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m max_links   = "16"
      [32m+[0m[0m min_links   = "1"
      [32m+[0m[0m mode        = (known after apply)
      [32m+[0m[0m name        = "lacpActive"
      [32m+[0m[0m name_alias  = (known after apply)
    }

[1m  # module.access["default"].aci_lacp_policy.map["lacpPassive"][0m will be created
[0m  [32m+[0m[0m resource "aci_lacp_policy" "map" {
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m ctrl        = [
          [32m+[0m[0m "fast-sel-hot-stdby",
          [32m+[0m[0m "graceful-conv",
          [32m+[0m[0m "susp-individual",
        ]
      [32m+[0m[0m description = "LACP Passive"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m max_links   = "16"
      [32m+[0m[0m min_links   = "1"
      [32m+[0m[0m mode        = (known after apply)
      [32m+[0m[0m name        = "lacpPassive"
      [32m+[0m[0m name_alias  = (known after apply)
    }

[1m  # module.access["default"].aci_lacp_policy.map["macPin"][0m will be created
[0m  [32m+[0m[0m resource "aci_lacp_policy" "map" {
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m ctrl        = [
          [32m+[0m[0m "fast-sel-hot-stdby",
          [32m+[0m[0m "graceful-conv",
          [32m+[0m[0m "susp-individual",
        ]
      [32m+[0m[0m description = "MAC Pinning"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m max_links   = "16"
      [32m+[0m[0m min_links   = "1"
      [32m+[0m[0m mode        = (known after apply)
      [32m+[0m[0m name        = "macPin"
      [32m+[0m[0m name_alias  = (known after apply)
    }

[1m  # module.access["default"].aci_lacp_policy.map["macPinNicLoad"][0m will be created
[0m  [32m+[0m[0m resource "aci_lacp_policy" "map" {
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m ctrl        = [
          [32m+[0m[0m "fast-sel-hot-stdby",
          [32m+[0m[0m "graceful-conv",
          [32m+[0m[0m "susp-individual",
        ]
      [32m+[0m[0m description = "MAC Pin NIC Load"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m max_links   = "16"
      [32m+[0m[0m min_links   = "1"
      [32m+[0m[0m mode        = (known after apply)
      [32m+[0m[0m name        = "macPinNicLoad"
      [32m+[0m[0m name_alias  = (known after apply)
    }

[1m  # module.access["default"].aci_lacp_policy.map["static"][0m will be created
[0m  [32m+[0m[0m resource "aci_lacp_policy" "map" {
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m ctrl        = [
          [32m+[0m[0m "fast-sel-hot-stdby",
          [32m+[0m[0m "graceful-conv",
          [32m+[0m[0m "susp-individual",
        ]
      [32m+[0m[0m description = "Static"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m max_links   = "16"
      [32m+[0m[0m min_links   = "1"
      [32m+[0m[0m mode        = (known after apply)
      [32m+[0m[0m name        = "static"
      [32m+[0m[0m name_alias  = (known after apply)
    }

[1m  # module.access["default"].aci_leaf_access_bundle_policy_group.map["vpc03"][0m will be created
[0m  [32m+[0m[0m resource "aci_leaf_access_bundle_policy_group" "map" {
      [32m+[0m[0m annotation                               = "orchestrator:terraform"
      [32m+[0m[0m description                              = "trunkAep"
      [32m+[0m[0m id                                       = (known after apply)
      [32m+[0m[0m lag_t                                    = "node"
      [32m+[0m[0m name                                     = "vpc03"
      [32m+[0m[0m name_alias                               = (known after apply)
      [32m+[0m[0m relation_infra_rs_att_ent_p              = "uni/infra/attentp-trunkAep"
      [32m+[0m[0m relation_infra_rs_cdp_if_pol             = "uni/infra/cdpIfP-cdpEnabled"
      [32m+[0m[0m relation_infra_rs_copp_if_pol            = "uni/infra/coppifpol-default"
      [32m+[0m[0m relation_infra_rs_fc_if_pol              = "uni/infra/fcIfPol-default"
      [32m+[0m[0m relation_infra_rs_h_if_pol               = "uni/infra/hintfpol-inheritAuto"
      [32m+[0m[0m relation_infra_rs_l2_if_pol              = "uni/infra/l2IfP-default"
      [32m+[0m[0m relation_infra_rs_l2_port_auth_pol       = (known after apply)
      [32m+[0m[0m relation_infra_rs_l2_port_security_pol   = "uni/infra/portsecurityP-default"
      [32m+[0m[0m relation_infra_rs_lacp_pol               = "uni/infra/lacplagp-lacpActive"
      [32m+[0m[0m relation_infra_rs_lldp_if_pol            = "uni/infra/lldpIfP-lldpEnabled"
      [32m+[0m[0m relation_infra_rs_macsec_if_pol          = "uni/infra/macsecifp-default"
      [32m+[0m[0m relation_infra_rs_mcp_if_pol             = "uni/infra/mcpIfP-mcpEnabled"
      [32m+[0m[0m relation_infra_rs_mon_if_infra_pol       = "uni/infra/moninfra-default"
      [32m+[0m[0m relation_infra_rs_qos_dpp_if_pol         = (known after apply)
      [32m+[0m[0m relation_infra_rs_qos_egress_dpp_if_pol  = "uni/infra/qosdpppol-default"
      [32m+[0m[0m relation_infra_rs_qos_ingress_dpp_if_pol = "uni/infra/qosdpppol-default"
      [32m+[0m[0m relation_infra_rs_qos_pfc_if_pol         = "uni/infra/pfc-default"
      [32m+[0m[0m relation_infra_rs_qos_sd_if_pol          = "uni/infra/qossdpol-default"
      [32m+[0m[0m relation_infra_rs_stormctrl_if_pol       = "uni/infra/stormctrlifp-default"
      [32m+[0m[0m relation_infra_rs_stp_if_pol             = "uni/infra/ifPol-bpduFG"
    }

[1m  # module.access["default"].aci_leaf_access_bundle_policy_group.map["vpc04"][0m will be created
[0m  [32m+[0m[0m resource "aci_leaf_access_bundle_policy_group" "map" {
      [32m+[0m[0m annotation                               = "orchestrator:terraform"
      [32m+[0m[0m description                              = "trunkAep"
      [32m+[0m[0m id                                       = (known after apply)
      [32m+[0m[0m lag_t                                    = "node"
      [32m+[0m[0m name                                     = "vpc04"
      [32m+[0m[0m name_alias                               = (known after apply)
      [32m+[0m[0m relation_infra_rs_att_ent_p              = "uni/infra/attentp-trunkAep"
      [32m+[0m[0m relation_infra_rs_cdp_if_pol             = "uni/infra/cdpIfP-cdpEnabled"
      [32m+[0m[0m relation_infra_rs_copp_if_pol            = "uni/infra/coppifpol-default"
      [32m+[0m[0m relation_infra_rs_fc_if_pol              = "uni/infra/fcIfPol-default"
      [32m+[0m[0m relation_infra_rs_h_if_pol               = "uni/infra/hintfpol-inheritAuto"
      [32m+[0m[0m relation_infra_rs_l2_if_pol              = "uni/infra/l2IfP-default"
      [32m+[0m[0m relation_infra_rs_l2_port_auth_pol       = (known after apply)
      [32m+[0m[0m relation_infra_rs_l2_port_security_pol   = "uni/infra/portsecurityP-default"
      [32m+[0m[0m relation_infra_rs_lacp_pol               = "uni/infra/lacplagp-lacpActive"
      [32m+[0m[0m relation_infra_rs_lldp_if_pol            = "uni/infra/lldpIfP-lldpEnabled"
      [32m+[0m[0m relation_infra_rs_macsec_if_pol          = "uni/infra/macsecifp-default"
      [32m+[0m[0m relation_infra_rs_mcp_if_pol             = "uni/infra/mcpIfP-mcpEnabled"
      [32m+[0m[0m relation_infra_rs_mon_if_infra_pol       = "uni/infra/moninfra-default"
      [32m+[0m[0m relation_infra_rs_qos_dpp_if_pol         = (known after apply)
      [32m+[0m[0m relation_infra_rs_qos_egress_dpp_if_pol  = "uni/infra/qosdpppol-default"
      [32m+[0m[0m relation_infra_rs_qos_ingress_dpp_if_pol = "uni/infra/qosdpppol-default"
      [32m+[0m[0m relation_infra_rs_qos_pfc_if_pol         = "uni/infra/pfc-default"
      [32m+[0m[0m relation_infra_rs_qos_sd_if_pol          = "uni/infra/qossdpol-default"
      [32m+[0m[0m relation_infra_rs_stormctrl_if_pol       = "uni/infra/stormctrlifp-default"
      [32m+[0m[0m relation_infra_rs_stp_if_pol             = "uni/infra/ifPol-bpduFG"
    }

[1m  # module.access["default"].aci_leaf_access_port_policy_group.map["trunkPort"][0m will be created
[0m  [32m+[0m[0m resource "aci_leaf_access_port_policy_group" "map" {
      [32m+[0m[0m annotation                               = "orchestrator:terraform"
      [32m+[0m[0m description                              = "Basic Trunk Port"
      [32m+[0m[0m id                                       = (known after apply)
      [32m+[0m[0m name                                     = "trunkPort"
      [32m+[0m[0m name_alias                               = (known after apply)
      [32m+[0m[0m relation_infra_rs_att_ent_p              = "uni/infra/attentp-trunkAep"
      [32m+[0m[0m relation_infra_rs_cdp_if_pol             = "uni/infra/cdpIfP-cdpEnabled"
      [32m+[0m[0m relation_infra_rs_copp_if_pol            = "uni/infra/coppifpol-default"
      [32m+[0m[0m relation_infra_rs_dwdm_if_pol            = "uni/infra/dwdmifpol-default"
      [32m+[0m[0m relation_infra_rs_fc_if_pol              = "uni/infra/fcIfPol-default"
      [32m+[0m[0m relation_infra_rs_h_if_pol               = "uni/infra/hintfpol-inheritAuto"
      [32m+[0m[0m relation_infra_rs_l2_if_pol              = "uni/infra/l2IfP-default"
      [32m+[0m[0m relation_infra_rs_l2_port_auth_pol       = "uni/infra/portauthpol-default"
      [32m+[0m[0m relation_infra_rs_l2_port_security_pol   = "uni/infra/portsecurityP-default"
      [32m+[0m[0m relation_infra_rs_lldp_if_pol            = "uni/infra/lldpIfP-lldpEnabled"
      [32m+[0m[0m relation_infra_rs_macsec_if_pol          = "uni/infra/macsecifp-default"
      [32m+[0m[0m relation_infra_rs_mcp_if_pol             = "uni/infra/mcpIfP-mcpEnabled"
      [32m+[0m[0m relation_infra_rs_mon_if_infra_pol       = "uni/infra/moninfra-default"
      [32m+[0m[0m relation_infra_rs_poe_if_pol             = "uni/infra/poeIfP-default"
      [32m+[0m[0m relation_infra_rs_qos_dpp_if_pol         = (known after apply)
      [32m+[0m[0m relation_infra_rs_qos_egress_dpp_if_pol  = "uni/infra/qosdpppol-default"
      [32m+[0m[0m relation_infra_rs_qos_ingress_dpp_if_pol = "uni/infra/qosdpppol-default"
      [32m+[0m[0m relation_infra_rs_qos_pfc_if_pol         = "uni/infra/pfc-default"
      [32m+[0m[0m relation_infra_rs_qos_sd_if_pol          = "uni/infra/qossdpol-default"
      [32m+[0m[0m relation_infra_rs_stormctrl_if_pol       = "uni/infra/stormctrlifp-default"
      [32m+[0m[0m relation_infra_rs_stp_if_pol             = "uni/infra/ifPol-bpduFG"
    }

[1m  # module.access["default"].aci_leaf_breakout_port_group.map["10g-4x"][0m will be created
[0m  [32m+[0m[0m resource "aci_leaf_breakout_port_group" "map" {
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m brkout_map  = "10g-4x"
      [32m+[0m[0m description = "Breakup Map for 4 x 10G"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "10g-4x"
      [32m+[0m[0m name_alias  = (known after apply)
    }

[1m  # module.access["default"].aci_leaf_breakout_port_group.map["25g-4x"][0m will be created
[0m  [32m+[0m[0m resource "aci_leaf_breakout_port_group" "map" {
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m brkout_map  = "25g-4x"
      [32m+[0m[0m description = "Breakup Map for 4 x 25G"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "25g-4x"
      [32m+[0m[0m name_alias  = (known after apply)
    }

[1m  # module.access["default"].aci_lldp_interface_policy.map["lldpDisabled"][0m will be created
[0m  [32m+[0m[0m resource "aci_lldp_interface_policy" "map" {
      [32m+[0m[0m admin_rx_st = "disabled"
      [32m+[0m[0m admin_tx_st = "disabled"
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m description = "LLDP Both Disabled"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "lldpDisabled"
      [32m+[0m[0m name_alias  = (known after apply)
    }

[1m  # module.access["default"].aci_lldp_interface_policy.map["lldpEnabled"][0m will be created
[0m  [32m+[0m[0m resource "aci_lldp_interface_policy" "map" {
      [32m+[0m[0m admin_rx_st = "enabled"
      [32m+[0m[0m admin_tx_st = "enabled"
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m description = "LLDP Both Enabled"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "lldpEnabled"
      [32m+[0m[0m name_alias  = (known after apply)
    }

[1m  # module.access["default"].aci_lldp_interface_policy.map["lldpRx"][0m will be created
[0m  [32m+[0m[0m resource "aci_lldp_interface_policy" "map" {
      [32m+[0m[0m admin_rx_st = "enabled"
      [32m+[0m[0m admin_tx_st = "disabled"
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m description = "LLDP Rx Enabled"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "lldpRx"
      [32m+[0m[0m name_alias  = (known after apply)
    }

[1m  # module.access["default"].aci_lldp_interface_policy.map["lldpTx"][0m will be created
[0m  [32m+[0m[0m resource "aci_lldp_interface_policy" "map" {
      [32m+[0m[0m admin_rx_st = "disabled"
      [32m+[0m[0m admin_tx_st = "enabled"
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m description = "LLDP Tx Enabled"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "lldpTx"
      [32m+[0m[0m name_alias  = (known after apply)
    }

[1m  # module.access["default"].aci_mcp_instance_policy.map["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_mcp_instance_policy" "map" {
      [32m+[0m[0m admin_st         = "enabled"
      [32m+[0m[0m annotation       = "orchestrator:terraform"
      [32m+[0m[0m ctrl             = [
          [32m+[0m[0m "pdu-per-vlan",
          [32m+[0m[0m "stateful-ha",
        ]
      [32m+[0m[0m description      = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m init_delay_time  = "180"
      [32m+[0m[0m loop_detect_mult = "3"
      [32m+[0m[0m loop_protect_act = "port-disable"
      [32m+[0m[0m name_alias       = (known after apply)
      [32m+[0m[0m tx_freq          = "2"
      [32m+[0m[0m tx_freq_msec     = "0"
    }

[1m  # module.access["default"].aci_miscabling_protocol_interface_policy.map["mcpDisabled"][0m will be created
[0m  [32m+[0m[0m resource "aci_miscabling_protocol_interface_policy" "map" {
      [32m+[0m[0m admin_st    = "disabled"
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m description = "MCP Disabled"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "mcpDisabled"
      [32m+[0m[0m name_alias  = (known after apply)
    }

[1m  # module.access["default"].aci_miscabling_protocol_interface_policy.map["mcpEnabled"][0m will be created
[0m  [32m+[0m[0m resource "aci_miscabling_protocol_interface_policy" "map" {
      [32m+[0m[0m admin_st    = "enabled"
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m description = "MCP Enabled"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "mcpEnabled"
      [32m+[0m[0m name_alias  = (known after apply)
    }

[1m  # module.access["default"].aci_physical_domain.map["access"][0m will be created
[0m  [32m+[0m[0m resource "aci_physical_domain" "map" {
      [32m+[0m[0m annotation                         = "orchestrator:terraform"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m name                               = "access"
      [32m+[0m[0m name_alias                         = (known after apply)
      [32m+[0m[0m relation_infra_rs_dom_vxlan_ns_def = (known after apply)
      [32m+[0m[0m relation_infra_rs_vlan_ns          = (known after apply)
      [32m+[0m[0m relation_infra_rs_vlan_ns_def      = (known after apply)
    }

[1m  # module.access["default"].aci_port_security_policy.map["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_port_security_policy" "map" {
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m description = "Default Port Security Policy"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m maximum     = "0"
      [32m+[0m[0m name        = "default"
      [32m+[0m[0m name_alias  = (known after apply)
      [32m+[0m[0m timeout     = "60"
      [32m+[0m[0m violation   = "protect"
    }

[1m  # module.access["default"].aci_qos_instance_policy.map["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_qos_instance_policy" "map" {
      [32m+[0m[0m annotation            = "orchestrator:terraform"
      [32m+[0m[0m ctrl                  = "dot1p-preserve"
      [32m+[0m[0m description           = (known after apply)
      [32m+[0m[0m etrap_age_timer       = "0"
      [32m+[0m[0m etrap_bw_thresh       = "0"
      [32m+[0m[0m etrap_byte_ct         = "0"
      [32m+[0m[0m etrap_st              = "no"
      [32m+[0m[0m fabric_flush_interval = "500"
      [32m+[0m[0m fabric_flush_st       = "no"
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m name_alias            = (known after apply)
      [32m+[0m[0m uburst_spine_queues   = "0"
      [32m+[0m[0m uburst_tor_queues     = "0"
    }

[1m  # module.access["default"].aci_ranges.vlans["all-vlans:1000-1199"][0m will be created
[0m  [32m+[0m[0m resource "aci_ranges" "vlans" {
      [32m+[0m[0m alloc_mode   = "inherit"
      [32m+[0m[0m annotation   = "orchestrator:terraform"
      [32m+[0m[0m description  = (known after apply)
      [32m+[0m[0m from         = "vlan-1000"
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m name_alias   = (known after apply)
      [32m+[0m[0m role         = "external"
      [32m+[0m[0m to           = "vlan-1199"
      [32m+[0m[0m vlan_pool_dn = (known after apply)
    }

[1m  # module.access["default"].aci_ranges.vlans["all-vlans:4-299"][0m will be created
[0m  [32m+[0m[0m resource "aci_ranges" "vlans" {
      [32m+[0m[0m alloc_mode   = "static"
      [32m+[0m[0m annotation   = "orchestrator:terraform"
      [32m+[0m[0m description  = (known after apply)
      [32m+[0m[0m from         = "vlan-4"
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m name_alias   = (known after apply)
      [32m+[0m[0m role         = "external"
      [32m+[0m[0m to           = "vlan-299"
      [32m+[0m[0m vlan_pool_dn = (known after apply)
    }

[1m  # module.access["default"].aci_rest_managed.vmm_domain_uplinks["Asgard"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "vmm_domain_uplinks" {
      [32m+[0m[0m class_name = "vmmUplinkPCont"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "numOfUplinks" = "2"
        }
      [32m+[0m[0m dn         = "uni/vmmp-VMware/dom-Asgard/uplinkpcont"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.access["default"].aci_rest_managed.vmm_uplinks["Asgard:uplink1"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "vmm_uplinks" {
      [32m+[0m[0m class_name = "vmmUplinkP"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "uplinkId"   = "1"
          [32m+[0m[0m "uplinkName" = "uplink1"
        }
      [32m+[0m[0m dn         = "uni/vmmp-VMware/dom-Asgard/uplinkpcont/uplinkp-1"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.access["default"].aci_rest_managed.vmm_uplinks["Asgard:uplink2"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "vmm_uplinks" {
      [32m+[0m[0m class_name = "vmmUplinkP"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "uplinkId"   = "2"
          [32m+[0m[0m "uplinkName" = "uplink2"
        }
      [32m+[0m[0m dn         = "uni/vmmp-VMware/dom-Asgard/uplinkpcont/uplinkp-2"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.access["default"].aci_spanning_tree_interface_policy.map["bpduFG"][0m will be created
[0m  [32m+[0m[0m resource "aci_spanning_tree_interface_policy" "map" {
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m ctrl        = [
          [32m+[0m[0m "unspecified",
        ]
      [32m+[0m[0m description = "BPDU Filter and Guard"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "bpduFG"
      [32m+[0m[0m name_alias  = (known after apply)
    }

[1m  # module.access["default"].aci_spanning_tree_interface_policy.map["bpduFt"][0m will be created
[0m  [32m+[0m[0m resource "aci_spanning_tree_interface_policy" "map" {
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m ctrl        = [
          [32m+[0m[0m "unspecified",
        ]
      [32m+[0m[0m description = "BPDU Filter"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "bpduFt"
      [32m+[0m[0m name_alias  = (known after apply)
    }

[1m  # module.access["default"].aci_spanning_tree_interface_policy.map["bpduGd"][0m will be created
[0m  [32m+[0m[0m resource "aci_spanning_tree_interface_policy" "map" {
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m ctrl        = [
          [32m+[0m[0m "unspecified",
        ]
      [32m+[0m[0m description = "BPDU Guard"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "bpduGd"
      [32m+[0m[0m name_alias  = (known after apply)
    }

[1m  # module.access["default"].aci_spine_port_policy_group.map["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_spine_port_policy_group" "map" {
      [32m+[0m[0m annotation                      = "orchestrator:terraform"
      [32m+[0m[0m description                     = (known after apply)
      [32m+[0m[0m id                              = (known after apply)
      [32m+[0m[0m name                            = "default"
      [32m+[0m[0m name_alias                      = (known after apply)
      [32m+[0m[0m relation_infra_rs_att_ent_p     = "uni/infra/attentp-accessAep"
      [32m+[0m[0m relation_infra_rs_cdp_if_pol    = "uni/infra/cdpIfP-cdpEnabled"
      [32m+[0m[0m relation_infra_rs_h_if_pol      = "uni/infra/hintfpol-inheritAuto"
      [32m+[0m[0m relation_infra_rs_macsec_if_pol = "uni/infra/macsecifp-default"
    }

[1m  # module.access["default"].aci_spine_switch_policy_group.map["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_spine_switch_policy_group" "map" {
      [32m+[0m[0m annotation                                   = "orchestrator:terraform"
      [32m+[0m[0m description                                  = "Default Spine Policy Group"
      [32m+[0m[0m id                                           = (known after apply)
      [32m+[0m[0m name                                         = "default"
      [32m+[0m[0m name_alias                                   = (known after apply)
      [32m+[0m[0m relation_infra_rs_iacl_spine_profile         = "uni/infra/iaclspinep-default"
      [32m+[0m[0m relation_infra_rs_spine_bfd_ipv4_inst_pol    = "uni/infra/bfdIpv4Inst-default"
      [32m+[0m[0m relation_infra_rs_spine_bfd_ipv6_inst_pol    = "uni/infra/bfdIpv6Inst-default"
      [32m+[0m[0m relation_infra_rs_spine_copp_profile         = "uni/infra/coppspinep-default"
      [32m+[0m[0m relation_infra_rs_spine_p_grp_to_cdp_if_pol  = "uni/infra/cdpIfP-cdpEnabled"
      [32m+[0m[0m relation_infra_rs_spine_p_grp_to_lldp_if_pol = "uni/infra/lldpIfP-lldpEnabled"
    }

[1m  # module.access["default"].aci_vlan_pool.vlan_pools["all-vlans"][0m will be created
[0m  [32m+[0m[0m resource "aci_vlan_pool" "vlan_pools" {
      [32m+[0m[0m alloc_mode  = "dynamic"
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m description = "Access VLAN Pool"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "all-vlans"
      [32m+[0m[0m name_alias  = (known after apply)
    }

[1m  # module.access["default"].aci_vmm_controller.map["Asgard:vcenter.rich.ciscolabs.com"][0m will be created
[0m  [32m+[0m[0m resource "aci_vmm_controller" "map" {
      [32m+[0m[0m annotation                   = "orchestrator:terraform"
      [32m+[0m[0m dvs_version                  = "7.0"
      [32m+[0m[0m host_or_ip                   = "vcenter.rich.ciscolabs.com"
      [32m+[0m[0m id                           = (known after apply)
      [32m+[0m[0m inventory_trig_st            = "untriggered"
      [32m+[0m[0m mode                         = "default"
      [32m+[0m[0m msft_config_err_msg          = (known after apply)
      [32m+[0m[0m msft_config_issues           = (known after apply)
      [32m+[0m[0m n1kv_stats_mode              = (known after apply)
      [32m+[0m[0m name                         = "vcenter.rich.ciscolabs.com"
      [32m+[0m[0m name_alias                   = (known after apply)
      [32m+[0m[0m port                         = "0"
      [32m+[0m[0m relation_vmm_rs_acc          = (known after apply)
      [32m+[0m[0m relation_vmm_rs_vxlan_ns_def = (known after apply)
      [32m+[0m[0m root_cont_name               = "Asgard"
      [32m+[0m[0m scope                        = "vm"
      [32m+[0m[0m seq_num                      = "0"
      [32m+[0m[0m stats_mode                   = "enabled"
      [32m+[0m[0m vmm_domain_dn                = (known after apply)
      [32m+[0m[0m vxlan_depl_pref              = "vxlan"
    }

[1m  # module.access["default"].aci_vmm_credential.map["Asgard"][0m will be created
[0m  [32m+[0m[0m resource "aci_vmm_credential" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m description   = (known after apply)
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m name          = "Asgard"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m pwd           = (sensitive value)
      [32m+[0m[0m usr           = "administrator@rich.local"
      [32m+[0m[0m vmm_domain_dn = (known after apply)
    }

[1m  # module.access["default"].aci_vmm_domain.map["Asgard"][0m will be created
[0m  [32m+[0m[0m resource "aci_vmm_domain" "map" {
      [32m+[0m[0m access_mode                          = "read-write"
      [32m+[0m[0m annotation                           = "orchestrator:terraform"
      [32m+[0m[0m arp_learning                         = (known after apply)
      [32m+[0m[0m ave_time_out                         = (known after apply)
      [32m+[0m[0m config_infra_pg                      = (known after apply)
      [32m+[0m[0m ctrl_knob                            = "epDpVerify"
      [32m+[0m[0m delimiter                            = "|"
      [32m+[0m[0m enable_ave                           = (known after apply)
      [32m+[0m[0m enable_tag                           = "no"
      [32m+[0m[0m enable_vm_folder                     = (known after apply)
      [32m+[0m[0m encap_mode                           = "vlan"
      [32m+[0m[0m enf_pref                             = "hw"
      [32m+[0m[0m ep_inventory_type                    = "on-link"
      [32m+[0m[0m ep_ret_time                          = "0"
      [32m+[0m[0m hv_avail_monitor                     = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m mcast_addr                           = (known after apply)
      [32m+[0m[0m mode                                 = "default"
      [32m+[0m[0m name                                 = "Asgard"
      [32m+[0m[0m name_alias                           = (known after apply)
      [32m+[0m[0m pref_encap_mode                      = "unspecified"
      [32m+[0m[0m provider_profile_dn                  = "uni/vmmp-VMware"
      [32m+[0m[0m relation_infra_rs_vlan_ns            = (known after apply)
      [32m+[0m[0m relation_vmm_rs_default_cdp_if_pol   = (known after apply)
      [32m+[0m[0m relation_vmm_rs_default_fw_pol       = (known after apply)
      [32m+[0m[0m relation_vmm_rs_default_l2_inst_pol  = (known after apply)
      [32m+[0m[0m relation_vmm_rs_default_lacp_lag_pol = (known after apply)
      [32m+[0m[0m relation_vmm_rs_default_lldp_if_pol  = (known after apply)
      [32m+[0m[0m relation_vmm_rs_default_stp_if_pol   = (known after apply)
    }

[1m  # module.access["default"].aci_vpc_domain_policy.map["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_vpc_domain_policy" "map" {
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m dead_intvl  = "120"
      [32m+[0m[0m description = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "default"
      [32m+[0m[0m name_alias  = (known after apply)
    }

[1m  # module.access["default"].aci_vswitch_policy.map["Asgard"][0m will be created
[0m  [32m+[0m[0m resource "aci_vswitch_policy" "map" {
      [32m+[0m[0m annotation                                   = "orchestrator:terraform"
      [32m+[0m[0m description                                  = (known after apply)
      [32m+[0m[0m id                                           = (known after apply)
      [32m+[0m[0m name_alias                                   = (known after apply)
      [32m+[0m[0m relation_vmm_rs_vswitch_override_cdp_if_pol  = "uni/infra/cdpIfP-cdpEnabled"
      [32m+[0m[0m relation_vmm_rs_vswitch_override_fw_pol      = "uni/infra/fwP-default"
      [32m+[0m[0m relation_vmm_rs_vswitch_override_lacp_pol    = "uni/infra/lacplagp-macPin"
      [32m+[0m[0m relation_vmm_rs_vswitch_override_lldp_if_pol = "uni/infra/lldpIfP-lldpEnabled"
      [32m+[0m[0m relation_vmm_rs_vswitch_override_mtu_pol     = "uni/fabric/l2pol-default"
      [32m+[0m[0m vmm_domain_dn                                = (known after apply)
    }

[1m  # module.admin["default"].aci_authentication_properties.remote_authentication["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_authentication_properties" "remote_authentication" {
      [32m+[0m[0m annotation      = "orchestrator:terraform"
      [32m+[0m[0m def_role_policy = "no-login"
      [32m+[0m[0m description     = (known after apply)
      [32m+[0m[0m id              = (known after apply)
      [32m+[0m[0m name_alias      = (known after apply)
      [32m+[0m[0m ping_check      = "true"
      [32m+[0m[0m retries         = "1"
      [32m+[0m[0m timeout         = "5"
    }

[1m  # module.admin["default"].aci_configuration_export_policy.map["lnx2.rich.ciscolabs.com"][0m will be created
[0m  [32m+[0m[0m resource "aci_configuration_export_policy" "map" {
      [32m+[0m[0m admin_st                              = "untriggered"
      [32m+[0m[0m annotation                            = "orchestrator:terraform"
      [32m+[0m[0m description                           = "LNX Backup Servers"
      [32m+[0m[0m format                                = "json"
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m include_secure_fields                 = "yes"
      [32m+[0m[0m max_snapshot_count                    = "global-limit"
      [32m+[0m[0m name                                  = "lnx2.rich.ciscolabs.com"
      [32m+[0m[0m name_alias                            = (known after apply)
      [32m+[0m[0m relation_config_rs_export_destination = (known after apply)
      [32m+[0m[0m relation_config_rs_export_scheduler   = (known after apply)
      [32m+[0m[0m snapshot                              = "no"
      [32m+[0m[0m target_dn                             = (known after apply)
    }

[1m  # module.admin["default"].aci_console_authentication.map["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_console_authentication" "map" {
      [32m+[0m[0m annotation     = "orchestrator:terraform"
      [32m+[0m[0m description    = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m name_alias     = (known after apply)
      [32m+[0m[0m provider_group = (known after apply)
      [32m+[0m[0m realm          = "local"
      [32m+[0m[0m realm_sub_type = "default"
    }

[1m  # module.admin["default"].aci_default_authentication.map["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_default_authentication" "map" {
      [32m+[0m[0m annotation     = "orchestrator:terraform"
      [32m+[0m[0m description    = (known after apply)
      [32m+[0m[0m fallback_check = "false"
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m name_alias     = (known after apply)
      [32m+[0m[0m provider_group = (known after apply)
      [32m+[0m[0m realm          = "local"
      [32m+[0m[0m realm_sub_type = "default"
    }

[1m  # module.admin["default"].aci_file_remote_path.map["lnx2.rich.ciscolabs.com"][0m will be created
[0m  [32m+[0m[0m resource "aci_file_remote_path" "map" {
      [32m+[0m[0m annotation                            = "orchestrator:terraform"
      [32m+[0m[0m auth_type                             = "usePassword"
      [32m+[0m[0m description                           = "LNX Backup Servers"
      [32m+[0m[0m host                                  = "lnx2.rich.ciscolabs.com"
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m identity_private_key_contents         = (known after apply)
      [32m+[0m[0m identity_private_key_passphrase       = (known after apply)
      [32m+[0m[0m name                                  = "lnx2.rich.ciscolabs.com"
      [32m+[0m[0m name_alias                            = (known after apply)
      [32m+[0m[0m protocol                              = "sftp"
      [32m+[0m[0m relation_file_rs_a_remote_host_to_epg = "uni/tn-mgmt/mgmtp-default/oob-ooband"
      [32m+[0m[0m remote_path                           = "/tmp"
      [32m+[0m[0m remote_port                           = "22"
      [32m+[0m[0m user_name                             = "tyscott"
      [32m+[0m[0m user_passwd                           = (sensitive value)
    }

[1m  # module.admin["default"].aci_global_security.security["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_global_security" "security" {
      [32m+[0m[0m annotation                 = "orchestrator:terraform"
      [32m+[0m[0m block_duration             = "60"
      [32m+[0m[0m change_count               = "2"
      [32m+[0m[0m change_during_interval     = "enable"
      [32m+[0m[0m change_interval            = "48"
      [32m+[0m[0m description                = (known after apply)
      [32m+[0m[0m enable_login_block         = "disable"
      [32m+[0m[0m expiration_warn_time       = "15"
      [32m+[0m[0m history_count              = "5"
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m max_failed_attempts        = "5"
      [32m+[0m[0m max_failed_attempts_window = "5"
      [32m+[0m[0m maximum_validity_period    = "24"
      [32m+[0m[0m name_alias                 = (known after apply)
      [32m+[0m[0m no_change_interval         = "48"
      [32m+[0m[0m pwd_strength_check         = "yes"
      [32m+[0m[0m session_record_flags       = [
          [32m+[0m[0m "login",
          [32m+[0m[0m "logout",
          [32m+[0m[0m "refresh",
        ]
      [32m+[0m[0m ui_idle_timeout_seconds    = "65525"
      [32m+[0m[0m webtoken_timeout_seconds   = "600"
    }

[1m  # module.admin["default"].aci_login_domain.login_domains["RICH"][0m will be created
[0m  [32m+[0m[0m resource "aci_login_domain" "login_domains" {
      [32m+[0m[0m annotation     = "orchestrator:terraform"
      [32m+[0m[0m description    = "RICH Login Domain."
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m name           = "RICH"
      [32m+[0m[0m name_alias     = (known after apply)
      [32m+[0m[0m provider_group = "RICH"
      [32m+[0m[0m realm          = "tacacs"
      [32m+[0m[0m realm_sub_type = "default"
    }

[1m  # module.admin["default"].aci_login_domain_provider.login_domain_providers["10.101.128.71:tacacs"][0m will be created
[0m  [32m+[0m[0m resource "aci_login_domain_provider" "login_domain_providers" {
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m description = "10.101.128.71 TACACS Login Domain Provider."
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "10.101.128.71"
      [32m+[0m[0m name_alias  = (known after apply)
      [32m+[0m[0m order       = "0"
      [32m+[0m[0m parent_dn   = (known after apply)
    }

[1m  # module.admin["default"].aci_login_domain_provider.login_domain_providers["10.101.128.72:tacacs"][0m will be created
[0m  [32m+[0m[0m resource "aci_login_domain_provider" "login_domain_providers" {
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m description = "10.101.128.72 TACACS Login Domain Provider."
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "10.101.128.72"
      [32m+[0m[0m name_alias  = (known after apply)
      [32m+[0m[0m order       = "1"
      [32m+[0m[0m parent_dn   = (known after apply)
    }

[1m  # module.admin["default"].aci_maintenance_group_node.map["MG_A:101"][0m will be created
[0m  [32m+[0m[0m resource "aci_maintenance_group_node" "map" {
      [32m+[0m[0m annotation               = "orchestrator:terraform"
      [32m+[0m[0m description              = (known after apply)
      [32m+[0m[0m from_                    = "101"
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m name                     = "blk101-101"
      [32m+[0m[0m name_alias               = (known after apply)
      [32m+[0m[0m pod_maintenance_group_dn = (known after apply)
      [32m+[0m[0m to_                      = "101"
    }

[1m  # module.admin["default"].aci_maintenance_group_node.map["MG_A:201"][0m will be created
[0m  [32m+[0m[0m resource "aci_maintenance_group_node" "map" {
      [32m+[0m[0m annotation               = "orchestrator:terraform"
      [32m+[0m[0m description              = (known after apply)
      [32m+[0m[0m from_                    = "201"
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m name                     = "blk201-201"
      [32m+[0m[0m name_alias               = (known after apply)
      [32m+[0m[0m pod_maintenance_group_dn = (known after apply)
      [32m+[0m[0m to_                      = "201"
    }

[1m  # module.admin["default"].aci_maintenance_group_node.map["MG_B:202"][0m will be created
[0m  [32m+[0m[0m resource "aci_maintenance_group_node" "map" {
      [32m+[0m[0m annotation               = "orchestrator:terraform"
      [32m+[0m[0m description              = (known after apply)
      [32m+[0m[0m from_                    = "202"
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m name                     = "blk202-202"
      [32m+[0m[0m name_alias               = (known after apply)
      [32m+[0m[0m pod_maintenance_group_dn = (known after apply)
      [32m+[0m[0m to_                      = "202"
    }

[1m  # module.admin["default"].aci_maintenance_group_node.map["MG_C:102"][0m will be created
[0m  [32m+[0m[0m resource "aci_maintenance_group_node" "map" {
      [32m+[0m[0m annotation               = "orchestrator:terraform"
      [32m+[0m[0m description              = (known after apply)
      [32m+[0m[0m from_                    = "102"
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m name                     = "blk102-102"
      [32m+[0m[0m name_alias               = (known after apply)
      [32m+[0m[0m pod_maintenance_group_dn = (known after apply)
      [32m+[0m[0m to_                      = "102"
    }

[1m  # module.admin["default"].aci_pod_maintenance_group.map["MG_A"][0m will be created
[0m  [32m+[0m[0m resource "aci_pod_maintenance_group" "map" {
      [32m+[0m[0m annotation                 = "orchestrator:terraform"
      [32m+[0m[0m description                = "Firmware Update Group A"
      [32m+[0m[0m fwtype                     = "switch"
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m name                       = "MG_A"
      [32m+[0m[0m name_alias                 = (known after apply)
      [32m+[0m[0m pod_maintenance_group_type = "range"
      [32m+[0m[0m relation_maint_rs_mgrpp    = (known after apply)
    }

[1m  # module.admin["default"].aci_pod_maintenance_group.map["MG_B"][0m will be created
[0m  [32m+[0m[0m resource "aci_pod_maintenance_group" "map" {
      [32m+[0m[0m annotation                 = "orchestrator:terraform"
      [32m+[0m[0m description                = (known after apply)
      [32m+[0m[0m fwtype                     = "switch"
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m name                       = "MG_B"
      [32m+[0m[0m name_alias                 = (known after apply)
      [32m+[0m[0m pod_maintenance_group_type = "range"
      [32m+[0m[0m relation_maint_rs_mgrpp    = (known after apply)
    }

[1m  # module.admin["default"].aci_pod_maintenance_group.map["MG_C"][0m will be created
[0m  [32m+[0m[0m resource "aci_pod_maintenance_group" "map" {
      [32m+[0m[0m annotation                 = "orchestrator:terraform"
      [32m+[0m[0m description                = (known after apply)
      [32m+[0m[0m fwtype                     = "switch"
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m name                       = "MG_C"
      [32m+[0m[0m name_alias                 = (known after apply)
      [32m+[0m[0m pod_maintenance_group_type = "range"
      [32m+[0m[0m relation_maint_rs_mgrpp    = (known after apply)
    }

[1m  # module.admin["default"].aci_recurring_window.map["Every24Hours"][0m will be created
[0m  [32m+[0m[0m resource "aci_recurring_window" "map" {
      [32m+[0m[0m annotation        = "orchestrator:terraform"
      [32m+[0m[0m concur_cap        = "unlimited"
      [32m+[0m[0m day               = "every-day"
      [32m+[0m[0m hour              = "0"
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m minute            = "15"
      [32m+[0m[0m name              = "Every24Hours"
      [32m+[0m[0m name_alias        = (known after apply)
      [32m+[0m[0m node_upg_interval = "0"
      [32m+[0m[0m proc_break        = "none"
      [32m+[0m[0m proc_cap          = "unlimited"
      [32m+[0m[0m scheduler_dn      = (known after apply)
      [32m+[0m[0m time_cap          = "unlimited"
    }

[1m  # module.admin["default"].aci_rest_managed.firmware_group["MG_A"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "firmware_group" {
      [32m+[0m[0m class_name = "firmwareFwGrp"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "descr" = "Firmware Update Group A"
          [32m+[0m[0m "name"  = "MG_A"
          [32m+[0m[0m "type"  = "range"
        }
      [32m+[0m[0m dn         = "uni/fabric/fwgrp-MG_A"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.admin["default"].aci_rest_managed.firmware_group["MG_B"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "firmware_group" {
      [32m+[0m[0m class_name = "firmwareFwGrp"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "descr" = ""
          [32m+[0m[0m "name"  = "MG_B"
          [32m+[0m[0m "type"  = "range"
        }
      [32m+[0m[0m dn         = "uni/fabric/fwgrp-MG_B"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.admin["default"].aci_rest_managed.firmware_group["MG_C"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "firmware_group" {
      [32m+[0m[0m class_name = "firmwareFwGrp"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "descr" = ""
          [32m+[0m[0m "name"  = "MG_C"
          [32m+[0m[0m "type"  = "range"
        }
      [32m+[0m[0m dn         = "uni/fabric/fwgrp-MG_C"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.admin["default"].aci_rest_managed.firmware_group_nodes["MG_A:101"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "firmware_group_nodes" {
      [32m+[0m[0m class_name = "fabricNodeBlk"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "from_" = "101"
          [32m+[0m[0m "name"  = "blk101-101"
          [32m+[0m[0m "to_"   = "101"
        }
      [32m+[0m[0m dn         = "uni/fabric/fwgrp-MG_A/nodeblk-blk101-101"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.admin["default"].aci_rest_managed.firmware_group_nodes["MG_A:201"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "firmware_group_nodes" {
      [32m+[0m[0m class_name = "fabricNodeBlk"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "from_" = "201"
          [32m+[0m[0m "name"  = "blk201-201"
          [32m+[0m[0m "to_"   = "201"
        }
      [32m+[0m[0m dn         = "uni/fabric/fwgrp-MG_A/nodeblk-blk201-201"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.admin["default"].aci_rest_managed.firmware_group_nodes["MG_B:202"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "firmware_group_nodes" {
      [32m+[0m[0m class_name = "fabricNodeBlk"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "from_" = "202"
          [32m+[0m[0m "name"  = "blk202-202"
          [32m+[0m[0m "to_"   = "202"
        }
      [32m+[0m[0m dn         = "uni/fabric/fwgrp-MG_B/nodeblk-blk202-202"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.admin["default"].aci_rest_managed.firmware_group_nodes["MG_C:102"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "firmware_group_nodes" {
      [32m+[0m[0m class_name = "fabricNodeBlk"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "from_" = "102"
          [32m+[0m[0m "name"  = "blk102-102"
          [32m+[0m[0m "to_"   = "102"
        }
      [32m+[0m[0m dn         = "uni/fabric/fwgrp-MG_C/nodeblk-blk102-102"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.admin["default"].aci_rest_managed.firmware_policy["MG_A"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "firmware_policy" {
      [32m+[0m[0m class_name = "firmwareFwP"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "descr"                = "Firmware Update Group A"
          [32m+[0m[0m "effectiveOnReboot"    = "no"
          [32m+[0m[0m "ignoreCompat"         = "yes"
          [32m+[0m[0m "name"                 = "MG_A"
          [32m+[0m[0m "srUpgrade"            = "no"
          [32m+[0m[0m "srVersion"            = "default"
          [32m+[0m[0m "version"              = "n9000-16.0(2h)"
          [32m+[0m[0m "versionCheckOverride" = "untriggered"
        }
      [32m+[0m[0m dn         = "uni/fabric/fwpol-MG_A"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.admin["default"].aci_rest_managed.firmware_policy["MG_B"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "firmware_policy" {
      [32m+[0m[0m class_name = "firmwareFwP"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "descr"                = ""
          [32m+[0m[0m "effectiveOnReboot"    = "no"
          [32m+[0m[0m "ignoreCompat"         = "yes"
          [32m+[0m[0m "name"                 = "MG_B"
          [32m+[0m[0m "srUpgrade"            = "no"
          [32m+[0m[0m "srVersion"            = ""
          [32m+[0m[0m "version"              = "n9000-16.0(2h)"
          [32m+[0m[0m "versionCheckOverride" = "untriggered"
        }
      [32m+[0m[0m dn         = "uni/fabric/fwpol-MG_B"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.admin["default"].aci_rest_managed.firmware_policy["MG_C"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "firmware_policy" {
      [32m+[0m[0m class_name = "firmwareFwP"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "descr"                = ""
          [32m+[0m[0m "effectiveOnReboot"    = "no"
          [32m+[0m[0m "ignoreCompat"         = "yes"
          [32m+[0m[0m "name"                 = "MG_C"
          [32m+[0m[0m "srUpgrade"            = "no"
          [32m+[0m[0m "srVersion"            = ""
          [32m+[0m[0m "version"              = "n9000-16.0(2h)"
          [32m+[0m[0m "versionCheckOverride" = "untriggered"
        }
      [32m+[0m[0m dn         = "uni/fabric/fwpol-MG_C"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.admin["default"].aci_rest_managed.maintenance_policy["MG_A"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "maintenance_policy" {
      [32m+[0m[0m class_name = "maintMaintP"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "adminSt"              = "untriggered"
          [32m+[0m[0m "descr"                = "Firmware Update Group A"
          [32m+[0m[0m "downloadSt"           = "untriggered"
          [32m+[0m[0m "graceful"             = "yes"
          [32m+[0m[0m "ignoreCompat"         = "yes"
          [32m+[0m[0m "name"                 = "MG_A"
          [32m+[0m[0m "notifCond"            = "notifyOnlyOnFailures"
          [32m+[0m[0m "runMode"              = "pauseOnlyOnFailures"
          [32m+[0m[0m "smuOperation"         = "smuInstall"
          [32m+[0m[0m "smuOperationFlags"    = "smuReloadImmediate"
          [32m+[0m[0m "srUpgrade"            = "no"
          [32m+[0m[0m "srVersion"            = "default"
          [32m+[0m[0m "version"              = "n9000-16.0(2h)"
          [32m+[0m[0m "versionCheckOverride" = "untriggered"
        }
      [32m+[0m[0m dn         = "uni/fabric/maintpol-MG_A"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.admin["default"].aci_rest_managed.maintenance_policy["MG_B"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "maintenance_policy" {
      [32m+[0m[0m class_name = "maintMaintP"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "adminSt"              = "untriggered"
          [32m+[0m[0m "descr"                = ""
          [32m+[0m[0m "downloadSt"           = "untriggered"
          [32m+[0m[0m "graceful"             = "yes"
          [32m+[0m[0m "ignoreCompat"         = "yes"
          [32m+[0m[0m "name"                 = "MG_B"
          [32m+[0m[0m "notifCond"            = "notifyOnlyOnFailures"
          [32m+[0m[0m "runMode"              = "pauseOnlyOnFailures"
          [32m+[0m[0m "smuOperation"         = "smuInstall"
          [32m+[0m[0m "smuOperationFlags"    = "smuReloadImmediate"
          [32m+[0m[0m "srUpgrade"            = "no"
          [32m+[0m[0m "srVersion"            = ""
          [32m+[0m[0m "version"              = "n9000-16.0(2h)"
          [32m+[0m[0m "versionCheckOverride" = "untriggered"
        }
      [32m+[0m[0m dn         = "uni/fabric/maintpol-MG_B"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.admin["default"].aci_rest_managed.maintenance_policy["MG_C"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "maintenance_policy" {
      [32m+[0m[0m class_name = "maintMaintP"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "adminSt"              = "untriggered"
          [32m+[0m[0m "descr"                = ""
          [32m+[0m[0m "downloadSt"           = "untriggered"
          [32m+[0m[0m "graceful"             = "yes"
          [32m+[0m[0m "ignoreCompat"         = "yes"
          [32m+[0m[0m "name"                 = "MG_C"
          [32m+[0m[0m "notifCond"            = "notifyOnlyOnFailures"
          [32m+[0m[0m "runMode"              = "pauseOnlyOnFailures"
          [32m+[0m[0m "smuOperation"         = "smuInstall"
          [32m+[0m[0m "smuOperationFlags"    = "smuReloadImmediate"
          [32m+[0m[0m "srUpgrade"            = "no"
          [32m+[0m[0m "srVersion"            = ""
          [32m+[0m[0m "version"              = "n9000-16.0(2h)"
          [32m+[0m[0m "versionCheckOverride" = "untriggered"
        }
      [32m+[0m[0m dn         = "uni/fabric/maintpol-MG_C"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.admin["default"].aci_rest_managed.syslog_destination_groups["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "syslog_destination_groups" {
      [32m+[0m[0m class_name = "syslogGroup"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "descr"               = ""
          [32m+[0m[0m "format"              = "aci"
          [32m+[0m[0m "includeMilliSeconds" = "yes"
          [32m+[0m[0m "includeTimeZone"     = "yes"
          [32m+[0m[0m "name"                = "default"
        }
      [32m+[0m[0m dn         = "uni/fabric/slgroup-default"
      [32m+[0m[0m id         = (known after apply)

      [32m+[0m[0m child {
          [32m+[0m[0m class_name = "syslogConsole"
          [32m+[0m[0m content    = {
              [32m+[0m[0m "adminState" = "enabled"
              [32m+[0m[0m "severity"   = "critical"
            }
          [32m+[0m[0m rn         = "console"
        }
      [32m+[0m[0m child {
          [32m+[0m[0m class_name = "syslogFile"
          [32m+[0m[0m content    = {
              [32m+[0m[0m "adminState" = "enabled"
              [32m+[0m[0m "severity"   = "warnings"
            }
          [32m+[0m[0m rn         = "file"
        }
      [32m+[0m[0m child {
          [32m+[0m[0m class_name = "syslogProf"
          [32m+[0m[0m content    = {
              [32m+[0m[0m "adminState" = "enabled"
            }
          [32m+[0m[0m rn         = "prof"
        }
    }

[1m  # module.admin["default"].aci_rest_managed.syslog_remote_destinations["default:10.101.128.24"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "syslog_remote_destinations" {
      [32m+[0m[0m class_name = "syslogRemoteDest"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "adminState"         = "enabled"
          [32m+[0m[0m "forwardingFacility" = "local7"
          [32m+[0m[0m "host"               = "10.101.128.24"
          [32m+[0m[0m "name"               = "10.101.128.24"
          [32m+[0m[0m "port"               = "514"
          [32m+[0m[0m "severity"           = "information"
        }
      [32m+[0m[0m dn         = "uni/fabric/slgroup-default/rdst-10.101.128.24"
      [32m+[0m[0m id         = (known after apply)

      [32m+[0m[0m child {
          [32m+[0m[0m class_name = "fileRsARemoteHostToEpg"
          [32m+[0m[0m content    = {
              [32m+[0m[0m "tDn" = "uni/tn-mgmt/mgmtp-default/oob-ooband"
            }
          [32m+[0m[0m rn         = "rsARemoteHostToEpg"
        }
    }

[1m  # module.admin["default"].aci_rest_managed.syslog_remote_destinations["default:10.101.128.25"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "syslog_remote_destinations" {
      [32m+[0m[0m class_name = "syslogRemoteDest"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "adminState"         = "enabled"
          [32m+[0m[0m "forwardingFacility" = "local7"
          [32m+[0m[0m "host"               = "10.101.128.25"
          [32m+[0m[0m "name"               = "10.101.128.25"
          [32m+[0m[0m "port"               = "514"
          [32m+[0m[0m "severity"           = "information"
        }
      [32m+[0m[0m dn         = "uni/fabric/slgroup-default/rdst-10.101.128.25"
      [32m+[0m[0m id         = (known after apply)

      [32m+[0m[0m child {
          [32m+[0m[0m class_name = "fileRsARemoteHostToEpg"
          [32m+[0m[0m content    = {
              [32m+[0m[0m "tDn" = "uni/tn-mgmt/mgmtp-default/oob-ooband"
            }
          [32m+[0m[0m rn         = "rsARemoteHostToEpg"
        }
    }

[1m  # module.admin["default"].aci_rest_managed.syslog_sources["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "syslog_sources" {
      [32m+[0m[0m class_name = "syslogSrc"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "incl"   = "faults"
          [32m+[0m[0m "minSev" = "warnings"
          [32m+[0m[0m "name"   = "default"
        }
      [32m+[0m[0m dn         = "uni/fabric/moncommon/slsrc-default"
      [32m+[0m[0m id         = (known after apply)

      [32m+[0m[0m child {
          [32m+[0m[0m class_name = "syslogRsDestGroup"
          [32m+[0m[0m content    = {
              [32m+[0m[0m "tDn" = "uni/fabric/slgroup-default"
            }
          [32m+[0m[0m rn         = "rsdestGroup"
        }
    }

[1m  # module.admin["default"].aci_tacacs_accounting.tacacs_accounting["RICH"][0m will be created
[0m  [32m+[0m[0m resource "aci_tacacs_accounting" "tacacs_accounting" {
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m description = "RICH Accounting"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "RICH"
      [32m+[0m[0m name_alias  = (known after apply)
    }

[1m  # module.admin["default"].aci_tacacs_accounting_destination.tacacs_accounting_destinations["10.101.128.71"][0m will be created
[0m  [32m+[0m[0m resource "aci_tacacs_accounting_destination" "tacacs_accounting_destinations" {
      [32m+[0m[0m annotation                            = "orchestrator:terraform"
      [32m+[0m[0m auth_protocol                         = (known after apply)
      [32m+[0m[0m description                           = "10.101.128.71 Accounting Destination."
      [32m+[0m[0m host                                  = "10.101.128.71"
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m key                                   = (sensitive value)
      [32m+[0m[0m name                                  = "10.101.128.71"
      [32m+[0m[0m name_alias                            = (known after apply)
      [32m+[0m[0m port                                  = "49"
      [32m+[0m[0m relation_file_rs_a_remote_host_to_epg = "uni/tn-mgmt/mgmtp-default/oob-ooband"
      [32m+[0m[0m tacacs_accounting_dn                  = (known after apply)
    }

[1m  # module.admin["default"].aci_tacacs_accounting_destination.tacacs_accounting_destinations["10.101.128.72"][0m will be created
[0m  [32m+[0m[0m resource "aci_tacacs_accounting_destination" "tacacs_accounting_destinations" {
      [32m+[0m[0m annotation                            = "orchestrator:terraform"
      [32m+[0m[0m auth_protocol                         = (known after apply)
      [32m+[0m[0m description                           = "10.101.128.72 Accounting Destination."
      [32m+[0m[0m host                                  = "10.101.128.72"
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m key                                   = (sensitive value)
      [32m+[0m[0m name                                  = "10.101.128.72"
      [32m+[0m[0m name_alias                            = (known after apply)
      [32m+[0m[0m port                                  = "49"
      [32m+[0m[0m relation_file_rs_a_remote_host_to_epg = "uni/tn-mgmt/mgmtp-default/oob-ooband"
      [32m+[0m[0m tacacs_accounting_dn                  = (known after apply)
    }

[1m  # module.admin["default"].aci_tacacs_provider.tacacs_providers["10.101.128.71"][0m will be created
[0m  [32m+[0m[0m resource "aci_tacacs_provider" "tacacs_providers" {
      [32m+[0m[0m annotation                      = "orchestrator:terraform"
      [32m+[0m[0m auth_protocol                   = "pap"
      [32m+[0m[0m description                     = "10.101.128.71 TACACS+ Provider."
      [32m+[0m[0m id                              = (known after apply)
      [32m+[0m[0m key                             = (sensitive value)
      [32m+[0m[0m monitor_server                  = "disabled"
      [32m+[0m[0m monitoring_password             = (known after apply)
      [32m+[0m[0m monitoring_user                 = "default"
      [32m+[0m[0m name                            = "10.101.128.71"
      [32m+[0m[0m name_alias                      = (known after apply)
      [32m+[0m[0m port                            = "49"
      [32m+[0m[0m relation_aaa_rs_sec_prov_to_epg = "uni/tn-mgmt/mgmtp-default/oob-ooband"
      [32m+[0m[0m retries                         = "2"
      [32m+[0m[0m timeout                         = "5"
    }

[1m  # module.admin["default"].aci_tacacs_provider.tacacs_providers["10.101.128.72"][0m will be created
[0m  [32m+[0m[0m resource "aci_tacacs_provider" "tacacs_providers" {
      [32m+[0m[0m annotation                      = "orchestrator:terraform"
      [32m+[0m[0m auth_protocol                   = "pap"
      [32m+[0m[0m description                     = "10.101.128.72 TACACS+ Provider."
      [32m+[0m[0m id                              = (known after apply)
      [32m+[0m[0m key                             = (sensitive value)
      [32m+[0m[0m monitor_server                  = "disabled"
      [32m+[0m[0m monitoring_password             = (known after apply)
      [32m+[0m[0m monitoring_user                 = "default"
      [32m+[0m[0m name                            = "10.101.128.72"
      [32m+[0m[0m name_alias                      = (known after apply)
      [32m+[0m[0m port                            = "49"
      [32m+[0m[0m relation_aaa_rs_sec_prov_to_epg = "uni/tn-mgmt/mgmtp-default/oob-ooband"
      [32m+[0m[0m retries                         = "2"
      [32m+[0m[0m timeout                         = "5"
    }

[1m  # module.admin["default"].aci_tacacs_provider_group.tacacs_provider_groups["RICH"][0m will be created
[0m  [32m+[0m[0m resource "aci_tacacs_provider_group" "tacacs_provider_groups" {
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m description = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "RICH"
      [32m+[0m[0m name_alias  = (known after apply)
    }

[1m  # module.admin["default"].aci_tacacs_source.tacacs_sources["RICH"][0m will be created
[0m  [32m+[0m[0m resource "aci_tacacs_source" "tacacs_sources" {
      [32m+[0m[0m annotation                    = "orchestrator:terraform"
      [32m+[0m[0m description                   = (known after apply)
      [32m+[0m[0m id                            = (known after apply)
      [32m+[0m[0m incl                          = [
          [32m+[0m[0m "audit",
          [32m+[0m[0m "session",
        ]
      [32m+[0m[0m min_sev                       = (known after apply)
      [32m+[0m[0m name                          = "RICH"
      [32m+[0m[0m name_alias                    = (known after apply)
      [32m+[0m[0m parent_dn                     = "uni/fabric/moncommon"
      [32m+[0m[0m relation_tacacs_rs_dest_group = (known after apply)
    }

[1m  # module.admin["default"].aci_trigger_scheduler.map["Every24Hours"][0m will be created
[0m  [32m+[0m[0m resource "aci_trigger_scheduler" "map" {
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m description = "LNX Backup Servers"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "Every24Hours"
      [32m+[0m[0m name_alias  = (known after apply)
    }

[1m  # module.built_in_tenants["mgmt"].aci_any.vz_any["inb"][0m will be created
[0m  [32m+[0m[0m resource "aci_any" "vz_any" {
      [32m+[0m[0m annotation   = "orchestrator:terraform"
      [32m+[0m[0m description  = "Inband VRF"
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m match_t      = "AtleastOne"
      [32m+[0m[0m name_alias   = (known after apply)
      [32m+[0m[0m pref_gr_memb = "disabled"
      [32m+[0m[0m vrf_dn       = (known after apply)
    }

[1m  # module.built_in_tenants["mgmt"].aci_application_profile.map["inb"][0m will be created
[0m  [32m+[0m[0m resource "aci_application_profile" "map" {
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m name                      = "inb"
      [32m+[0m[0m name_alias                = (known after apply)
      [32m+[0m[0m prio                      = "unspecified"
      [32m+[0m[0m relation_fv_rs_ap_mon_pol = "uni/tn-common/monepg-default"
      [32m+[0m[0m tenant_dn                 = "uni/tn-mgmt"
    }

[1m  # module.built_in_tenants["mgmt"].aci_bgp_peer_connectivity_profile.map["inband:asgard-leaf201:Eth1-29.11-bgp:10.92.11.2"][0m will be created
[0m  [32m+[0m[0m resource "aci_bgp_peer_connectivity_profile" "map" {
      [32m+[0m[0m addr                         = "10.92.11.2"
      [32m+[0m[0m addr_t_ctrl                  = [
          [32m+[0m[0m "af-ucast",
        ]
      [32m+[0m[0m admin_state                  = "enabled"
      [32m+[0m[0m allowed_self_as_cnt          = "3"
      [32m+[0m[0m annotation                   = "orchestrator:terraform"
      [32m+[0m[0m as_number                    = "64701"
      [32m+[0m[0m ctrl                         = [
          [32m+[0m[0m "send-com",
        ]
      [32m+[0m[0m description                  = (known after apply)
      [32m+[0m[0m id                           = (known after apply)
      [32m+[0m[0m local_asn                    = (known after apply)
      [32m+[0m[0m local_asn_propagate          = (known after apply)
      [32m+[0m[0m name_alias                   = (known after apply)
      [32m+[0m[0m parent_dn                    = (known after apply)
      [32m+[0m[0m password                     = (sensitive value)
      [32m+[0m[0m peer_ctrl                    = [
          [32m+[0m[0m "bfd",
        ]
      [32m+[0m[0m private_a_sctrl              = []
      [32m+[0m[0m relation_bgp_rs_peer_pfx_pol = (known after apply)
      [32m+[0m[0m ttl                          = "1"
      [32m+[0m[0m weight                       = "0"
    }

[1m  # module.built_in_tenants["mgmt"].aci_bgp_peer_connectivity_profile.map["inband:asgard-leaf201:Eth1-29.11-bgp:10.92.11.3"][0m will be created
[0m  [32m+[0m[0m resource "aci_bgp_peer_connectivity_profile" "map" {
      [32m+[0m[0m addr                         = "10.92.11.3"
      [32m+[0m[0m addr_t_ctrl                  = [
          [32m+[0m[0m "af-ucast",
        ]
      [32m+[0m[0m admin_state                  = "enabled"
      [32m+[0m[0m allowed_self_as_cnt          = "3"
      [32m+[0m[0m annotation                   = "orchestrator:terraform"
      [32m+[0m[0m as_number                    = "64701"
      [32m+[0m[0m ctrl                         = [
          [32m+[0m[0m "send-com",
        ]
      [32m+[0m[0m description                  = (known after apply)
      [32m+[0m[0m id                           = (known after apply)
      [32m+[0m[0m local_asn                    = (known after apply)
      [32m+[0m[0m local_asn_propagate          = (known after apply)
      [32m+[0m[0m name_alias                   = (known after apply)
      [32m+[0m[0m parent_dn                    = (known after apply)
      [32m+[0m[0m password                     = (sensitive value)
      [32m+[0m[0m peer_ctrl                    = [
          [32m+[0m[0m "bfd",
        ]
      [32m+[0m[0m private_a_sctrl              = []
      [32m+[0m[0m relation_bgp_rs_peer_pfx_pol = (known after apply)
      [32m+[0m[0m ttl                          = "1"
      [32m+[0m[0m weight                       = "0"
    }

[1m  # module.built_in_tenants["mgmt"].aci_bgp_peer_connectivity_profile.map["inband:asgard-leaf201:Eth1-30.11-bgp:10.92.11.2"][0m will be created
[0m  [32m+[0m[0m resource "aci_bgp_peer_connectivity_profile" "map" {
      [32m+[0m[0m addr                         = "10.92.11.2"
      [32m+[0m[0m addr_t_ctrl                  = [
          [32m+[0m[0m "af-ucast",
        ]
      [32m+[0m[0m admin_state                  = "enabled"
      [32m+[0m[0m allowed_self_as_cnt          = "3"
      [32m+[0m[0m annotation                   = "orchestrator:terraform"
      [32m+[0m[0m as_number                    = "64701"
      [32m+[0m[0m ctrl                         = [
          [32m+[0m[0m "send-com",
        ]
      [32m+[0m[0m description                  = (known after apply)
      [32m+[0m[0m id                           = (known after apply)
      [32m+[0m[0m local_asn                    = (known after apply)
      [32m+[0m[0m local_asn_propagate          = (known after apply)
      [32m+[0m[0m name_alias                   = (known after apply)
      [32m+[0m[0m parent_dn                    = (known after apply)
      [32m+[0m[0m password                     = (sensitive value)
      [32m+[0m[0m peer_ctrl                    = [
          [32m+[0m[0m "bfd",
        ]
      [32m+[0m[0m private_a_sctrl              = []
      [32m+[0m[0m relation_bgp_rs_peer_pfx_pol = (known after apply)
      [32m+[0m[0m ttl                          = "1"
      [32m+[0m[0m weight                       = "0"
    }

[1m  # module.built_in_tenants["mgmt"].aci_bgp_peer_connectivity_profile.map["inband:asgard-leaf201:Eth1-30.11-bgp:10.92.11.3"][0m will be created
[0m  [32m+[0m[0m resource "aci_bgp_peer_connectivity_profile" "map" {
      [32m+[0m[0m addr                         = "10.92.11.3"
      [32m+[0m[0m addr_t_ctrl                  = [
          [32m+[0m[0m "af-ucast",
        ]
      [32m+[0m[0m admin_state                  = "enabled"
      [32m+[0m[0m allowed_self_as_cnt          = "3"
      [32m+[0m[0m annotation                   = "orchestrator:terraform"
      [32m+[0m[0m as_number                    = "64701"
      [32m+[0m[0m ctrl                         = [
          [32m+[0m[0m "send-com",
        ]
      [32m+[0m[0m description                  = (known after apply)
      [32m+[0m[0m id                           = (known after apply)
      [32m+[0m[0m local_asn                    = (known after apply)
      [32m+[0m[0m local_asn_propagate          = (known after apply)
      [32m+[0m[0m name_alias                   = (known after apply)
      [32m+[0m[0m parent_dn                    = (known after apply)
      [32m+[0m[0m password                     = (sensitive value)
      [32m+[0m[0m peer_ctrl                    = [
          [32m+[0m[0m "bfd",
        ]
      [32m+[0m[0m private_a_sctrl              = []
      [32m+[0m[0m relation_bgp_rs_peer_pfx_pol = (known after apply)
      [32m+[0m[0m ttl                          = "1"
      [32m+[0m[0m weight                       = "0"
    }

[1m  # module.built_in_tenants["mgmt"].aci_bgp_peer_connectivity_profile.map["inband:asgard-leaf202:Eth1-29.11-bgp:10.92.11.2"][0m will be created
[0m  [32m+[0m[0m resource "aci_bgp_peer_connectivity_profile" "map" {
      [32m+[0m[0m addr                         = "10.92.11.2"
      [32m+[0m[0m addr_t_ctrl                  = [
          [32m+[0m[0m "af-ucast",
        ]
      [32m+[0m[0m admin_state                  = "enabled"
      [32m+[0m[0m allowed_self_as_cnt          = "3"
      [32m+[0m[0m annotation                   = "orchestrator:terraform"
      [32m+[0m[0m as_number                    = "64701"
      [32m+[0m[0m ctrl                         = [
          [32m+[0m[0m "send-com",
        ]
      [32m+[0m[0m description                  = (known after apply)
      [32m+[0m[0m id                           = (known after apply)
      [32m+[0m[0m local_asn                    = (known after apply)
      [32m+[0m[0m local_asn_propagate          = (known after apply)
      [32m+[0m[0m name_alias                   = (known after apply)
      [32m+[0m[0m parent_dn                    = (known after apply)
      [32m+[0m[0m password                     = (sensitive value)
      [32m+[0m[0m peer_ctrl                    = [
          [32m+[0m[0m "bfd",
        ]
      [32m+[0m[0m private_a_sctrl              = []
      [32m+[0m[0m relation_bgp_rs_peer_pfx_pol = (known after apply)
      [32m+[0m[0m ttl                          = "1"
      [32m+[0m[0m weight                       = "0"
    }

[1m  # module.built_in_tenants["mgmt"].aci_bgp_peer_connectivity_profile.map["inband:asgard-leaf202:Eth1-29.11-bgp:10.92.11.3"][0m will be created
[0m  [32m+[0m[0m resource "aci_bgp_peer_connectivity_profile" "map" {
      [32m+[0m[0m addr                         = "10.92.11.3"
      [32m+[0m[0m addr_t_ctrl                  = [
          [32m+[0m[0m "af-ucast",
        ]
      [32m+[0m[0m admin_state                  = "enabled"
      [32m+[0m[0m allowed_self_as_cnt          = "3"
      [32m+[0m[0m annotation                   = "orchestrator:terraform"
      [32m+[0m[0m as_number                    = "64701"
      [32m+[0m[0m ctrl                         = [
          [32m+[0m[0m "send-com",
        ]
      [32m+[0m[0m description                  = (known after apply)
      [32m+[0m[0m id                           = (known after apply)
      [32m+[0m[0m local_asn                    = (known after apply)
      [32m+[0m[0m local_asn_propagate          = (known after apply)
      [32m+[0m[0m name_alias                   = (known after apply)
      [32m+[0m[0m parent_dn                    = (known after apply)
      [32m+[0m[0m password                     = (sensitive value)
      [32m+[0m[0m peer_ctrl                    = [
          [32m+[0m[0m "bfd",
        ]
      [32m+[0m[0m private_a_sctrl              = []
      [32m+[0m[0m relation_bgp_rs_peer_pfx_pol = (known after apply)
      [32m+[0m[0m ttl                          = "1"
      [32m+[0m[0m weight                       = "0"
    }

[1m  # module.built_in_tenants["mgmt"].aci_bgp_peer_connectivity_profile.map["inband:asgard-leaf202:Eth1-30.11-bgp:10.92.11.2"][0m will be created
[0m  [32m+[0m[0m resource "aci_bgp_peer_connectivity_profile" "map" {
      [32m+[0m[0m addr                         = "10.92.11.2"
      [32m+[0m[0m addr_t_ctrl                  = [
          [32m+[0m[0m "af-ucast",
        ]
      [32m+[0m[0m admin_state                  = "enabled"
      [32m+[0m[0m allowed_self_as_cnt          = "3"
      [32m+[0m[0m annotation                   = "orchestrator:terraform"
      [32m+[0m[0m as_number                    = "64701"
      [32m+[0m[0m ctrl                         = [
          [32m+[0m[0m "send-com",
        ]
      [32m+[0m[0m description                  = (known after apply)
      [32m+[0m[0m id                           = (known after apply)
      [32m+[0m[0m local_asn                    = (known after apply)
      [32m+[0m[0m local_asn_propagate          = (known after apply)
      [32m+[0m[0m name_alias                   = (known after apply)
      [32m+[0m[0m parent_dn                    = (known after apply)
      [32m+[0m[0m password                     = (sensitive value)
      [32m+[0m[0m peer_ctrl                    = [
          [32m+[0m[0m "bfd",
        ]
      [32m+[0m[0m private_a_sctrl              = []
      [32m+[0m[0m relation_bgp_rs_peer_pfx_pol = (known after apply)
      [32m+[0m[0m ttl                          = "1"
      [32m+[0m[0m weight                       = "0"
    }

[1m  # module.built_in_tenants["mgmt"].aci_bgp_peer_connectivity_profile.map["inband:asgard-leaf202:Eth1-30.11-bgp:10.92.11.3"][0m will be created
[0m  [32m+[0m[0m resource "aci_bgp_peer_connectivity_profile" "map" {
      [32m+[0m[0m addr                         = "10.92.11.3"
      [32m+[0m[0m addr_t_ctrl                  = [
          [32m+[0m[0m "af-ucast",
        ]
      [32m+[0m[0m admin_state                  = "enabled"
      [32m+[0m[0m allowed_self_as_cnt          = "3"
      [32m+[0m[0m annotation                   = "orchestrator:terraform"
      [32m+[0m[0m as_number                    = "64701"
      [32m+[0m[0m ctrl                         = [
          [32m+[0m[0m "send-com",
        ]
      [32m+[0m[0m description                  = (known after apply)
      [32m+[0m[0m id                           = (known after apply)
      [32m+[0m[0m local_asn                    = (known after apply)
      [32m+[0m[0m local_asn_propagate          = (known after apply)
      [32m+[0m[0m name_alias                   = (known after apply)
      [32m+[0m[0m parent_dn                    = (known after apply)
      [32m+[0m[0m password                     = (sensitive value)
      [32m+[0m[0m peer_ctrl                    = [
          [32m+[0m[0m "bfd",
        ]
      [32m+[0m[0m private_a_sctrl              = []
      [32m+[0m[0m relation_bgp_rs_peer_pfx_pol = (known after apply)
      [32m+[0m[0m ttl                          = "1"
      [32m+[0m[0m weight                       = "0"
    }

[1m  # module.built_in_tenants["mgmt"].aci_bridge_domain.map["10.92.64.0"][0m will be created
[0m  [32m+[0m[0m resource "aci_bridge_domain" "map" {
      [32m+[0m[0m annotation                  = "orchestrator:terraform"
      [32m+[0m[0m arp_flood                   = "no"
      [32m+[0m[0m bridge_domain_type          = "regular"
      [32m+[0m[0m description                 = (known after apply)
      [32m+[0m[0m ep_clear                    = "no"
      [32m+[0m[0m ep_move_detect_mode         = "disable"
      [32m+[0m[0m host_based_routing          = "no"
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m intersite_bum_traffic_allow = "no"
      [32m+[0m[0m intersite_l2_stretch        = "no"
      [32m+[0m[0m ip_learning                 = "yes"
      [32m+[0m[0m ipv6_mcast_allow            = "no"
      [32m+[0m[0m limit_ip_learn_to_subnets   = "yes"
      [32m+[0m[0m ll_addr                     = "::"
      [32m+[0m[0m mac                         = (known after apply)
      [32m+[0m[0m mcast_allow                 = "no"
      [32m+[0m[0m multi_dst_pkt_act           = "bd-flood"
      [32m+[0m[0m name                        = "10.92.64.0"
      [32m+[0m[0m name_alias                  = (known after apply)
      [32m+[0m[0m optimize_wan_bandwidth      = "no"
      [32m+[0m[0m relation_fv_rs_bd_to_ep_ret = "uni/tn-common/epRPol-default"
      [32m+[0m[0m relation_fv_rs_bd_to_nd_p   = (known after apply)
      [32m+[0m[0m relation_fv_rs_bd_to_out    = [
          [32m+[0m[0m "uni/tn-mgmt/out-inband",
        ]
      [32m+[0m[0m relation_fv_rs_ctx          = "uni/tn-mgmt/ctx-inb"
      [32m+[0m[0m relation_fv_rs_igmpsn       = "uni/tn-common/snPol-default"
      [32m+[0m[0m relation_fv_rs_mldsn        = "uni/tn-common/mldsnoopPol-default"
      [32m+[0m[0m tenant_dn                   = "uni/tn-mgmt"
      [32m+[0m[0m unicast_route               = "yes"
      [32m+[0m[0m unk_mac_ucast_act           = "proxy"
      [32m+[0m[0m unk_mcast_act               = "flood"
      [32m+[0m[0m v6unk_mcast_act             = "flood"
      [32m+[0m[0m vmac                        = "not-applicable"
    }

[1m  # module.built_in_tenants["mgmt"].aci_contract.map["inband_in"][0m will be created
[0m  [32m+[0m[0m resource "aci_contract" "map" {
      [32m+[0m[0m annotation       = "orchestrator:terraform"
      [32m+[0m[0m description      = "Mgmt Inbound Traffic"
      [32m+[0m[0m filter_entry_ids = (known after apply)
      [32m+[0m[0m filter_ids       = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m name             = "inband_in"
      [32m+[0m[0m name_alias       = (known after apply)
      [32m+[0m[0m prio             = "unspecified"
      [32m+[0m[0m scope            = "context"
      [32m+[0m[0m target_dscp      = "unspecified"
      [32m+[0m[0m tenant_dn        = "uni/tn-mgmt"
    }

[1m  # module.built_in_tenants["mgmt"].aci_contract.map["inband_out"][0m will be created
[0m  [32m+[0m[0m resource "aci_contract" "map" {
      [32m+[0m[0m annotation       = "orchestrator:terraform"
      [32m+[0m[0m description      = "Mgmt Outbound Traffic"
      [32m+[0m[0m filter_entry_ids = (known after apply)
      [32m+[0m[0m filter_ids       = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m name             = "inband_out"
      [32m+[0m[0m name_alias       = (known after apply)
      [32m+[0m[0m prio             = "unspecified"
      [32m+[0m[0m scope            = "context"
      [32m+[0m[0m target_dscp      = "unspecified"
      [32m+[0m[0m tenant_dn        = "uni/tn-mgmt"
    }

[1m  # module.built_in_tenants["mgmt"].aci_contract_subject.map["inband_in:inband_in"][0m will be created
[0m  [32m+[0m[0m resource "aci_contract_subject" "map" {
      [32m+[0m[0m annotation                    = "orchestrator:terraform"
      [32m+[0m[0m apply_both_directions         = "yes"
      [32m+[0m[0m cons_match_t                  = "AtleastOne"
      [32m+[0m[0m contract_dn                   = (known after apply)
      [32m+[0m[0m description                   = (known after apply)
      [32m+[0m[0m id                            = (known after apply)
      [32m+[0m[0m name                          = "inband_in"
      [32m+[0m[0m name_alias                    = (known after apply)
      [32m+[0m[0m prio                          = "unspecified"
      [32m+[0m[0m prov_match_t                  = "AtleastOne"
      [32m+[0m[0m relation_vz_rs_sdwan_pol      = (known after apply)
      [32m+[0m[0m relation_vz_rs_subj_graph_att = (known after apply)
      [32m+[0m[0m rev_flt_ports                 = "no"
      [32m+[0m[0m target_dscp                   = "unspecified"
    }

[1m  # module.built_in_tenants["mgmt"].aci_contract_subject.map["inband_out:inband_out"][0m will be created
[0m  [32m+[0m[0m resource "aci_contract_subject" "map" {
      [32m+[0m[0m annotation                    = "orchestrator:terraform"
      [32m+[0m[0m apply_both_directions         = "yes"
      [32m+[0m[0m cons_match_t                  = "AtleastOne"
      [32m+[0m[0m contract_dn                   = (known after apply)
      [32m+[0m[0m description                   = (known after apply)
      [32m+[0m[0m id                            = (known after apply)
      [32m+[0m[0m name                          = "inband_out"
      [32m+[0m[0m name_alias                    = (known after apply)
      [32m+[0m[0m prio                          = "unspecified"
      [32m+[0m[0m prov_match_t                  = "AtleastOne"
      [32m+[0m[0m relation_vz_rs_sdwan_pol      = (known after apply)
      [32m+[0m[0m relation_vz_rs_subj_graph_att = (known after apply)
      [32m+[0m[0m rev_flt_ports                 = "no"
      [32m+[0m[0m target_dscp                   = "unspecified"
    }

[1m  # module.built_in_tenants["mgmt"].aci_external_network_instance_profile.map["inband:inband"][0m will be created
[0m  [32m+[0m[0m resource "aci_external_network_instance_profile" "map" {
      [32m+[0m[0m annotation                                  = "orchestrator:terraform"
      [32m+[0m[0m description                                 = "Inband"
      [32m+[0m[0m exception_tag                               = "0"
      [32m+[0m[0m flood_on_encap                              = "disabled"
      [32m+[0m[0m id                                          = (known after apply)
      [32m+[0m[0m l3_outside_dn                               = (known after apply)
      [32m+[0m[0m match_t                                     = "AtleastOne"
      [32m+[0m[0m name                                        = "inband"
      [32m+[0m[0m name_alias                                  = (known after apply)
      [32m+[0m[0m pref_gr_memb                                = "exclude"
      [32m+[0m[0m prio                                        = "unspecified"
      [32m+[0m[0m relation_fv_rs_cons                         = (known after apply)
      [32m+[0m[0m relation_fv_rs_cons_if                      = (known after apply)
      [32m+[0m[0m relation_fv_rs_cust_qos_pol                 = (known after apply)
      [32m+[0m[0m relation_fv_rs_intra_epg                    = (known after apply)
      [32m+[0m[0m relation_fv_rs_prot_by                      = (known after apply)
      [32m+[0m[0m relation_fv_rs_prov                         = (known after apply)
      [32m+[0m[0m relation_fv_rs_sec_inherited                = (known after apply)
      [32m+[0m[0m relation_l3ext_rs_inst_p_to_nat_mapping_epg = (known after apply)
      [32m+[0m[0m relation_l3ext_rs_l3_inst_p_to_dom_p        = (known after apply)
      [32m+[0m[0m target_dscp                                 = "unspecified"
    }

[1m  # module.built_in_tenants["mgmt"].aci_filter.map["mgmt_in"][0m will be created
[0m  [32m+[0m[0m resource "aci_filter" "map" {
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m description = "Management Inbound Traffic"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "mgmt_in"
      [32m+[0m[0m name_alias  = (known after apply)
      [32m+[0m[0m tenant_dn   = "uni/tn-mgmt"
    }

[1m  # module.built_in_tenants["mgmt"].aci_filter.map["mgmt_out"][0m will be created
[0m  [32m+[0m[0m resource "aci_filter" "map" {
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m description = "Management Outbound Traffic"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "mgmt_out"
      [32m+[0m[0m name_alias  = (known after apply)
      [32m+[0m[0m tenant_dn   = "uni/tn-mgmt"
    }

[1m  # module.built_in_tenants["mgmt"].aci_filter_entry.map["mgmt_in:https"][0m will be created
[0m  [32m+[0m[0m resource "aci_filter_entry" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m apply_to_frag = "no"
      [32m+[0m[0m arp_opc       = "unspecified"
      [32m+[0m[0m d_from_port   = "https"
      [32m+[0m[0m d_to_port     = "https"
      [32m+[0m[0m description   = "Allow HTTPS"
      [32m+[0m[0m ether_t       = "ip"
      [32m+[0m[0m filter_dn     = (known after apply)
      [32m+[0m[0m icmpv4_t      = "unspecified"
      [32m+[0m[0m icmpv6_t      = "unspecified"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m match_dscp    = "unspecified"
      [32m+[0m[0m name          = "mgmt_in:https"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m prot          = "tcp"
      [32m+[0m[0m s_from_port   = "unspecified"
      [32m+[0m[0m s_to_port     = "unspecified"
      [32m+[0m[0m stateful      = "yes"
      [32m+[0m[0m tcp_rules     = [
          [32m+[0m[0m "est",
        ]
    }

[1m  # module.built_in_tenants["mgmt"].aci_filter_entry.map["mgmt_in:icmp"][0m will be created
[0m  [32m+[0m[0m resource "aci_filter_entry" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m apply_to_frag = "no"
      [32m+[0m[0m arp_opc       = "unspecified"
      [32m+[0m[0m d_from_port   = "unspecified"
      [32m+[0m[0m d_to_port     = "unspecified"
      [32m+[0m[0m description   = "Allow ICMP"
      [32m+[0m[0m ether_t       = "ip"
      [32m+[0m[0m filter_dn     = (known after apply)
      [32m+[0m[0m icmpv4_t      = "unspecified"
      [32m+[0m[0m icmpv6_t      = "unspecified"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m match_dscp    = "unspecified"
      [32m+[0m[0m name          = "mgmt_in:icmp"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m prot          = "icmp"
      [32m+[0m[0m s_from_port   = "unspecified"
      [32m+[0m[0m s_to_port     = "unspecified"
      [32m+[0m[0m stateful      = "no"
      [32m+[0m[0m tcp_rules     = [
          [32m+[0m[0m "unspecified",
        ]
    }

[1m  # module.built_in_tenants["mgmt"].aci_filter_entry.map["mgmt_in:nd_2022"][0m will be created
[0m  [32m+[0m[0m resource "aci_filter_entry" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m apply_to_frag = "no"
      [32m+[0m[0m arp_opc       = "unspecified"
      [32m+[0m[0m d_from_port   = "2022"
      [32m+[0m[0m d_to_port     = "2022"
      [32m+[0m[0m description   = "Nexus Dashboard 2022"
      [32m+[0m[0m ether_t       = "ip"
      [32m+[0m[0m filter_dn     = (known after apply)
      [32m+[0m[0m icmpv4_t      = "unspecified"
      [32m+[0m[0m icmpv6_t      = "unspecified"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m match_dscp    = "unspecified"
      [32m+[0m[0m name          = "mgmt_in:nd_2022"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m prot          = "tcp"
      [32m+[0m[0m s_from_port   = "unspecified"
      [32m+[0m[0m s_to_port     = "unspecified"
      [32m+[0m[0m stateful      = "yes"
      [32m+[0m[0m tcp_rules     = [
          [32m+[0m[0m "est",
        ]
    }

[1m  # module.built_in_tenants["mgmt"].aci_filter_entry.map["mgmt_in:nd_30000"][0m will be created
[0m  [32m+[0m[0m resource "aci_filter_entry" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m apply_to_frag = "no"
      [32m+[0m[0m arp_opc       = "unspecified"
      [32m+[0m[0m d_from_port   = "30000"
      [32m+[0m[0m d_to_port     = "30001"
      [32m+[0m[0m description   = "ND 30000-30001"
      [32m+[0m[0m ether_t       = "ip"
      [32m+[0m[0m filter_dn     = (known after apply)
      [32m+[0m[0m icmpv4_t      = "unspecified"
      [32m+[0m[0m icmpv6_t      = "unspecified"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m match_dscp    = "unspecified"
      [32m+[0m[0m name          = "mgmt_in:nd_30000"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m prot          = "tcp"
      [32m+[0m[0m s_from_port   = "unspecified"
      [32m+[0m[0m s_to_port     = "unspecified"
      [32m+[0m[0m stateful      = "yes"
      [32m+[0m[0m tcp_rules     = [
          [32m+[0m[0m "est",
        ]
    }

[1m  # module.built_in_tenants["mgmt"].aci_filter_entry.map["mgmt_in:nd_5640"][0m will be created
[0m  [32m+[0m[0m resource "aci_filter_entry" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m apply_to_frag = "no"
      [32m+[0m[0m arp_opc       = "unspecified"
      [32m+[0m[0m d_from_port   = "5640"
      [32m+[0m[0m d_to_port     = "5671"
      [32m+[0m[0m description   = "Nexus Dashboard 5640-5671"
      [32m+[0m[0m ether_t       = "ip"
      [32m+[0m[0m filter_dn     = (known after apply)
      [32m+[0m[0m icmpv4_t      = "unspecified"
      [32m+[0m[0m icmpv6_t      = "unspecified"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m match_dscp    = "unspecified"
      [32m+[0m[0m name          = "mgmt_in:nd_5640"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m prot          = "udp"
      [32m+[0m[0m s_from_port   = "unspecified"
      [32m+[0m[0m s_to_port     = "unspecified"
      [32m+[0m[0m stateful      = "no"
      [32m+[0m[0m tcp_rules     = [
          [32m+[0m[0m "unspecified",
        ]
    }

[1m  # module.built_in_tenants["mgmt"].aci_filter_entry.map["mgmt_in:nd_5965"][0m will be created
[0m  [32m+[0m[0m resource "aci_filter_entry" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m apply_to_frag = "no"
      [32m+[0m[0m arp_opc       = "unspecified"
      [32m+[0m[0m d_from_port   = "5965"
      [32m+[0m[0m d_to_port     = "5965"
      [32m+[0m[0m description   = "Nexus Dashboard 5965"
      [32m+[0m[0m ether_t       = "ip"
      [32m+[0m[0m filter_dn     = (known after apply)
      [32m+[0m[0m icmpv4_t      = "unspecified"
      [32m+[0m[0m icmpv6_t      = "unspecified"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m match_dscp    = "unspecified"
      [32m+[0m[0m name          = "mgmt_in:nd_5965"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m prot          = "udp"
      [32m+[0m[0m s_from_port   = "unspecified"
      [32m+[0m[0m s_to_port     = "unspecified"
      [32m+[0m[0m stateful      = "no"
      [32m+[0m[0m tcp_rules     = [
          [32m+[0m[0m "unspecified",
        ]
    }

[1m  # module.built_in_tenants["mgmt"].aci_filter_entry.map["mgmt_in:nd_8884"][0m will be created
[0m  [32m+[0m[0m resource "aci_filter_entry" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m apply_to_frag = "no"
      [32m+[0m[0m arp_opc       = "unspecified"
      [32m+[0m[0m d_from_port   = "8884"
      [32m+[0m[0m d_to_port     = "8884"
      [32m+[0m[0m description   = "Nexus Dashboard 8884"
      [32m+[0m[0m ether_t       = "ip"
      [32m+[0m[0m filter_dn     = (known after apply)
      [32m+[0m[0m icmpv4_t      = "unspecified"
      [32m+[0m[0m icmpv6_t      = "unspecified"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m match_dscp    = "unspecified"
      [32m+[0m[0m name          = "mgmt_in:nd_8884"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m prot          = "tcp"
      [32m+[0m[0m s_from_port   = "unspecified"
      [32m+[0m[0m s_to_port     = "unspecified"
      [32m+[0m[0m stateful      = "yes"
      [32m+[0m[0m tcp_rules     = [
          [32m+[0m[0m "est",
        ]
    }

[1m  # module.built_in_tenants["mgmt"].aci_filter_entry.map["mgmt_in:nd_9989"][0m will be created
[0m  [32m+[0m[0m resource "aci_filter_entry" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m apply_to_frag = "no"
      [32m+[0m[0m arp_opc       = "unspecified"
      [32m+[0m[0m d_from_port   = "9989"
      [32m+[0m[0m d_to_port     = "9989"
      [32m+[0m[0m description   = "Nexus Dashboard 9989"
      [32m+[0m[0m ether_t       = "ip"
      [32m+[0m[0m filter_dn     = (known after apply)
      [32m+[0m[0m icmpv4_t      = "unspecified"
      [32m+[0m[0m icmpv6_t      = "unspecified"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m match_dscp    = "unspecified"
      [32m+[0m[0m name          = "mgmt_in:nd_9989"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m prot          = "tcp"
      [32m+[0m[0m s_from_port   = "unspecified"
      [32m+[0m[0m s_to_port     = "unspecified"
      [32m+[0m[0m stateful      = "yes"
      [32m+[0m[0m tcp_rules     = [
          [32m+[0m[0m "est",
        ]
    }

[1m  # module.built_in_tenants["mgmt"].aci_filter_entry.map["mgmt_in:snmp"][0m will be created
[0m  [32m+[0m[0m resource "aci_filter_entry" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m apply_to_frag = "no"
      [32m+[0m[0m arp_opc       = "unspecified"
      [32m+[0m[0m d_from_port   = "161"
      [32m+[0m[0m d_to_port     = "161"
      [32m+[0m[0m description   = "Allow SNMP"
      [32m+[0m[0m ether_t       = "ip"
      [32m+[0m[0m filter_dn     = (known after apply)
      [32m+[0m[0m icmpv4_t      = "unspecified"
      [32m+[0m[0m icmpv6_t      = "unspecified"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m match_dscp    = "unspecified"
      [32m+[0m[0m name          = "mgmt_in:snmp"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m prot          = "udp"
      [32m+[0m[0m s_from_port   = "unspecified"
      [32m+[0m[0m s_to_port     = "unspecified"
      [32m+[0m[0m stateful      = "no"
      [32m+[0m[0m tcp_rules     = [
          [32m+[0m[0m "unspecified",
        ]
    }

[1m  # module.built_in_tenants["mgmt"].aci_filter_entry.map["mgmt_in:ssh"][0m will be created
[0m  [32m+[0m[0m resource "aci_filter_entry" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m apply_to_frag = "no"
      [32m+[0m[0m arp_opc       = "unspecified"
      [32m+[0m[0m d_from_port   = "22"
      [32m+[0m[0m d_to_port     = "22"
      [32m+[0m[0m description   = "Allow SSH"
      [32m+[0m[0m ether_t       = "ip"
      [32m+[0m[0m filter_dn     = (known after apply)
      [32m+[0m[0m icmpv4_t      = "unspecified"
      [32m+[0m[0m icmpv6_t      = "unspecified"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m match_dscp    = "unspecified"
      [32m+[0m[0m name          = "mgmt_in:ssh"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m prot          = "tcp"
      [32m+[0m[0m s_from_port   = "unspecified"
      [32m+[0m[0m s_to_port     = "unspecified"
      [32m+[0m[0m stateful      = "yes"
      [32m+[0m[0m tcp_rules     = [
          [32m+[0m[0m "est",
        ]
    }

[1m  # module.built_in_tenants["mgmt"].aci_filter_entry.map["mgmt_out:icmp"][0m will be created
[0m  [32m+[0m[0m resource "aci_filter_entry" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m apply_to_frag = "no"
      [32m+[0m[0m arp_opc       = "unspecified"
      [32m+[0m[0m d_from_port   = "unspecified"
      [32m+[0m[0m d_to_port     = "unspecified"
      [32m+[0m[0m description   = "Allow ICMP"
      [32m+[0m[0m ether_t       = "ip"
      [32m+[0m[0m filter_dn     = (known after apply)
      [32m+[0m[0m icmpv4_t      = "unspecified"
      [32m+[0m[0m icmpv6_t      = "unspecified"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m match_dscp    = "unspecified"
      [32m+[0m[0m name          = "mgmt_out:icmp"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m prot          = "icmp"
      [32m+[0m[0m s_from_port   = "unspecified"
      [32m+[0m[0m s_to_port     = "unspecified"
      [32m+[0m[0m stateful      = "no"
      [32m+[0m[0m tcp_rules     = [
          [32m+[0m[0m "unspecified",
        ]
    }

[1m  # module.built_in_tenants["mgmt"].aci_filter_entry.map["mgmt_out:ip"][0m will be created
[0m  [32m+[0m[0m resource "aci_filter_entry" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m apply_to_frag = "no"
      [32m+[0m[0m arp_opc       = "unspecified"
      [32m+[0m[0m d_from_port   = "unspecified"
      [32m+[0m[0m d_to_port     = "unspecified"
      [32m+[0m[0m description   = "Allow All IP"
      [32m+[0m[0m ether_t       = "ip"
      [32m+[0m[0m filter_dn     = (known after apply)
      [32m+[0m[0m icmpv4_t      = "unspecified"
      [32m+[0m[0m icmpv6_t      = "unspecified"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m match_dscp    = "unspecified"
      [32m+[0m[0m name          = "mgmt_out:ip"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m prot          = "unspecified"
      [32m+[0m[0m s_from_port   = "unspecified"
      [32m+[0m[0m s_to_port     = "unspecified"
      [32m+[0m[0m stateful      = "no"
      [32m+[0m[0m tcp_rules     = [
          [32m+[0m[0m "unspecified",
        ]
    }

[1m  # module.built_in_tenants["mgmt"].aci_l3_ext_subnet.map["inband:inband:0.0.0.0/1"][0m will be created
[0m  [32m+[0m[0m resource "aci_l3_ext_subnet" "map" {
      [32m+[0m[0m aggregate                            = "none"
      [32m+[0m[0m annotation                           = "orchestrator:terraform"
      [32m+[0m[0m description                          = (known after apply)
      [32m+[0m[0m external_network_instance_profile_dn = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m ip                                   = "0.0.0.0/1"
      [32m+[0m[0m name_alias                           = (known after apply)
      [32m+[0m[0m relation_l3ext_rs_subnet_to_rt_summ  = (known after apply)
      [32m+[0m[0m scope                                = [
          [32m+[0m[0m "import-security",
        ]
    }

[1m  # module.built_in_tenants["mgmt"].aci_l3_ext_subnet.map["inband:inband:128.0.0.0/1"][0m will be created
[0m  [32m+[0m[0m resource "aci_l3_ext_subnet" "map" {
      [32m+[0m[0m aggregate                            = "none"
      [32m+[0m[0m annotation                           = "orchestrator:terraform"
      [32m+[0m[0m description                          = (known after apply)
      [32m+[0m[0m external_network_instance_profile_dn = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m ip                                   = "128.0.0.0/1"
      [32m+[0m[0m name_alias                           = (known after apply)
      [32m+[0m[0m relation_l3ext_rs_subnet_to_rt_summ  = (known after apply)
      [32m+[0m[0m scope                                = [
          [32m+[0m[0m "import-security",
        ]
    }

[1m  # module.built_in_tenants["mgmt"].aci_l3_outside.map["inband"][0m will be created
[0m  [32m+[0m[0m resource "aci_l3_outside" "map" {
      [32m+[0m[0m annotation                   = "orchestrator:terraform"
      [32m+[0m[0m description                  = "Inband L3Out"
      [32m+[0m[0m enforce_rtctrl               = [
          [32m+[0m[0m "export",
        ]
      [32m+[0m[0m id                           = (known after apply)
      [32m+[0m[0m mpls_enabled                 = (known after apply)
      [32m+[0m[0m name                         = "inband"
      [32m+[0m[0m name_alias                   = (known after apply)
      [32m+[0m[0m relation_l3ext_rs_ectx       = "uni/tn-mgmt/ctx-inb"
      [32m+[0m[0m relation_l3ext_rs_l3_dom_att = "uni/l3dom-l3out"
      [32m+[0m[0m target_dscp                  = "unspecified"
      [32m+[0m[0m tenant_dn                    = "uni/tn-mgmt"
    }

[1m  # module.built_in_tenants["mgmt"].aci_l3out_bgp_external_policy.map["inband"][0m will be created
[0m  [32m+[0m[0m resource "aci_l3out_bgp_external_policy" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m description   = (known after apply)
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m l3_outside_dn = (known after apply)
      [32m+[0m[0m name_alias    = (known after apply)
    }

[1m  # module.built_in_tenants["mgmt"].aci_l3out_path_attachment.map["inband:asgard-leaf201:Eth1-29.11"][0m will be created
[0m  [32m+[0m[0m resource "aci_l3out_path_attachment" "map" {
      [32m+[0m[0m addr                         = "10.92.11.11/26"
      [32m+[0m[0m annotation                   = "orchestrator:terraform"
      [32m+[0m[0m autostate                    = "disabled"
      [32m+[0m[0m description                  = (known after apply)
      [32m+[0m[0m encap                        = "vlan-11"
      [32m+[0m[0m encap_scope                  = "ctx"
      [32m+[0m[0m id                           = (known after apply)
      [32m+[0m[0m if_inst_t                    = "sub-interface"
      [32m+[0m[0m ipv6_dad                     = "enabled"
      [32m+[0m[0m ll_addr                      = "::"
      [32m+[0m[0m logical_interface_profile_dn = (known after apply)
      [32m+[0m[0m mac                          = "00:22:BD:F8:19:FF"
      [32m+[0m[0m mode                         = "native"
      [32m+[0m[0m mtu                          = "inherit"
      [32m+[0m[0m target_dn                    = "topology/pod-1/paths-201/pathep-[eth1/29]"
      [32m+[0m[0m target_dscp                  = "unspecified"
    }

[1m  # module.built_in_tenants["mgmt"].aci_l3out_path_attachment.map["inband:asgard-leaf201:Eth1-30.11"][0m will be created
[0m  [32m+[0m[0m resource "aci_l3out_path_attachment" "map" {
      [32m+[0m[0m addr                         = "10.92.11.12/26"
      [32m+[0m[0m annotation                   = "orchestrator:terraform"
      [32m+[0m[0m autostate                    = "disabled"
      [32m+[0m[0m description                  = (known after apply)
      [32m+[0m[0m encap                        = "vlan-11"
      [32m+[0m[0m encap_scope                  = "ctx"
      [32m+[0m[0m id                           = (known after apply)
      [32m+[0m[0m if_inst_t                    = "sub-interface"
      [32m+[0m[0m ipv6_dad                     = "enabled"
      [32m+[0m[0m ll_addr                      = "::"
      [32m+[0m[0m logical_interface_profile_dn = (known after apply)
      [32m+[0m[0m mac                          = "00:22:BD:F8:19:FF"
      [32m+[0m[0m mode                         = "native"
      [32m+[0m[0m mtu                          = "inherit"
      [32m+[0m[0m target_dn                    = "topology/pod-1/paths-201/pathep-[eth1/30]"
      [32m+[0m[0m target_dscp                  = "unspecified"
    }

[1m  # module.built_in_tenants["mgmt"].aci_l3out_path_attachment.map["inband:asgard-leaf202:Eth1-29.11"][0m will be created
[0m  [32m+[0m[0m resource "aci_l3out_path_attachment" "map" {
      [32m+[0m[0m addr                         = "10.92.11.21/26"
      [32m+[0m[0m annotation                   = "orchestrator:terraform"
      [32m+[0m[0m autostate                    = "disabled"
      [32m+[0m[0m description                  = (known after apply)
      [32m+[0m[0m encap                        = "vlan-11"
      [32m+[0m[0m encap_scope                  = "ctx"
      [32m+[0m[0m id                           = (known after apply)
      [32m+[0m[0m if_inst_t                    = "sub-interface"
      [32m+[0m[0m ipv6_dad                     = "enabled"
      [32m+[0m[0m ll_addr                      = "::"
      [32m+[0m[0m logical_interface_profile_dn = (known after apply)
      [32m+[0m[0m mac                          = "00:22:BD:F8:19:FF"
      [32m+[0m[0m mode                         = "native"
      [32m+[0m[0m mtu                          = "inherit"
      [32m+[0m[0m target_dn                    = "topology/pod-1/paths-202/pathep-[eth1/29]"
      [32m+[0m[0m target_dscp                  = "unspecified"
    }

[1m  # module.built_in_tenants["mgmt"].aci_l3out_path_attachment.map["inband:asgard-leaf202:Eth1-30.11"][0m will be created
[0m  [32m+[0m[0m resource "aci_l3out_path_attachment" "map" {
      [32m+[0m[0m addr                         = "10.92.11.22/26"
      [32m+[0m[0m annotation                   = "orchestrator:terraform"
      [32m+[0m[0m autostate                    = "disabled"
      [32m+[0m[0m description                  = (known after apply)
      [32m+[0m[0m encap                        = "vlan-11"
      [32m+[0m[0m encap_scope                  = "ctx"
      [32m+[0m[0m id                           = (known after apply)
      [32m+[0m[0m if_inst_t                    = "sub-interface"
      [32m+[0m[0m ipv6_dad                     = "enabled"
      [32m+[0m[0m ll_addr                      = "::"
      [32m+[0m[0m logical_interface_profile_dn = (known after apply)
      [32m+[0m[0m mac                          = "00:22:BD:F8:19:FF"
      [32m+[0m[0m mode                         = "native"
      [32m+[0m[0m mtu                          = "inherit"
      [32m+[0m[0m target_dn                    = "topology/pod-1/paths-202/pathep-[eth1/30]"
      [32m+[0m[0m target_dscp                  = "unspecified"
    }

[1m  # module.built_in_tenants["mgmt"].aci_logical_interface_profile.map["inband:asgard-leaf201:Eth1-29.11"][0m will be created
[0m  [32m+[0m[0m resource "aci_logical_interface_profile" "map" {
      [32m+[0m[0m annotation                            = "orchestrator:terraform"
      [32m+[0m[0m description                           = "to-r142b-core01-Eth1/27"
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m logical_node_profile_dn               = (known after apply)
      [32m+[0m[0m name                                  = "Eth1-29.11"
      [32m+[0m[0m name_alias                            = (known after apply)
      [32m+[0m[0m prio                                  = "unspecified"
      [32m+[0m[0m relation_l3ext_rs_arp_if_pol          = (known after apply)
      [32m+[0m[0m relation_l3ext_rs_egress_qos_dpp_pol  = (known after apply)
      [32m+[0m[0m relation_l3ext_rs_ingress_qos_dpp_pol = (known after apply)
      [32m+[0m[0m relation_l3ext_rs_l_if_p_cust_qos_pol = (known after apply)
      [32m+[0m[0m relation_l3ext_rs_nd_if_pol           = (known after apply)
      [32m+[0m[0m tag                                   = "yellow-green"
    }

[1m  # module.built_in_tenants["mgmt"].aci_logical_interface_profile.map["inband:asgard-leaf201:Eth1-30.11"][0m will be created
[0m  [32m+[0m[0m resource "aci_logical_interface_profile" "map" {
      [32m+[0m[0m annotation                            = "orchestrator:terraform"
      [32m+[0m[0m description                           = "to-r142b-core02-Eth1/27"
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m logical_node_profile_dn               = (known after apply)
      [32m+[0m[0m name                                  = "Eth1-30.11"
      [32m+[0m[0m name_alias                            = (known after apply)
      [32m+[0m[0m prio                                  = "unspecified"
      [32m+[0m[0m relation_l3ext_rs_arp_if_pol          = (known after apply)
      [32m+[0m[0m relation_l3ext_rs_egress_qos_dpp_pol  = (known after apply)
      [32m+[0m[0m relation_l3ext_rs_ingress_qos_dpp_pol = (known after apply)
      [32m+[0m[0m relation_l3ext_rs_l_if_p_cust_qos_pol = (known after apply)
      [32m+[0m[0m relation_l3ext_rs_nd_if_pol           = (known after apply)
      [32m+[0m[0m tag                                   = "yellow-green"
    }

[1m  # module.built_in_tenants["mgmt"].aci_logical_interface_profile.map["inband:asgard-leaf202:Eth1-29.11"][0m will be created
[0m  [32m+[0m[0m resource "aci_logical_interface_profile" "map" {
      [32m+[0m[0m annotation                            = "orchestrator:terraform"
      [32m+[0m[0m description                           = "to-r142b-core01-Eth1/28"
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m logical_node_profile_dn               = (known after apply)
      [32m+[0m[0m name                                  = "Eth1-29.11"
      [32m+[0m[0m name_alias                            = (known after apply)
      [32m+[0m[0m prio                                  = "unspecified"
      [32m+[0m[0m relation_l3ext_rs_arp_if_pol          = (known after apply)
      [32m+[0m[0m relation_l3ext_rs_egress_qos_dpp_pol  = (known after apply)
      [32m+[0m[0m relation_l3ext_rs_ingress_qos_dpp_pol = (known after apply)
      [32m+[0m[0m relation_l3ext_rs_l_if_p_cust_qos_pol = (known after apply)
      [32m+[0m[0m relation_l3ext_rs_nd_if_pol           = (known after apply)
      [32m+[0m[0m tag                                   = "yellow-green"
    }

[1m  # module.built_in_tenants["mgmt"].aci_logical_interface_profile.map["inband:asgard-leaf202:Eth1-30.11"][0m will be created
[0m  [32m+[0m[0m resource "aci_logical_interface_profile" "map" {
      [32m+[0m[0m annotation                            = "orchestrator:terraform"
      [32m+[0m[0m description                           = "to-r142b-core02-Eth1/28"
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m logical_node_profile_dn               = (known after apply)
      [32m+[0m[0m name                                  = "Eth1-30.11"
      [32m+[0m[0m name_alias                            = (known after apply)
      [32m+[0m[0m prio                                  = "unspecified"
      [32m+[0m[0m relation_l3ext_rs_arp_if_pol          = (known after apply)
      [32m+[0m[0m relation_l3ext_rs_egress_qos_dpp_pol  = (known after apply)
      [32m+[0m[0m relation_l3ext_rs_ingress_qos_dpp_pol = (known after apply)
      [32m+[0m[0m relation_l3ext_rs_l_if_p_cust_qos_pol = (known after apply)
      [32m+[0m[0m relation_l3ext_rs_nd_if_pol           = (known after apply)
      [32m+[0m[0m tag                                   = "yellow-green"
    }

[1m  # module.built_in_tenants["mgmt"].aci_logical_node_profile.map["inband:asgard-leaf201"][0m will be created
[0m  [32m+[0m[0m resource "aci_logical_node_profile" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m config_issues = (known after apply)
      [32m+[0m[0m description   = "asgard-leaf201 Inband LNP"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m l3_outside_dn = (known after apply)
      [32m+[0m[0m name          = "asgard-leaf201"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m tag           = "yellow-green"
      [32m+[0m[0m target_dscp   = "unspecified"
    }

[1m  # module.built_in_tenants["mgmt"].aci_logical_node_profile.map["inband:asgard-leaf202"][0m will be created
[0m  [32m+[0m[0m resource "aci_logical_node_profile" "map" {
      [32m+[0m[0m annotation    = "orchestrator:terraform"
      [32m+[0m[0m config_issues = (known after apply)
      [32m+[0m[0m description   = "asgard-leaf202 Inband LNP"
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m l3_outside_dn = (known after apply)
      [32m+[0m[0m name          = "asgard-leaf202"
      [32m+[0m[0m name_alias    = (known after apply)
      [32m+[0m[0m tag           = "yellow-green"
      [32m+[0m[0m target_dscp   = "unspecified"
    }

[1m  # module.built_in_tenants["mgmt"].aci_logical_node_to_fabric_node.map["inband:asgard-leaf201:201"][0m will be created
[0m  [32m+[0m[0m resource "aci_logical_node_to_fabric_node" "map" {
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m config_issues           = (known after apply)
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m logical_node_profile_dn = (known after apply)
      [32m+[0m[0m rtr_id                  = "10.92.11.201"
      [32m+[0m[0m rtr_id_loop_back        = "yes"
      [32m+[0m[0m tdn                     = "topology/pod-1/node-201"
    }

[1m  # module.built_in_tenants["mgmt"].aci_logical_node_to_fabric_node.map["inband:asgard-leaf202:202"][0m will be created
[0m  [32m+[0m[0m resource "aci_logical_node_to_fabric_node" "map" {
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m config_issues           = (known after apply)
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m logical_node_profile_dn = (known after apply)
      [32m+[0m[0m rtr_id                  = "10.92.11.202"
      [32m+[0m[0m rtr_id_loop_back        = "yes"
      [32m+[0m[0m tdn                     = "topology/pod-1/node-202"
    }

[1m  # module.built_in_tenants["mgmt"].aci_node_mgmt_epg.mgmt_epgs["inband"][0m will be created
[0m  [32m+[0m[0m resource "aci_node_mgmt_epg" "mgmt_epgs" {
      [32m+[0m[0m annotation               = "orchestrator:terraform"
      [32m+[0m[0m description              = (known after apply)
      [32m+[0m[0m encap                    = "vlan-64"
      [32m+[0m[0m exception_tag            = (known after apply)
      [32m+[0m[0m flood_on_encap           = (known after apply)
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m management_profile_dn    = "uni/tn-mgmt/mgmtp-default"
      [32m+[0m[0m match_t                  = "AtleastOne"
      [32m+[0m[0m name                     = "inband"
      [32m+[0m[0m name_alias               = (known after apply)
      [32m+[0m[0m pref_gr_memb             = "exclude"
      [32m+[0m[0m prio                     = "unspecified"
      [32m+[0m[0m relation_mgmt_rs_mgmt_bd = "uni/tn-mgmt/BD-10.92.64.0"
      [32m+[0m[0m type                     = "in_band"
    }

[1m  # module.built_in_tenants["mgmt"].aci_node_mgmt_epg.mgmt_epgs["ooband"][0m will be created
[0m  [32m+[0m[0m resource "aci_node_mgmt_epg" "mgmt_epgs" {
      [32m+[0m[0m annotation            = "orchestrator:terraform"
      [32m+[0m[0m description           = (known after apply)
      [32m+[0m[0m exception_tag         = (known after apply)
      [32m+[0m[0m flood_on_encap        = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m management_profile_dn = "uni/tn-mgmt/mgmtp-default"
      [32m+[0m[0m match_t               = (known after apply)
      [32m+[0m[0m name                  = "ooband"
      [32m+[0m[0m name_alias            = (known after apply)
      [32m+[0m[0m pref_gr_memb          = (known after apply)
      [32m+[0m[0m prio                  = "unspecified"
      [32m+[0m[0m type                  = "out_of_band"
    }

[1m  # module.built_in_tenants["mgmt"].aci_rest_managed.application_profiles_annotations["inb:orchestrator"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "application_profiles_annotations" {
      [32m+[0m[0m class_name = "tagAnnotation"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "key"   = "orchestrator"
          [32m+[0m[0m "value" = "terraform:easy-aci:v2.1.5"
        }
      [32m+[0m[0m dn         = "uni/tn-mgmt/ap-inb/annotationKey-[orchestrator]"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.built_in_tenants["mgmt"].aci_rest_managed.contract_subject_filter["inband_in:inband_in:mgmt_in"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "contract_subject_filter" {
      [32m+[0m[0m class_name = "vzRsSubjFiltAtt"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "action"         = "permit"
          [32m+[0m[0m "directives"     = ""
          [32m+[0m[0m "tnVzFilterName" = "mgmt_in"
        }
      [32m+[0m[0m dn         = (known after apply)
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.built_in_tenants["mgmt"].aci_rest_managed.contract_subject_filter["inband_out:inband_out:mgmt_out"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "contract_subject_filter" {
      [32m+[0m[0m class_name = "vzRsSubjFiltAtt"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "action"         = "permit"
          [32m+[0m[0m "directives"     = ""
          [32m+[0m[0m "tnVzFilterName" = "mgmt_out"
        }
      [32m+[0m[0m dn         = (known after apply)
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.built_in_tenants["mgmt"].aci_rest_managed.contract_subject_filter["ooband_in:ooband_in:mgmt_in"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "contract_subject_filter" {
      [32m+[0m[0m class_name = "vzRsSubjFiltAtt"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "action"         = "permit"
          [32m+[0m[0m "directives"     = ""
          [32m+[0m[0m "tnVzFilterName" = "mgmt_in"
        }
      [32m+[0m[0m dn         = (known after apply)
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.built_in_tenants["mgmt"].aci_rest_managed.contract_subject_filter["ooband_out:ooband_out:mgmt_out"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "contract_subject_filter" {
      [32m+[0m[0m class_name = "vzRsSubjFiltAtt"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "action"         = "permit"
          [32m+[0m[0m "directives"     = ""
          [32m+[0m[0m "tnVzFilterName" = "mgmt_out"
        }
      [32m+[0m[0m dn         = (known after apply)
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.built_in_tenants["mgmt"].aci_rest_managed.contract_to_inb_epgs["inb:inband:consumed:inband_out"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "contract_to_inb_epgs" {
      [32m+[0m[0m class_name = "fvRsCons"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "prio" = "unspecified"
        }
      [32m+[0m[0m dn         = "uni/tn-mgmt/mgmtp-default/inb-inband/rscons-inband_out"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.built_in_tenants["mgmt"].aci_rest_managed.contract_to_inb_epgs["inb:inband:provided:inband_in"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "contract_to_inb_epgs" {
      [32m+[0m[0m class_name = "fvRsProv"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "prio" = "unspecified"
        }
      [32m+[0m[0m dn         = "uni/tn-mgmt/mgmtp-default/inb-inband/rsprov-inband_in"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.built_in_tenants["mgmt"].aci_rest_managed.contract_to_oob_epgs["inb:ooband:provided:ooband_in"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "contract_to_oob_epgs" {
      [32m+[0m[0m class_name = "mgmtRsOoBProv"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "prio" = "unspecified"
        }
      [32m+[0m[0m dn         = "uni/tn-mgmt/mgmtp-default/oob-ooband/rsooBProv-ooband_in"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.built_in_tenants["mgmt"].aci_rest_managed.external_management_network_instance_profiles["ooband"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "external_management_network_instance_profiles" {
      [32m+[0m[0m class_name = "mgmtInstP"
      [32m+[0m[0m content    = (known after apply)
      [32m+[0m[0m dn         = "uni/tn-mgmt/extmgmt-default/instp-ooband"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.built_in_tenants["mgmt"].aci_rest_managed.l3out_annotations["mgmt:inband:orchestrator"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "l3out_annotations" {
      [32m+[0m[0m class_name = "tagAnnotation"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "key"   = "orchestrator"
          [32m+[0m[0m "value" = "terraform:easy-aci:v2.1.5"
        }
      [32m+[0m[0m dn         = "uni/tn-mgmt/out-inband/annotationKey-[orchestrator]"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.built_in_tenants["mgmt"].aci_rest_managed.oob_contract_subjects["ooband_in:ooband_in"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "oob_contract_subjects" {
      [32m+[0m[0m class_name = "vzSubj"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "consMatchT"  = "AtleastOne"
          [32m+[0m[0m "descr"       = ""
          [32m+[0m[0m "name"        = "ooband_in"
          [32m+[0m[0m "prio"        = "unspecified"
          [32m+[0m[0m "provMatchT"  = "AtleastOne"
          [32m+[0m[0m "revFltPorts" = "no"
          [32m+[0m[0m "targetDscp"  = "unspecified"
        }
      [32m+[0m[0m dn         = "uni/tn-mgmt/oobbrc-ooband_in/subj-ooband_in"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.built_in_tenants["mgmt"].aci_rest_managed.oob_contract_subjects["ooband_out:ooband_out"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "oob_contract_subjects" {
      [32m+[0m[0m class_name = "vzSubj"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "consMatchT"  = "AtleastOne"
          [32m+[0m[0m "descr"       = ""
          [32m+[0m[0m "name"        = "ooband_out"
          [32m+[0m[0m "prio"        = "unspecified"
          [32m+[0m[0m "provMatchT"  = "AtleastOne"
          [32m+[0m[0m "revFltPorts" = "no"
          [32m+[0m[0m "targetDscp"  = "unspecified"
        }
      [32m+[0m[0m dn         = "uni/tn-mgmt/oobbrc-ooband_out/subj-ooband_out"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.built_in_tenants["mgmt"].aci_rest_managed.oob_contracts["ooband_in"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "oob_contracts" {
      [32m+[0m[0m class_name = "vzOOBBrCP"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "name"       = "ooband_in"
          [32m+[0m[0m "nameAlias"  = ""
          [32m+[0m[0m "prio"       = "unspecified"
          [32m+[0m[0m "scope"      = "context"
          [32m+[0m[0m "targetDscp" = "unspecified"
        }
      [32m+[0m[0m dn         = "uni/tn-mgmt/oobbrc-ooband_in"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.built_in_tenants["mgmt"].aci_rest_managed.oob_contracts["ooband_out"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "oob_contracts" {
      [32m+[0m[0m class_name = "vzOOBBrCP"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "name"       = "ooband_out"
          [32m+[0m[0m "nameAlias"  = ""
          [32m+[0m[0m "prio"       = "unspecified"
          [32m+[0m[0m "scope"      = "context"
          [32m+[0m[0m "targetDscp" = "unspecified"
        }
      [32m+[0m[0m dn         = "uni/tn-mgmt/oobbrc-ooband_out"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.built_in_tenants["mgmt"].aci_rest_managed.tenant_annotations["mgmt:orchestrator"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "tenant_annotations" {
      [32m+[0m[0m class_name = "tagAnnotation"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "key"   = "orchestrator"
          [32m+[0m[0m "value" = "terraform:easy-aci:v2.1.5"
        }
      [32m+[0m[0m dn         = "uni/tn-mgmt/annotationKey-[orchestrator]"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.built_in_tenants["mgmt"].aci_rest_managed.vrf_annotations["mgmt:inb:orchestrator"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "vrf_annotations" {
      [32m+[0m[0m class_name = "tagAnnotation"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "key"   = "orchestrator"
          [32m+[0m[0m "value" = "terraform:easy-aci:v2.1.5"
        }
      [32m+[0m[0m dn         = "uni/tn-mgmt/ctx-inb/annotationKey-[orchestrator]"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.built_in_tenants["mgmt"].aci_static_node_mgmt_address.map["1"][0m will be created
[0m  [32m+[0m[0m resource "aci_static_node_mgmt_address" "map" {
      [32m+[0m[0m addr              = "10.92.64.1/24"
      [32m+[0m[0m annotation        = "orchestrator:terraform"
      [32m+[0m[0m description       = (known after apply)
      [32m+[0m[0m gw                = "10.92.64.254"
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m management_epg_dn = "uni/tn-mgmt/mgmtp-default/inb-inband"
      [32m+[0m[0m t_dn              = "topology/pod-1/node-1"
      [32m+[0m[0m type              = "in_band"
      [32m+[0m[0m v6_addr           = (known after apply)
      [32m+[0m[0m v6_gw             = (known after apply)
    }

[1m  # module.built_in_tenants["mgmt"].aci_subnet.bridge_domain_subnets["10.92.64.0:10.92.64.254/24"][0m will be created
[0m  [32m+[0m[0m resource "aci_subnet" "bridge_domain_subnets" {
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m ctrl        = [
          [32m+[0m[0m "nd",
        ]
      [32m+[0m[0m description = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m ip          = "10.92.64.254/24"
      [32m+[0m[0m name_alias  = (known after apply)
      [32m+[0m[0m parent_dn   = (known after apply)
      [32m+[0m[0m preferred   = "no"
      [32m+[0m[0m scope       = [
          [32m+[0m[0m "public",
        ]
      [32m+[0m[0m virtual     = "no"
    }

[1m  # module.built_in_tenants["mgmt"].aci_tenant.map["mgmt"][0m will be created
[0m  [32m+[0m[0m resource "aci_tenant" "map" {
      [32m+[0m[0m annotation                    = "orchestrator:terraform"
      [32m+[0m[0m description                   = (known after apply)
      [32m+[0m[0m id                            = (known after apply)
      [32m+[0m[0m name                          = "mgmt"
      [32m+[0m[0m name_alias                    = (known after apply)
      [32m+[0m[0m relation_fv_rs_tenant_mon_pol = "uni/tn-common/monepg-default"
    }

[1m  # module.built_in_tenants["mgmt"].aci_vrf.map["inb"][0m will be created
[0m  [32m+[0m[0m resource "aci_vrf" "map" {
      [32m+[0m[0m annotation                              = "orchestrator:terraform"
      [32m+[0m[0m bd_enforced_enable                      = (known after apply)
      [32m+[0m[0m description                             = "Inband VRF"
      [32m+[0m[0m id                                      = (known after apply)
      [32m+[0m[0m ip_data_plane_learning                  = "enabled"
      [32m+[0m[0m knw_mcast_act                           = "permit"
      [32m+[0m[0m name                                    = "inb"
      [32m+[0m[0m name_alias                              = (known after apply)
      [32m+[0m[0m pc_enf_dir                              = "ingress"
      [32m+[0m[0m pc_enf_pref                             = "enforced"
      [32m+[0m[0m relation_fv_rs_bgp_ctx_pol              = "uni/tn-common/bgpCtxP-default"
      [32m+[0m[0m relation_fv_rs_ctx_to_ep_ret            = (known after apply)
      [32m+[0m[0m relation_fv_rs_ctx_to_ext_route_tag_pol = (known after apply)
      [32m+[0m[0m relation_fv_rs_ospf_ctx_pol             = "uni/tn-common/ospfCtxP-default"
      [32m+[0m[0m relation_fv_rs_vrf_validation_pol       = (known after apply)
      [32m+[0m[0m tenant_dn                               = "uni/tn-mgmt"
    }

[1m  # module.built_in_tenants["mgmt"].aci_vrf_snmp_context.map["inb"][0m will be created
[0m  [32m+[0m[0m resource "aci_vrf_snmp_context" "map" {
      [32m+[0m[0m annotation = "orchestrator:terraform"
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m name       = "inb"
      [32m+[0m[0m name_alias = (known after apply)
      [32m+[0m[0m vrf_dn     = (known after apply)
    }

[1m  # module.fabric["default"].aci_fabric_node_control.map["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_fabric_node_control" "map" {
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m control     = "Dom"
      [32m+[0m[0m description = (known after apply)
      [32m+[0m[0m feature_sel = "telemetry"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "default"
      [32m+[0m[0m name_alias  = (known after apply)
    }

[1m  # module.fabric["default"].aci_l3_interface_policy.map["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_l3_interface_policy" "map" {
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m bfd_isis    = "enabled"
      [32m+[0m[0m description = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "default"
      [32m+[0m[0m name_alias  = (known after apply)
    }

[1m  # module.fabric["default"].aci_rest_managed.date_and_time["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "date_and_time" {
      [32m+[0m[0m class_name = "datetimePol"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "StratumValue" = "8"
          [32m+[0m[0m "adminSt"      = "enabled"
          [32m+[0m[0m "authSt"       = "disabled"
          [32m+[0m[0m "descr"        = ""
          [32m+[0m[0m "name"         = "default"
          [32m+[0m[0m "serverState"  = "enabled"
        }
      [32m+[0m[0m dn         = "uni/fabric/time-default"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.fabric["default"].aci_rest_managed.date_and_time_format["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "date_and_time_format" {
      [32m+[0m[0m class_name = "datetimeFormat"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "displayFormat" = "local"
          [32m+[0m[0m "showOffset"    = "enabled"
          [32m+[0m[0m "tz"            = "n240_America-Detroit"
        }
      [32m+[0m[0m dn         = "uni/fabric/format-default"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.fabric["default"].aci_rest_managed.date_and_time_ntp_servers["default:10.101.128.15"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "date_and_time_ntp_servers" {
      [32m+[0m[0m class_name = "datetimeNtpProv"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "descr"      = ""
          [32m+[0m[0m "keyId"      = "0"
          [32m+[0m[0m "maxPoll"    = "6"
          [32m+[0m[0m "minPoll"    = "5"
          [32m+[0m[0m "name"       = "10.101.128.15"
          [32m+[0m[0m "preferred"  = "no"
          [32m+[0m[0m "trueChimer" = "disabled"
        }
      [32m+[0m[0m dn         = "uni/fabric/time-default/ntpprov-10.101.128.15"
      [32m+[0m[0m id         = (known after apply)

      [32m+[0m[0m child {
          [32m+[0m[0m class_name = "datetimeRsNtpProvToEpg"
          [32m+[0m[0m content    = {
              [32m+[0m[0m "tDn" = "uni/tn-mgmt/mgmtp-default/oob-ooband"
            }
          [32m+[0m[0m rn         = "rsNtpProvToEpg"
        }
    }

[1m  # module.fabric["default"].aci_rest_managed.date_and_time_ntp_servers["default:10.101.128.16"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "date_and_time_ntp_servers" {
      [32m+[0m[0m class_name = "datetimeNtpProv"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "descr"      = ""
          [32m+[0m[0m "keyId"      = "0"
          [32m+[0m[0m "maxPoll"    = "6"
          [32m+[0m[0m "minPoll"    = "5"
          [32m+[0m[0m "name"       = "10.101.128.16"
          [32m+[0m[0m "preferred"  = "yes"
          [32m+[0m[0m "trueChimer" = "disabled"
        }
      [32m+[0m[0m dn         = "uni/fabric/time-default/ntpprov-10.101.128.16"
      [32m+[0m[0m id         = (known after apply)

      [32m+[0m[0m child {
          [32m+[0m[0m class_name = "datetimeRsNtpProvToEpg"
          [32m+[0m[0m content    = {
              [32m+[0m[0m "tDn" = "uni/tn-mgmt/mgmtp-default/oob-ooband"
            }
          [32m+[0m[0m rn         = "rsNtpProvToEpg"
        }
    }

[1m  # module.fabric["default"].aci_rest_managed.dns_domains["default:cisco.com"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "dns_domains" {
      [32m+[0m[0m class_name = "dnsDomain"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "descr"     = ""
          [32m+[0m[0m "isDefault" = "no"
          [32m+[0m[0m "name"      = "cisco.com"
        }
      [32m+[0m[0m dn         = "uni/fabric/dnsp-default/dom-[cisco.com]"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.fabric["default"].aci_rest_managed.dns_domains["default:rich.ciscolabs.com"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "dns_domains" {
      [32m+[0m[0m class_name = "dnsDomain"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "descr"     = ""
          [32m+[0m[0m "isDefault" = "yes"
          [32m+[0m[0m "name"      = "rich.ciscolabs.com"
        }
      [32m+[0m[0m dn         = "uni/fabric/dnsp-default/dom-[rich.ciscolabs.com]"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.fabric["default"].aci_rest_managed.dns_profiles["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "dns_profiles" {
      [32m+[0m[0m class_name = "dnsProfile"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "IPVerPreference" = "IPv4"
          [32m+[0m[0m "descr"           = "System DNS Profile"
          [32m+[0m[0m "name"            = "default"
        }
      [32m+[0m[0m dn         = "uni/fabric/dnsp-default"
      [32m+[0m[0m id         = (known after apply)

      [32m+[0m[0m child {
          [32m+[0m[0m class_name = "dnsRsProfileToEpg"
          [32m+[0m[0m content    = {
              [32m+[0m[0m "tDn" = "uni/tn-mgmt/mgmtp-default/oob-ooband"
            }
          [32m+[0m[0m rn         = "rsProfileToEpg"
        }
    }

[1m  # module.fabric["default"].aci_rest_managed.dns_providers["default:10.101.128.15"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "dns_providers" {
      [32m+[0m[0m class_name = "dnsProv"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "addr"      = "10.101.128.15"
          [32m+[0m[0m "preferred" = "yes"
        }
      [32m+[0m[0m dn         = "uni/fabric/dnsp-default/prov-[10.101.128.15]"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.fabric["default"].aci_rest_managed.dns_providers["default:10.101.128.16"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "dns_providers" {
      [32m+[0m[0m class_name = "dnsProv"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "addr"      = "10.101.128.16"
          [32m+[0m[0m "preferred" = "no"
        }
      [32m+[0m[0m dn         = "uni/fabric/dnsp-default/prov-[10.101.128.16]"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.fabric["default"].aci_rest_managed.pod_policy_groups["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "pod_policy_groups" {
      [32m+[0m[0m class_name = "fabricPodPGrp"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "descr" = ""
          [32m+[0m[0m "name"  = "default"
        }
      [32m+[0m[0m dn         = "uni/fabric/funcprof/podpgrp-default"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.fabric["default"].aci_rest_managed.pod_policy_groups_bgp_rr_policy["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "pod_policy_groups_bgp_rr_policy" {
      [32m+[0m[0m class_name = "fabricRsPodPGrpBGPRRP"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "tnBgpInstPolName" = "default"
        }
      [32m+[0m[0m dn         = "uni/fabric/funcprof/podpgrp-default/rspodPGrpBGPRRP"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.fabric["default"].aci_rest_managed.pod_policy_groups_coop_policy["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "pod_policy_groups_coop_policy" {
      [32m+[0m[0m class_name = "fabricRsPodPGrpCoopP"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "tnCoopPolName" = "default"
        }
      [32m+[0m[0m dn         = "uni/fabric/funcprof/podpgrp-default/rspodPGrpCoopP"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.fabric["default"].aci_rest_managed.pod_policy_groups_date_and_time_policy["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "pod_policy_groups_date_and_time_policy" {
      [32m+[0m[0m class_name = "fabricRsTimePol"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "tnDatetimePolName" = "default"
        }
      [32m+[0m[0m dn         = "uni/fabric/funcprof/podpgrp-default/rsTimePol"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.fabric["default"].aci_rest_managed.pod_policy_groups_isis_policy["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "pod_policy_groups_isis_policy" {
      [32m+[0m[0m class_name = "fabricRsPodPGrpIsisDomP"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "tnIsisDomPolName" = "default"
        }
      [32m+[0m[0m dn         = "uni/fabric/funcprof/podpgrp-default/rspodPGrpIsisDomP"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.fabric["default"].aci_rest_managed.pod_policy_groups_macsec_policy["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "pod_policy_groups_macsec_policy" {
      [32m+[0m[0m class_name = "fabricRsMacsecPol"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "tnMacsecFabIfPolName" = "default"
        }
      [32m+[0m[0m dn         = "uni/fabric/funcprof/podpgrp-default/rsmacsecPol"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.fabric["default"].aci_rest_managed.pod_policy_groups_mgmt_policy["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "pod_policy_groups_mgmt_policy" {
      [32m+[0m[0m class_name = "fabricRsCommPol"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "tnCommPolName" = "default"
        }
      [32m+[0m[0m dn         = "uni/fabric/funcprof/podpgrp-default/rsCommPol"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.fabric["default"].aci_rest_managed.pod_policy_groups_snmp_policy["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "pod_policy_groups_snmp_policy" {
      [32m+[0m[0m class_name = "fabricRsSnmpPol"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "tnSnmpPolName" = "default"
        }
      [32m+[0m[0m dn         = "uni/fabric/funcprof/podpgrp-default/rssnmpPol"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.fabric["default"].aci_rest_managed.pod_profile_selectors_all["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "pod_profile_selectors_all" {
      [32m+[0m[0m class_name = "fabricPodS"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "name" = "default"
          [32m+[0m[0m "type" = "ALL"
        }
      [32m+[0m[0m dn         = "uni/fabric/podprof-default/pods-default-typ-ALL"
      [32m+[0m[0m id         = (known after apply)

      [32m+[0m[0m child {
          [32m+[0m[0m class_name = "fabricRsPodPGrp"
          [32m+[0m[0m content    = {
              [32m+[0m[0m "tDn" = "uni/fabric/funcprof/podpgrp-default"
            }
          [32m+[0m[0m rn         = "rspodPGrp"
        }
    }

[1m  # module.fabric["default"].aci_rest_managed.pod_profiles["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "pod_profiles" {
      [32m+[0m[0m class_name = "fabricPodP"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "descr" = ""
          [32m+[0m[0m "name"  = "default"
        }
      [32m+[0m[0m dn         = "uni/fabric/podprof-default"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.fabric["default"].aci_rest_managed.snmp_destination_groups["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "snmp_destination_groups" {
      [32m+[0m[0m class_name = "snmpGroup"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "descr" = ""
          [32m+[0m[0m "name"  = "default"
        }
      [32m+[0m[0m dn         = "uni/fabric/snmpgroup-default"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.fabric["default"].aci_rest_managed.snmp_policies["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "snmp_policies" {
      [32m+[0m[0m class_name = "snmpPol"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "adminSt" = "enabled"
          [32m+[0m[0m "contact" = "rich-lab@cisco.com"
          [32m+[0m[0m "descr"   = ""
          [32m+[0m[0m "loc"     = "Asgard - Rack143D"
          [32m+[0m[0m "name"    = "default"
        }
      [32m+[0m[0m dn         = "uni/fabric/snmppol-default"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.fabric["default"].aci_rest_managed.snmp_policy_client_group_client_servers["default:ooband:10.101.128.24"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "snmp_policy_client_group_client_servers" {
      [32m+[0m[0m class_name = "snmpClientP"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "addr" = "10.101.128.24"
          [32m+[0m[0m "name" = "LNX1"
        }
      [32m+[0m[0m dn         = "uni/fabric/snmppol-default/clgrp-ooband/client-[10.101.128.24]"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.fabric["default"].aci_rest_managed.snmp_policy_client_group_client_servers["default:ooband:10.101.128.25"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "snmp_policy_client_group_client_servers" {
      [32m+[0m[0m class_name = "snmpClientP"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "addr" = "10.101.128.25"
          [32m+[0m[0m "name" = "10.101.128.25"
        }
      [32m+[0m[0m dn         = "uni/fabric/snmppol-default/clgrp-ooband/client-[10.101.128.25]"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.fabric["default"].aci_rest_managed.snmp_policy_client_groups["default:ooband"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "snmp_policy_client_groups" {
      [32m+[0m[0m class_name = "snmpClientGrpP"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "descr" = "Out-of-Band Client Group"
          [32m+[0m[0m "name"  = "ooband"
        }
      [32m+[0m[0m dn         = "uni/fabric/snmppol-default/clgrp-ooband"
      [32m+[0m[0m id         = (known after apply)

      [32m+[0m[0m child {
          [32m+[0m[0m class_name = "snmpRsEpg"
          [32m+[0m[0m content    = {
              [32m+[0m[0m "tDn" = "uni/tn-mgmt/mgmtp-default/oob-ooband"
            }
          [32m+[0m[0m rn         = "rsepg"
        }
    }

[1m  # module.fabric["default"].aci_rest_managed.snmp_policy_trap_servers["default:10.101.128.24"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "snmp_policy_trap_servers" {
      [32m+[0m[0m class_name = "snmpTrapFwdServerP"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "addr" = "10.101.128.24"
          [32m+[0m[0m "port" = "162"
        }
      [32m+[0m[0m dn         = "uni/fabric/snmppol-default/trapfwdserver-[10.101.128.24]"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.fabric["default"].aci_rest_managed.snmp_policy_trap_servers["default:10.101.128.25"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "snmp_policy_trap_servers" {
      [32m+[0m[0m class_name = "snmpTrapFwdServerP"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "addr" = "10.101.128.25"
          [32m+[0m[0m "port" = "162"
        }
      [32m+[0m[0m dn         = "uni/fabric/snmppol-default/trapfwdserver-[10.101.128.25]"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.fabric["default"].aci_rest_managed.snmp_policy_users["default:cisco_user1"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "snmp_policy_users" {
      [32m+[0m[0m class_name = "snmpUserP"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "authKey"  = (sensitive value)
          [32m+[0m[0m "authType" = "hmac-sha1-96"
          [32m+[0m[0m "name"     = "cisco_user1"
          [32m+[0m[0m "privKey"  = (sensitive value)
          [32m+[0m[0m "privType" = "aes-128"
        }
      [32m+[0m[0m dn         = "uni/fabric/snmppol-default/user-[cisco_user1]"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.fabric["default"].aci_rest_managed.snmp_trap_destinations["default:10.101.128.24"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "snmp_trap_destinations" {
      [32m+[0m[0m class_name = "snmpTrapDest"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "host"     = "10.101.128.24"
          [32m+[0m[0m "port"     = "162"
          [32m+[0m[0m "secName"  = "cisco_user1"
          [32m+[0m[0m "v3SecLvl" = "priv"
          [32m+[0m[0m "ver"      = "v3"
        }
      [32m+[0m[0m dn         = "uni/fabric/snmpgroup-default/trapdest-10.101.128.24-port-162"
      [32m+[0m[0m id         = (known after apply)

      [32m+[0m[0m child {
          [32m+[0m[0m class_name = "fileRsARemoteHostToEpg"
          [32m+[0m[0m content    = {
              [32m+[0m[0m "tDn" = "uni/tn-mgmt/mgmtp-default/oob-ooband"
            }
          [32m+[0m[0m rn         = "rsARemoteHostToEpg"
        }
    }

[1m  # module.fabric["default"].aci_rest_managed.snmp_trap_destinations["default:10.101.128.25"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "snmp_trap_destinations" {
      [32m+[0m[0m class_name = "snmpTrapDest"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "host"     = "10.101.128.25"
          [32m+[0m[0m "port"     = "162"
          [32m+[0m[0m "secName"  = (sensitive value)
          [32m+[0m[0m "v3SecLvl" = "noauth"
          [32m+[0m[0m "ver"      = "v2c"
        }
      [32m+[0m[0m dn         = "uni/fabric/snmpgroup-default/trapdest-10.101.128.25-port-162"
      [32m+[0m[0m id         = (known after apply)

      [32m+[0m[0m child {
          [32m+[0m[0m class_name = "fileRsARemoteHostToEpg"
          [32m+[0m[0m content    = {
              [32m+[0m[0m "tDn" = "uni/tn-mgmt/mgmtp-default/oob-ooband"
            }
          [32m+[0m[0m rn         = "rsARemoteHostToEpg"
        }
    }

[1m  # module.fabric["default"].aci_rest_managed.snmp_trap_source["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "snmp_trap_source" {
      [32m+[0m[0m class_name = "snmpSrc"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "incl" = "all,audit,events,faults,session"
          [32m+[0m[0m "name" = "default"
        }
      [32m+[0m[0m dn         = "uni/fabric/moncommon/snmpsrc-default"
      [32m+[0m[0m id         = (known after apply)

      [32m+[0m[0m child {
          [32m+[0m[0m class_name = "snmpRsDestGroup"
          [32m+[0m[0m content    = {
              [32m+[0m[0m "tDn" = "uni/fabric/snmpgroup-default"
            }
          [32m+[0m[0m rn         = "rsdestGroup"
        }
    }

[1m  # module.fabric["default"].aci_snmp_community.snmp_policy_communities["default:1"][0m will be created
[0m  [32m+[0m[0m resource "aci_snmp_community" "snmp_policy_communities" {
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m description = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name_alias  = (known after apply)
      [32m+[0m[0m parent_dn   = (known after apply)
    }

[1m  # module.fabric["default"].aci_snmp_community.snmp_policy_communities["default:2"][0m will be created
[0m  [32m+[0m[0m resource "aci_snmp_community" "snmp_policy_communities" {
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m description = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name_alias  = (known after apply)
      [32m+[0m[0m parent_dn   = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/1"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "1"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-01"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "1"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/10"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "10"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-10"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "10"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/11"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "11"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-11"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "11"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/12"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "12"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-12"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "12"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/13"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "13"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-13"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "13"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/14"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "14"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-14"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "14"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/15"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "15"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-15"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "15"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/16"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "16"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-16"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "16"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/17"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "17"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-17"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "17"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/18"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "18"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-18"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "18"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/19"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "19"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-19"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "19"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/2"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "2"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-02"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "2"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/20"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "20"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-20"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "20"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/21"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "21"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-21"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "21"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/22"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "22"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-22"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "22"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/23"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "23"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-23"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "23"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/24"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "24"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-24"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "24"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/25"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "25"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-25"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "25"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/26"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "26"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-26"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "26"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/27"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "27"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-27"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "27"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/28"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "28"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-28"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "28"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/29"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = "r142b-core01-Eth1/23"
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "29"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-29"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "29"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/3"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "3"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-03"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "3"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/30"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = "r142b-core02-Eth1/23"
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "30"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-30"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "30"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/31"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "31"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-31"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "31"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/32"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "32"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-32"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "32"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/33"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "33"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-33"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "33"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/34"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "34"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-34"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "34"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/4"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "4"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-04"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "4"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/5"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "5"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-05"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "5"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/6"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "6"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-06"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "6"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/7"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "7"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-07"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "7"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/8"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "8"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-08"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "8"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["101-Eth1/9"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "9"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-09"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "9"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/1"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "1"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-01"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "1"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/10"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "10"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-10"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "10"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/11"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "11"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-11"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "11"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/12"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "12"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-12"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "12"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/13"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "13"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-13"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "13"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/14"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "14"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-14"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "14"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/15"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "15"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-15"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "15"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/16"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "16"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-16"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "16"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/17"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "17"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-17"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "17"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/18"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "18"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-18"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "18"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/19"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "19"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-19"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "19"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/2"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "2"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-02"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "2"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/20"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "20"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-20"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "20"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/21"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "21"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-21"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "21"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/22"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "22"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-22"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "22"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/23"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "23"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-23"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "23"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/24"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "24"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-24"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "24"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/25"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "25"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-25"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "25"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/26"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "26"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-26"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "26"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/27"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "27"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-27"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "27"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/28"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "28"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-28"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "28"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/29"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = "r142b-core01-Eth1/24"
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "29"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-29"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "29"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/3"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "3"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-03"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "3"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/30"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = "r142b-core02-Eth1/24"
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "30"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-30"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "30"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/31"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "31"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-31"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "31"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/32"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "32"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-32"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "32"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/33"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "33"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-33"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "33"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/34"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "34"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-34"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "34"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/4"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "4"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-04"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "4"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/5"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "5"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-05"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "5"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/6"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "6"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-06"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "6"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/7"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "7"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-07"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "7"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/8"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "8"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-08"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "8"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["102-Eth1/9"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "9"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-09"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "9"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/1"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "1"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-01"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "1"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/10"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "10"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-10"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "10"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/11"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "11"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-11"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "11"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/12"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "12"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-12"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "12"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/13"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "13"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-13"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "13"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/14"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "14"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-14"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "14"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/15"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "15"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-15"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "15"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/16"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "16"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-16"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "16"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/17"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "17"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-17"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "17"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/18"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "18"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-18"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "18"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/19"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "19"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-19"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "19"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/2"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "2"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-02"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "2"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/20"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "20"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-20"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "20"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/21"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "21"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-21"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "21"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/22"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "22"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-22"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "22"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/23"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "23"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-23"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "23"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/24"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "24"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-24"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "24"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/25"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = "LOKI01-eth2/1"
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "25"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-25"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "25"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/26"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = "LOKI02-eth2/1"
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "26"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-26"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "26"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/27"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = "LOKI03-eth2/1"
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "27"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-27"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "27"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/28"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = "LOKI04-eth2/1"
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "28"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-28"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "28"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/29"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = "r142b-core01-Eth1/27"
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "29"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-29"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "29"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/3"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = "r143e-1-A-Eth1/53"
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "3"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-03"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "3"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/30"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = "r142b-core02-Eth1/27"
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "30"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-30"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "30"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/31"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "31"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-31"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "31"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/32"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "32"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-32"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "32"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/33"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "33"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-33"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "33"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/34"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "34"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-34"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "34"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/35"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "35"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-35"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "35"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/36"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "36"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-36"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "36"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/4"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = "r143e-1-B-Eth1/53"
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "4"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-04"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "4"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/5"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "5"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-05"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "5"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/6"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "6"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-06"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "6"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/7"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "7"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-07"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "7"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/8"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "8"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-08"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "8"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["201-Eth1/9"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "9"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-09"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "9"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/1"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "1"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-01"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "1"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/10"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "10"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-10"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "10"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/11"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "11"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-11"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "11"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/12"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "12"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-12"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "12"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/13"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "13"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-13"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "13"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/14"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "14"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-14"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "14"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/15"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "15"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-15"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "15"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/16"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "16"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-16"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "16"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/17"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "17"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-17"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "17"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/18"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "18"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-18"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "18"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/19"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "19"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-19"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "19"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/2"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "2"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-02"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "2"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/20"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "20"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-20"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "20"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/21"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "21"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-21"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "21"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/22"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "22"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-22"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "22"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/23"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "23"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-23"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "23"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/24"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "24"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-24"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "24"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/25"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = "LOKI01-eth2/2"
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "25"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-25"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "25"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/26"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = "LOKI02-eth2/2"
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "26"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-26"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "26"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/27"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = "LOKI03-eth2/2"
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "27"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-27"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "27"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/28"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = "LOKI04-eth2/2"
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "28"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-28"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "28"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/29"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = "r142b-core01-Eth1/28"
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "29"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-29"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "29"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/3"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = "r143e-1-A-Eth1/54"
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "3"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-03"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "3"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/30"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = "r142b-core02-Eth1/28"
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "30"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-30"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "30"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/31"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "31"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-31"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "31"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/32"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "32"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-32"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "32"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/33"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "33"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-33"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "33"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/34"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "34"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-34"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "34"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/35"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "35"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-35"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "35"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/36"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "36"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-36"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "36"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/4"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = "r143e-1-B-Eth1/54"
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "4"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-04"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "4"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/5"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "5"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-05"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "5"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/6"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "6"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-06"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "6"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/7"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "7"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-07"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "7"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/8"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "8"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-08"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "8"
    }

[1m  # module.switch["default"].aci_access_port_block.leaf_port_blocks["202-Eth1/9"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_block" "leaf_port_blocks" {
      [32m+[0m[0m access_port_selector_dn = (known after apply)
      [32m+[0m[0m annotation              = "orchestrator:terraform"
      [32m+[0m[0m description             = (known after apply)
      [32m+[0m[0m from_card               = "1"
      [32m+[0m[0m from_port               = "9"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "Eth1-09"
      [32m+[0m[0m name_alias              = (known after apply)
      [32m+[0m[0m to_card                 = "1"
      [32m+[0m[0m to_port                 = "9"
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/1"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-01"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/10"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-10"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/11"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-11"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/12"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-12"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/13"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-13"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/14"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-14"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/15"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-15"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/16"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-16"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/17"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-17"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/18"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-18"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/19"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-19"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/2"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-02"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/20"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-20"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/21"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-21"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/22"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-22"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/23"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-23"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/24"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-24"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/25"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-25"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/26"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-26"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/27"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-27"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/28"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-28"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/29"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type      = "range"
      [32m+[0m[0m annotation                     = "orchestrator:terraform"
      [32m+[0m[0m description                    = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn      = (known after apply)
      [32m+[0m[0m name                           = "Eth1-29"
      [32m+[0m[0m name_alias                     = (known after apply)
      [32m+[0m[0m relation_infra_rs_acc_base_grp = "uni/infra/funcprof/accportgrp-default"
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/3"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-03"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/30"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type      = "range"
      [32m+[0m[0m annotation                     = "orchestrator:terraform"
      [32m+[0m[0m description                    = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn      = (known after apply)
      [32m+[0m[0m name                           = "Eth1-30"
      [32m+[0m[0m name_alias                     = (known after apply)
      [32m+[0m[0m relation_infra_rs_acc_base_grp = "uni/infra/funcprof/accportgrp-default"
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/31"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-31"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/32"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-32"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/33"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-33"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/34"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-34"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/4"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-04"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/5"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-05"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/6"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-06"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/7"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-07"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/8"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-08"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["101-Eth1/9"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-09"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/1"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-01"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/10"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-10"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/11"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-11"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/12"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-12"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/13"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-13"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/14"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-14"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/15"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-15"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/16"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-16"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/17"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-17"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/18"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-18"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/19"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-19"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/2"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-02"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/20"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-20"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/21"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-21"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/22"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-22"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/23"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-23"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/24"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-24"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/25"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-25"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/26"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-26"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/27"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-27"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/28"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-28"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/29"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type      = "range"
      [32m+[0m[0m annotation                     = "orchestrator:terraform"
      [32m+[0m[0m description                    = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn      = (known after apply)
      [32m+[0m[0m name                           = "Eth1-29"
      [32m+[0m[0m name_alias                     = (known after apply)
      [32m+[0m[0m relation_infra_rs_acc_base_grp = "uni/infra/funcprof/accportgrp-default"
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/3"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-03"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/30"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type      = "range"
      [32m+[0m[0m annotation                     = "orchestrator:terraform"
      [32m+[0m[0m description                    = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn      = (known after apply)
      [32m+[0m[0m name                           = "Eth1-30"
      [32m+[0m[0m name_alias                     = (known after apply)
      [32m+[0m[0m relation_infra_rs_acc_base_grp = "uni/infra/funcprof/accportgrp-default"
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/31"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-31"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/32"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-32"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/33"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-33"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/34"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-34"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/4"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-04"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/5"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-05"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/6"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-06"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/7"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-07"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/8"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-08"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["102-Eth1/9"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-09"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/1"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-01"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/10"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-10"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/11"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-11"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/12"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-12"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/13"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-13"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/14"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-14"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/15"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-15"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/16"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-16"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/17"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-17"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/18"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-18"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/19"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-19"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/2"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-02"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/20"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-20"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/21"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-21"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/22"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-22"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/23"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-23"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/24"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-24"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/25"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type      = "range"
      [32m+[0m[0m annotation                     = "orchestrator:terraform"
      [32m+[0m[0m description                    = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn      = (known after apply)
      [32m+[0m[0m name                           = "Eth1-25"
      [32m+[0m[0m name_alias                     = (known after apply)
      [32m+[0m[0m relation_infra_rs_acc_base_grp = "uni/infra/funcprof/accportgrp-trunkPort"
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/26"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type      = "range"
      [32m+[0m[0m annotation                     = "orchestrator:terraform"
      [32m+[0m[0m description                    = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn      = (known after apply)
      [32m+[0m[0m name                           = "Eth1-26"
      [32m+[0m[0m name_alias                     = (known after apply)
      [32m+[0m[0m relation_infra_rs_acc_base_grp = "uni/infra/funcprof/accportgrp-trunkPort"
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/27"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type      = "range"
      [32m+[0m[0m annotation                     = "orchestrator:terraform"
      [32m+[0m[0m description                    = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn      = (known after apply)
      [32m+[0m[0m name                           = "Eth1-27"
      [32m+[0m[0m name_alias                     = (known after apply)
      [32m+[0m[0m relation_infra_rs_acc_base_grp = "uni/infra/funcprof/accportgrp-trunkPort"
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/28"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type      = "range"
      [32m+[0m[0m annotation                     = "orchestrator:terraform"
      [32m+[0m[0m description                    = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn      = (known after apply)
      [32m+[0m[0m name                           = "Eth1-28"
      [32m+[0m[0m name_alias                     = (known after apply)
      [32m+[0m[0m relation_infra_rs_acc_base_grp = "uni/infra/funcprof/accportgrp-trunkPort"
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/29"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type      = "range"
      [32m+[0m[0m annotation                     = "orchestrator:terraform"
      [32m+[0m[0m description                    = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn      = (known after apply)
      [32m+[0m[0m name                           = "Eth1-29"
      [32m+[0m[0m name_alias                     = (known after apply)
      [32m+[0m[0m relation_infra_rs_acc_base_grp = "uni/infra/funcprof/accportgrp-l3out"
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/3"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type      = "range"
      [32m+[0m[0m annotation                     = "orchestrator:terraform"
      [32m+[0m[0m description                    = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn      = (known after apply)
      [32m+[0m[0m name                           = "Eth1-03"
      [32m+[0m[0m name_alias                     = (known after apply)
      [32m+[0m[0m relation_infra_rs_acc_base_grp = "uni/infra/funcprof/accbundle-vpc03"
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/30"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type      = "range"
      [32m+[0m[0m annotation                     = "orchestrator:terraform"
      [32m+[0m[0m description                    = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn      = (known after apply)
      [32m+[0m[0m name                           = "Eth1-30"
      [32m+[0m[0m name_alias                     = (known after apply)
      [32m+[0m[0m relation_infra_rs_acc_base_grp = "uni/infra/funcprof/accportgrp-l3out"
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/31"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-31"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/32"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-32"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/33"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-33"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/34"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-34"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/35"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-35"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/36"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-36"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/4"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type      = "range"
      [32m+[0m[0m annotation                     = "orchestrator:terraform"
      [32m+[0m[0m description                    = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn      = (known after apply)
      [32m+[0m[0m name                           = "Eth1-04"
      [32m+[0m[0m name_alias                     = (known after apply)
      [32m+[0m[0m relation_infra_rs_acc_base_grp = "uni/infra/funcprof/accbundle-vpc04"
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/5"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-05"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/6"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-06"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/7"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-07"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/8"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-08"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["201-Eth1/9"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-09"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/1"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-01"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/10"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-10"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/11"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-11"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/12"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-12"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/13"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-13"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/14"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-14"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/15"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-15"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/16"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-16"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/17"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-17"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/18"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-18"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/19"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-19"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/2"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-02"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/20"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-20"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/21"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-21"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/22"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-22"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/23"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-23"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/24"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-24"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/25"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type      = "range"
      [32m+[0m[0m annotation                     = "orchestrator:terraform"
      [32m+[0m[0m description                    = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn      = (known after apply)
      [32m+[0m[0m name                           = "Eth1-25"
      [32m+[0m[0m name_alias                     = (known after apply)
      [32m+[0m[0m relation_infra_rs_acc_base_grp = "uni/infra/funcprof/accportgrp-trunkPort"
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/26"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type      = "range"
      [32m+[0m[0m annotation                     = "orchestrator:terraform"
      [32m+[0m[0m description                    = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn      = (known after apply)
      [32m+[0m[0m name                           = "Eth1-26"
      [32m+[0m[0m name_alias                     = (known after apply)
      [32m+[0m[0m relation_infra_rs_acc_base_grp = "uni/infra/funcprof/accportgrp-trunkPort"
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/27"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type      = "range"
      [32m+[0m[0m annotation                     = "orchestrator:terraform"
      [32m+[0m[0m description                    = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn      = (known after apply)
      [32m+[0m[0m name                           = "Eth1-27"
      [32m+[0m[0m name_alias                     = (known after apply)
      [32m+[0m[0m relation_infra_rs_acc_base_grp = "uni/infra/funcprof/accportgrp-trunkPort"
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/28"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type      = "range"
      [32m+[0m[0m annotation                     = "orchestrator:terraform"
      [32m+[0m[0m description                    = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn      = (known after apply)
      [32m+[0m[0m name                           = "Eth1-28"
      [32m+[0m[0m name_alias                     = (known after apply)
      [32m+[0m[0m relation_infra_rs_acc_base_grp = "uni/infra/funcprof/accportgrp-trunkPort"
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/29"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type      = "range"
      [32m+[0m[0m annotation                     = "orchestrator:terraform"
      [32m+[0m[0m description                    = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn      = (known after apply)
      [32m+[0m[0m name                           = "Eth1-29"
      [32m+[0m[0m name_alias                     = (known after apply)
      [32m+[0m[0m relation_infra_rs_acc_base_grp = "uni/infra/funcprof/accportgrp-l3out"
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/3"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type      = "range"
      [32m+[0m[0m annotation                     = "orchestrator:terraform"
      [32m+[0m[0m description                    = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn      = (known after apply)
      [32m+[0m[0m name                           = "Eth1-03"
      [32m+[0m[0m name_alias                     = (known after apply)
      [32m+[0m[0m relation_infra_rs_acc_base_grp = "uni/infra/funcprof/accbundle-vpc03"
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/30"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type      = "range"
      [32m+[0m[0m annotation                     = "orchestrator:terraform"
      [32m+[0m[0m description                    = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn      = (known after apply)
      [32m+[0m[0m name                           = "Eth1-30"
      [32m+[0m[0m name_alias                     = (known after apply)
      [32m+[0m[0m relation_infra_rs_acc_base_grp = "uni/infra/funcprof/accportgrp-l3out"
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/31"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-31"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/32"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-32"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/33"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-33"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/34"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-34"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/35"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-35"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/36"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-36"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/4"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type      = "range"
      [32m+[0m[0m annotation                     = "orchestrator:terraform"
      [32m+[0m[0m description                    = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn      = (known after apply)
      [32m+[0m[0m name                           = "Eth1-04"
      [32m+[0m[0m name_alias                     = (known after apply)
      [32m+[0m[0m relation_infra_rs_acc_base_grp = "uni/infra/funcprof/accbundle-vpc04"
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/5"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-05"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/6"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-06"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/7"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-07"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/8"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-08"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_access_port_selector.map["202-Eth1/9"][0m will be created
[0m  [32m+[0m[0m resource "aci_access_port_selector" "map" {
      [32m+[0m[0m access_port_selector_type = "range"
      [32m+[0m[0m annotation                = "orchestrator:terraform"
      [32m+[0m[0m description               = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m leaf_interface_profile_dn = (known after apply)
      [32m+[0m[0m name                      = "Eth1-09"
      [32m+[0m[0m name_alias                = (known after apply)
    }

[1m  # module.switch["default"].aci_leaf_interface_profile.map["101"][0m will be created
[0m  [32m+[0m[0m resource "aci_leaf_interface_profile" "map" {
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m description = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "asgard-spine101"
      [32m+[0m[0m name_alias  = (known after apply)
    }

[1m  # module.switch["default"].aci_leaf_interface_profile.map["102"][0m will be created
[0m  [32m+[0m[0m resource "aci_leaf_interface_profile" "map" {
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m description = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "asgard-spine102"
      [32m+[0m[0m name_alias  = (known after apply)
    }

[1m  # module.switch["default"].aci_leaf_interface_profile.map["201"][0m will be created
[0m  [32m+[0m[0m resource "aci_leaf_interface_profile" "map" {
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m description = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "asgard-leaf201"
      [32m+[0m[0m name_alias  = (known after apply)
    }

[1m  # module.switch["default"].aci_leaf_interface_profile.map["202"][0m will be created
[0m  [32m+[0m[0m resource "aci_leaf_interface_profile" "map" {
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m description = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "asgard-leaf202"
      [32m+[0m[0m name_alias  = (known after apply)
    }

[1m  # module.switch["default"].aci_leaf_profile.map["101"][0m will be created
[0m  [32m+[0m[0m resource "aci_leaf_profile" "map" {
      [32m+[0m[0m annotation                   = "orchestrator:terraform"
      [32m+[0m[0m description                  = (known after apply)
      [32m+[0m[0m id                           = (known after apply)
      [32m+[0m[0m leaf_selector_ids            = (known after apply)
      [32m+[0m[0m name                         = "asgard-spine101"
      [32m+[0m[0m name_alias                   = (known after apply)
      [32m+[0m[0m node_block_ids               = (known after apply)
      [32m+[0m[0m relation_infra_rs_acc_port_p = (known after apply)
    }

[1m  # module.switch["default"].aci_leaf_profile.map["102"][0m will be created
[0m  [32m+[0m[0m resource "aci_leaf_profile" "map" {
      [32m+[0m[0m annotation                   = "orchestrator:terraform"
      [32m+[0m[0m description                  = (known after apply)
      [32m+[0m[0m id                           = (known after apply)
      [32m+[0m[0m leaf_selector_ids            = (known after apply)
      [32m+[0m[0m name                         = "asgard-spine102"
      [32m+[0m[0m name_alias                   = (known after apply)
      [32m+[0m[0m node_block_ids               = (known after apply)
      [32m+[0m[0m relation_infra_rs_acc_port_p = (known after apply)
    }

[1m  # module.switch["default"].aci_leaf_profile.map["201"][0m will be created
[0m  [32m+[0m[0m resource "aci_leaf_profile" "map" {
      [32m+[0m[0m annotation                   = "orchestrator:terraform"
      [32m+[0m[0m description                  = (known after apply)
      [32m+[0m[0m id                           = (known after apply)
      [32m+[0m[0m leaf_selector_ids            = (known after apply)
      [32m+[0m[0m name                         = "asgard-leaf201"
      [32m+[0m[0m name_alias                   = (known after apply)
      [32m+[0m[0m node_block_ids               = (known after apply)
      [32m+[0m[0m relation_infra_rs_acc_port_p = (known after apply)
    }

[1m  # module.switch["default"].aci_leaf_profile.map["202"][0m will be created
[0m  [32m+[0m[0m resource "aci_leaf_profile" "map" {
      [32m+[0m[0m annotation                   = "orchestrator:terraform"
      [32m+[0m[0m description                  = (known after apply)
      [32m+[0m[0m id                           = (known after apply)
      [32m+[0m[0m leaf_selector_ids            = (known after apply)
      [32m+[0m[0m name                         = "asgard-leaf202"
      [32m+[0m[0m name_alias                   = (known after apply)
      [32m+[0m[0m node_block_ids               = (known after apply)
      [32m+[0m[0m relation_infra_rs_acc_port_p = (known after apply)
    }

[1m  # module.switch["default"].aci_leaf_selector.map["101"][0m will be created
[0m  [32m+[0m[0m resource "aci_leaf_selector" "map" {
      [32m+[0m[0m annotation                       = "orchestrator:terraform"
      [32m+[0m[0m description                      = (known after apply)
      [32m+[0m[0m id                               = (known after apply)
      [32m+[0m[0m leaf_profile_dn                  = (known after apply)
      [32m+[0m[0m name                             = "asgard-spine101"
      [32m+[0m[0m name_alias                       = (known after apply)
      [32m+[0m[0m relation_infra_rs_acc_node_p_grp = "uni/infra/funcprof/accnodepgrp-default"
      [32m+[0m[0m switch_association_type          = "range"
    }

[1m  # module.switch["default"].aci_leaf_selector.map["102"][0m will be created
[0m  [32m+[0m[0m resource "aci_leaf_selector" "map" {
      [32m+[0m[0m annotation                       = "orchestrator:terraform"
      [32m+[0m[0m description                      = (known after apply)
      [32m+[0m[0m id                               = (known after apply)
      [32m+[0m[0m leaf_profile_dn                  = (known after apply)
      [32m+[0m[0m name                             = "asgard-spine102"
      [32m+[0m[0m name_alias                       = (known after apply)
      [32m+[0m[0m relation_infra_rs_acc_node_p_grp = "uni/infra/funcprof/accnodepgrp-default"
      [32m+[0m[0m switch_association_type          = "range"
    }

[1m  # module.switch["default"].aci_leaf_selector.map["201"][0m will be created
[0m  [32m+[0m[0m resource "aci_leaf_selector" "map" {
      [32m+[0m[0m annotation                       = "orchestrator:terraform"
      [32m+[0m[0m description                      = (known after apply)
      [32m+[0m[0m id                               = (known after apply)
      [32m+[0m[0m leaf_profile_dn                  = (known after apply)
      [32m+[0m[0m name                             = "asgard-leaf201"
      [32m+[0m[0m name_alias                       = (known after apply)
      [32m+[0m[0m relation_infra_rs_acc_node_p_grp = "uni/infra/funcprof/accnodepgrp-default"
      [32m+[0m[0m switch_association_type          = "range"
    }

[1m  # module.switch["default"].aci_leaf_selector.map["202"][0m will be created
[0m  [32m+[0m[0m resource "aci_leaf_selector" "map" {
      [32m+[0m[0m annotation                       = "orchestrator:terraform"
      [32m+[0m[0m description                      = (known after apply)
      [32m+[0m[0m id                               = (known after apply)
      [32m+[0m[0m leaf_profile_dn                  = (known after apply)
      [32m+[0m[0m name                             = "asgard-leaf202"
      [32m+[0m[0m name_alias                       = (known after apply)
      [32m+[0m[0m relation_infra_rs_acc_node_p_grp = "uni/infra/funcprof/accnodepgrp-default"
      [32m+[0m[0m switch_association_type          = "range"
    }

[1m  # module.switch["default"].aci_node_block.leaf_profile_blocks["101"][0m will be created
[0m  [32m+[0m[0m resource "aci_node_block" "leaf_profile_blocks" {
      [32m+[0m[0m annotation            = "orchestrator:terraform"
      [32m+[0m[0m description           = (known after apply)
      [32m+[0m[0m from_                 = "101"
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m name                  = "blk101-101"
      [32m+[0m[0m name_alias            = (known after apply)
      [32m+[0m[0m switch_association_dn = (known after apply)
      [32m+[0m[0m to_                   = "101"
    }

[1m  # module.switch["default"].aci_node_block.leaf_profile_blocks["102"][0m will be created
[0m  [32m+[0m[0m resource "aci_node_block" "leaf_profile_blocks" {
      [32m+[0m[0m annotation            = "orchestrator:terraform"
      [32m+[0m[0m description           = (known after apply)
      [32m+[0m[0m from_                 = "102"
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m name                  = "blk102-102"
      [32m+[0m[0m name_alias            = (known after apply)
      [32m+[0m[0m switch_association_dn = (known after apply)
      [32m+[0m[0m to_                   = "102"
    }

[1m  # module.switch["default"].aci_node_block.leaf_profile_blocks["201"][0m will be created
[0m  [32m+[0m[0m resource "aci_node_block" "leaf_profile_blocks" {
      [32m+[0m[0m annotation            = "orchestrator:terraform"
      [32m+[0m[0m description           = (known after apply)
      [32m+[0m[0m from_                 = "201"
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m name                  = "blk201-201"
      [32m+[0m[0m name_alias            = (known after apply)
      [32m+[0m[0m switch_association_dn = (known after apply)
      [32m+[0m[0m to_                   = "201"
    }

[1m  # module.switch["default"].aci_node_block.leaf_profile_blocks["202"][0m will be created
[0m  [32m+[0m[0m resource "aci_node_block" "leaf_profile_blocks" {
      [32m+[0m[0m annotation            = "orchestrator:terraform"
      [32m+[0m[0m description           = (known after apply)
      [32m+[0m[0m from_                 = "202"
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m name                  = "blk202-202"
      [32m+[0m[0m name_alias            = (known after apply)
      [32m+[0m[0m switch_association_dn = (known after apply)
      [32m+[0m[0m to_                   = "202"
    }

[1m  # module.switch["default"].aci_rest_managed.fabric_membership["asgard-leaf201"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "fabric_membership" {
      [32m+[0m[0m class_name = "fabricNodeIdentP"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "extPoolId" = "0"
          [32m+[0m[0m "name"      = "asgard-leaf201"
          [32m+[0m[0m "nodeId"    = "201"
          [32m+[0m[0m "nodeType"  = "unspecified"
          [32m+[0m[0m "podId"     = "1"
          [32m+[0m[0m "role"      = "leaf"
          [32m+[0m[0m "serial"    = "FDO232415ML"
        }
      [32m+[0m[0m dn         = "uni/controller/nodeidentpol/nodep-FDO232415ML"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.switch["default"].aci_rest_managed.fabric_membership["asgard-leaf202"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "fabric_membership" {
      [32m+[0m[0m class_name = "fabricNodeIdentP"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "extPoolId" = "0"
          [32m+[0m[0m "name"      = "asgard-leaf202"
          [32m+[0m[0m "nodeId"    = "202"
          [32m+[0m[0m "nodeType"  = "unspecified"
          [32m+[0m[0m "podId"     = "1"
          [32m+[0m[0m "role"      = "leaf"
          [32m+[0m[0m "serial"    = "FDO23191QGP"
        }
      [32m+[0m[0m dn         = "uni/controller/nodeidentpol/nodep-FDO23191QGP"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.switch["default"].aci_rest_managed.fabric_membership["asgard-spine101"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "fabric_membership" {
      [32m+[0m[0m class_name = "fabricNodeIdentP"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "extPoolId" = "0"
          [32m+[0m[0m "name"      = "asgard-spine101"
          [32m+[0m[0m "nodeId"    = "101"
          [32m+[0m[0m "nodeType"  = "unspecified"
          [32m+[0m[0m "podId"     = "1"
          [32m+[0m[0m "role"      = "spine"
          [32m+[0m[0m "serial"    = "FDO22010LGL"
        }
      [32m+[0m[0m dn         = "uni/controller/nodeidentpol/nodep-FDO22010LGL"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.switch["default"].aci_rest_managed.fabric_membership["asgard-spine102"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "fabric_membership" {
      [32m+[0m[0m class_name = "fabricNodeIdentP"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "extPoolId" = "0"
          [32m+[0m[0m "name"      = "asgard-spine102"
          [32m+[0m[0m "nodeId"    = "102"
          [32m+[0m[0m "nodeType"  = "unspecified"
          [32m+[0m[0m "podId"     = "1"
          [32m+[0m[0m "role"      = "spine"
          [32m+[0m[0m "serial"    = "FDO22220V7Y"
        }
      [32m+[0m[0m dn         = "uni/controller/nodeidentpol/nodep-FDO22220V7Y"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.switch["default"].aci_static_node_mgmt_address.map["101:inb:inband"][0m will be created
[0m  [32m+[0m[0m resource "aci_static_node_mgmt_address" "map" {
      [32m+[0m[0m addr              = "10.92.64.101/24"
      [32m+[0m[0m annotation        = "orchestrator:terraform"
      [32m+[0m[0m description       = (known after apply)
      [32m+[0m[0m gw                = "10.92.64.254"
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m management_epg_dn = "uni/tn-mgmt/mgmtp-default/inb-inband"
      [32m+[0m[0m t_dn              = "topology/pod-1/node-101"
      [32m+[0m[0m type              = "in_band"
      [32m+[0m[0m v6_addr           = (known after apply)
      [32m+[0m[0m v6_gw             = (known after apply)
    }

[1m  # module.switch["default"].aci_static_node_mgmt_address.map["101:oob:ooband"][0m will be created
[0m  [32m+[0m[0m resource "aci_static_node_mgmt_address" "map" {
      [32m+[0m[0m addr              = "192.168.64.11/23"
      [32m+[0m[0m annotation        = "orchestrator:terraform"
      [32m+[0m[0m description       = (known after apply)
      [32m+[0m[0m gw                = "192.168.64.1"
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m management_epg_dn = "uni/tn-mgmt/mgmtp-default/oob-ooband"
      [32m+[0m[0m t_dn              = "topology/pod-1/node-101"
      [32m+[0m[0m type              = "out_of_band"
      [32m+[0m[0m v6_addr           = (known after apply)
      [32m+[0m[0m v6_gw             = (known after apply)
    }

[1m  # module.switch["default"].aci_static_node_mgmt_address.map["102:inb:inband"][0m will be created
[0m  [32m+[0m[0m resource "aci_static_node_mgmt_address" "map" {
      [32m+[0m[0m addr              = "10.92.64.102/24"
      [32m+[0m[0m annotation        = "orchestrator:terraform"
      [32m+[0m[0m description       = (known after apply)
      [32m+[0m[0m gw                = "10.92.64.254"
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m management_epg_dn = "uni/tn-mgmt/mgmtp-default/inb-inband"
      [32m+[0m[0m t_dn              = "topology/pod-1/node-102"
      [32m+[0m[0m type              = "in_band"
      [32m+[0m[0m v6_addr           = (known after apply)
      [32m+[0m[0m v6_gw             = (known after apply)
    }

[1m  # module.switch["default"].aci_static_node_mgmt_address.map["102:oob:ooband"][0m will be created
[0m  [32m+[0m[0m resource "aci_static_node_mgmt_address" "map" {
      [32m+[0m[0m addr              = "192.168.64.12/23"
      [32m+[0m[0m annotation        = "orchestrator:terraform"
      [32m+[0m[0m description       = (known after apply)
      [32m+[0m[0m gw                = "192.168.64.1"
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m management_epg_dn = "uni/tn-mgmt/mgmtp-default/oob-ooband"
      [32m+[0m[0m t_dn              = "topology/pod-1/node-102"
      [32m+[0m[0m type              = "out_of_band"
      [32m+[0m[0m v6_addr           = (known after apply)
      [32m+[0m[0m v6_gw             = (known after apply)
    }

[1m  # module.switch["default"].aci_static_node_mgmt_address.map["201:inb:inband"][0m will be created
[0m  [32m+[0m[0m resource "aci_static_node_mgmt_address" "map" {
      [32m+[0m[0m addr              = "10.92.64.201/24"
      [32m+[0m[0m annotation        = "orchestrator:terraform"
      [32m+[0m[0m description       = (known after apply)
      [32m+[0m[0m gw                = "10.92.64.254"
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m management_epg_dn = "uni/tn-mgmt/mgmtp-default/inb-inband"
      [32m+[0m[0m t_dn              = "topology/pod-1/node-201"
      [32m+[0m[0m type              = "in_band"
      [32m+[0m[0m v6_addr           = (known after apply)
      [32m+[0m[0m v6_gw             = (known after apply)
    }

[1m  # module.switch["default"].aci_static_node_mgmt_address.map["201:oob:ooband"][0m will be created
[0m  [32m+[0m[0m resource "aci_static_node_mgmt_address" "map" {
      [32m+[0m[0m addr              = "192.168.64.9/23"
      [32m+[0m[0m annotation        = "orchestrator:terraform"
      [32m+[0m[0m description       = (known after apply)
      [32m+[0m[0m gw                = "192.168.64.1"
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m management_epg_dn = "uni/tn-mgmt/mgmtp-default/oob-ooband"
      [32m+[0m[0m t_dn              = "topology/pod-1/node-201"
      [32m+[0m[0m type              = "out_of_band"
      [32m+[0m[0m v6_addr           = (known after apply)
      [32m+[0m[0m v6_gw             = (known after apply)
    }

[1m  # module.switch["default"].aci_static_node_mgmt_address.map["202:inb:inband"][0m will be created
[0m  [32m+[0m[0m resource "aci_static_node_mgmt_address" "map" {
      [32m+[0m[0m addr              = "10.92.0.202/24"
      [32m+[0m[0m annotation        = "orchestrator:terraform"
      [32m+[0m[0m description       = (known after apply)
      [32m+[0m[0m gw                = "10.92.0.254"
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m management_epg_dn = "uni/tn-mgmt/mgmtp-default/inb-inband"
      [32m+[0m[0m t_dn              = "topology/pod-1/node-202"
      [32m+[0m[0m type              = "in_band"
      [32m+[0m[0m v6_addr           = (known after apply)
      [32m+[0m[0m v6_gw             = (known after apply)
    }

[1m  # module.switch["default"].aci_static_node_mgmt_address.map["202:oob:ooband"][0m will be created
[0m  [32m+[0m[0m resource "aci_static_node_mgmt_address" "map" {
      [32m+[0m[0m addr              = "192.168.64.10/23"
      [32m+[0m[0m annotation        = "orchestrator:terraform"
      [32m+[0m[0m description       = (known after apply)
      [32m+[0m[0m gw                = "192.168.64.1"
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m management_epg_dn = "uni/tn-mgmt/mgmtp-default/oob-ooband"
      [32m+[0m[0m t_dn              = "topology/pod-1/node-202"
      [32m+[0m[0m type              = "out_of_band"
      [32m+[0m[0m v6_addr           = (known after apply)
      [32m+[0m[0m v6_gw             = (known after apply)
    }

[1m  # module.switch["default"].aci_vpc_explicit_protection_group.vpc_domains["201"][0m will be created
[0m  [32m+[0m[0m resource "aci_vpc_explicit_protection_group" "vpc_domains" {
      [32m+[0m[0m annotation                       = "orchestrator:terraform"
      [32m+[0m[0m id                               = (known after apply)
      [32m+[0m[0m name                             = "asgard-leaf201-202"
      [32m+[0m[0m switch1                          = "201"
      [32m+[0m[0m switch2                          = "202"
      [32m+[0m[0m vpc_domain_policy                = "default"
      [32m+[0m[0m vpc_explicit_protection_group_id = "201"
    }

[1m  # module.system_settings["default"].aci_coop_policy.coop_group["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_coop_policy" "coop_group" {
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m description = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name_alias  = (known after apply)
      [32m+[0m[0m type        = "strict"
    }

[1m  # module.system_settings["default"].aci_encryption_key.global_aes_passphrase["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_encryption_key" "global_aes_passphrase" {
      [32m+[0m[0m annotation                        = "orchestrator:terraform"
      [32m+[0m[0m clear_encryption_key              = "no"
      [32m+[0m[0m description                       = (known after apply)
      [32m+[0m[0m id                                = (known after apply)
      [32m+[0m[0m name_alias                        = (known after apply)
      [32m+[0m[0m passphrase                        = (sensitive value)
      [32m+[0m[0m passphrase_key_derivation_version = "v1"
      [32m+[0m[0m strong_encryption_enabled         = "yes"
    }

[1m  # module.system_settings["default"].aci_endpoint_ip_aging_profile.ip_aging["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_endpoint_ip_aging_profile" "ip_aging" {
      [32m+[0m[0m admin_st    = "enabled"
      [32m+[0m[0m annotation  = "orchestrator:terraform"
      [32m+[0m[0m description = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name_alias  = (known after apply)
    }

[1m  # module.system_settings["default"].aci_endpoint_loop_protection.ep_loop_protection["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_endpoint_loop_protection" "ep_loop_protection" {
      [32m+[0m[0m action            = [
          [32m+[0m[0m "port-disable",
        ]
      [32m+[0m[0m admin_st          = "enabled"
      [32m+[0m[0m annotation        = "orchestrator:terraform"
      [32m+[0m[0m description       = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m loop_detect_intvl = "60"
      [32m+[0m[0m loop_detect_mult  = "4"
      [32m+[0m[0m name_alias        = (known after apply)
    }

[1m  # module.system_settings["default"].aci_isis_domain_policy.isis_policy["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_isis_domain_policy" "isis_policy" {
      [32m+[0m[0m annotation          = "orchestrator:terraform"
      [32m+[0m[0m description         = (known after apply)
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m isis_level_name     = (known after apply)
      [32m+[0m[0m isis_level_type     = "l1"
      [32m+[0m[0m lsp_fast_flood      = "enabled"
      [32m+[0m[0m lsp_gen_init_intvl  = "50"
      [32m+[0m[0m lsp_gen_max_intvl   = "8000"
      [32m+[0m[0m lsp_gen_sec_intvl   = "50"
      [32m+[0m[0m mtu                 = "1492"
      [32m+[0m[0m name_alias          = (known after apply)
      [32m+[0m[0m redistrib_metric    = "63"
      [32m+[0m[0m spf_comp_init_intvl = "50"
      [32m+[0m[0m spf_comp_max_intvl  = "8000"
      [32m+[0m[0m spf_comp_sec_intvl  = "50"
    }

[1m  # module.system_settings["default"].aci_mgmt_preference.apic_connectivity_preference["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_mgmt_preference" "apic_connectivity_preference" {
      [32m+[0m[0m annotation     = "orchestrator:terraform"
      [32m+[0m[0m description    = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m interface_pref = "inband"
      [32m+[0m[0m name_alias     = (known after apply)
    }

[1m  # module.system_settings["default"].aci_port_tracking.port_tracking["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_port_tracking" "port_tracking" {
      [32m+[0m[0m admin_st           = "on"
      [32m+[0m[0m annotation         = "orchestrator:terraform"
      [32m+[0m[0m delay              = "120"
      [32m+[0m[0m description        = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m include_apic_ports = "no"
      [32m+[0m[0m minlinks           = "0"
      [32m+[0m[0m name_alias         = (known after apply)
    }

[1m  # module.system_settings["default"].aci_rest.bgp_instance["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest" "bgp_instance" {
      [32m+[0m[0m class_name = "bgpInstPol"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "annotation" = "orchestrator:terraform"
        }
      [32m+[0m[0m dn         = (known after apply)
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m path       = "/api/mo/uni/fabric/bgpInstP-default.json"
    }

[1m  # module.system_settings["default"].aci_rest.endpoint_controls["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest" "endpoint_controls" {
      [32m+[0m[0m class_name = "bgpInstPol"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "annotation" = "orchestrator:terraform"
        }
      [32m+[0m[0m dn         = (known after apply)
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m path       = "/api/mo/uni/fabric/bgpInstP-default.json"
    }

[1m  # module.system_settings["default"].aci_rest_managed.bgp_autonomous_system_number["65501"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "bgp_autonomous_system_number" {
      [32m+[0m[0m class_name = "bgpAsP"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "asn" = "65501"
        }
      [32m+[0m[0m dn         = "uni/fabric/bgpInstP-default/as"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.system_settings["default"].aci_rest_managed.fabric_wide_settings_5_2_3["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "fabric_wide_settings_5_2_3" {
      [32m+[0m[0m class_name = "infraSetPol"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "domainValidation"               = "yes"
          [32m+[0m[0m "enforceSubnetCheck"             = "yes"
          [32m+[0m[0m "leafOpflexpAuthenticateClients" = "yes"
          [32m+[0m[0m "leafOpflexpUseSsl"              = "yes"
          [32m+[0m[0m "opflexpAuthenticateClients"     = "yes"
          [32m+[0m[0m "opflexpSslProtocols"            = "TLSv1.2"
          [32m+[0m[0m "opflexpUseSsl"                  = "yes"
          [32m+[0m[0m "reallocateGipo"                 = "no"
          [32m+[0m[0m "restrictInfraVLANTraffic"       = "no"
          [32m+[0m[0m "unicastXrEpLearnDisable"        = "yes"
          [32m+[0m[0m "validateOverlappingVlans"       = "no"
        }
      [32m+[0m[0m dn         = "uni/infra/settings"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.system_settings["default"].aci_rest_managed.ptp_and_latency_measurement["default"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "ptp_and_latency_measurement" {
      [32m+[0m[0m class_name = "latencyPtpMode"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "fabAnnounceIntvl"   = "1"
          [32m+[0m[0m "fabAnnounceTimeout" = "3"
          [32m+[0m[0m "fabDelayIntvl"      = "-2"
          [32m+[0m[0m "fabProfileTemplate" = "aes67"
          [32m+[0m[0m "fabSyncIntvl"       = "-3"
          [32m+[0m[0m "globalDomain"       = "0"
          [32m+[0m[0m "prio1"              = "255"
          [32m+[0m[0m "prio2"              = "255"
          [32m+[0m[0m "state"              = "enabled"
        }
      [32m+[0m[0m dn         = "uni/fabric/ptpmode"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.system_settings["default"].aci_rest_managed.route_reflector_nodes["Pod-1:Node-101"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "route_reflector_nodes" {
      [32m+[0m[0m class_name = "bgpRRNodePEp"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "id"    = "101"
          [32m+[0m[0m "podId" = "1"
        }
      [32m+[0m[0m dn         = "uni/fabric/bgpInstP-default/rr/node-101"
      [32m+[0m[0m id         = (known after apply)
    }

[1m  # module.system_settings["default"].aci_rest_managed.route_reflector_nodes["Pod-1:Node-102"][0m will be created
[0m  [32m+[0m[0m resource "aci_rest_managed" "route_reflector_nodes" {
      [32m+[0m[0m class_name = "bgpRRNodePEp"
      [32m+[0m[0m content    = {
          [32m+[0m[0m "id"    = "102"
          [32m+[0m[0m "podId" = "1"
        }
      [32m+[0m[0m dn         = "uni/fabric/bgpInstP-default/rr/node-102"
      [32m+[0m[0m id         = (known after apply)
    }

[1mPlan:[0m 534 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m access           = {
      [32m+[0m[0m default = {
          [32m+[0m[0m aaep_to_epgs                   = {
              [32m+[0m[0m l3out    = {
                  [32m+[0m[0m access_or_native_vlan = 1
                  [32m+[0m[0m allowed_vlans         = "11-13"
                  [32m+[0m[0m name                  = "l3out"
                }
              [32m+[0m[0m trunkAep = {
                  [32m+[0m[0m access_or_native_vlan = 1
                  [32m+[0m[0m allowed_vlans         = "100-299,1101-1110"
                  [32m+[0m[0m name                  = "trunkAep"
                }
            }
          [32m+[0m[0m global                         = {
              [32m+[0m[0m attachable_access_entity_profiles = {
                  [32m+[0m[0m l3out    = (known after apply)
                  [32m+[0m[0m trunkAep = (known after apply)
                }
              [32m+[0m[0m dhcp_relay                        = {}
              [32m+[0m[0m error_disabled_recovery_policy    = {
                  [32m+[0m[0m default = (known after apply)
                }
              [32m+[0m[0m mcp_instance_policy               = {
                  [32m+[0m[0m default = (known after apply)
                }
              [32m+[0m[0m qos_class                         = {
                  [32m+[0m[0m default = (known after apply)
                }
            }
          [32m+[0m[0m interface                      = {
              [32m+[0m[0m leaf_interfaces  = {
                  [32m+[0m[0m policy_groups = {
                      [32m+[0m[0m access   = {
                          [32m+[0m[0m trunkPort = (known after apply)
                        }
                      [32m+[0m[0m breakout = {
                          [32m+[0m[0m "10g-4x" = (known after apply)
                          [32m+[0m[0m "25g-4x" = (known after apply)
                        }
                      [32m+[0m[0m bundle   = {
                          [32m+[0m[0m vpc03 = (known after apply)
                          [32m+[0m[0m vpc04 = (known after apply)
                        }
                    }
                }
              [32m+[0m[0m spine_interfaces = {
                  [32m+[0m[0m policy_groups = {
                      [32m+[0m[0m default = (known after apply)
                    }
                }
            }
          [32m+[0m[0m physical_and_external_domains  = {
              [32m+[0m[0m l3_domains       = {
                  [32m+[0m[0m l3out = (known after apply)
                }
              [32m+[0m[0m physical_domains = {
                  [32m+[0m[0m access = (known after apply)
                }
            }
          [32m+[0m[0m policies                       = {
              [32m+[0m[0m interface = {
                  [32m+[0m[0m cdp_interface           = {
                      [32m+[0m[0m cdpDisabled = (known after apply)
                      [32m+[0m[0m cdpEnabled  = (known after apply)
                    }
                  [32m+[0m[0m fibre_channel_interface = {}
                  [32m+[0m[0m l2_interface            = {
                      [32m+[0m[0m portLocal = (known after apply)
                    }
                  [32m+[0m[0m link_level              = {
                      [32m+[0m[0m "100GAuto"  = (known after apply)
                      [32m+[0m[0m "100GnoNg"  = (known after apply)
                      [32m+[0m[0m "100MAuto"  = (known after apply)
                      [32m+[0m[0m "100MnoNg"  = (known after apply)
                      [32m+[0m[0m "10GAuto"   = (known after apply)
                      [32m+[0m[0m "10GnoNg"   = (known after apply)
                      [32m+[0m[0m "1GAuto"    = (known after apply)
                      [32m+[0m[0m "1GnoNg"    = (known after apply)
                      [32m+[0m[0m "200GAuto"  = (known after apply)
                      [32m+[0m[0m "200GnoNg"  = (known after apply)
                      [32m+[0m[0m "25GAuto"   = (known after apply)
                      [32m+[0m[0m "25GnoNg"   = (known after apply)
                      [32m+[0m[0m "400GAuto"  = (known after apply)
                      [32m+[0m[0m "400GnoNg"  = (known after apply)
                      [32m+[0m[0m "40GAuto"   = (known after apply)
                      [32m+[0m[0m "40GnoNg"   = (known after apply)
                      [32m+[0m[0m "50GAuto"   = (known after apply)
                      [32m+[0m[0m "50GnoNg"   = (known after apply)
                      [32m+[0m[0m inheritAuto = (known after apply)
                      [32m+[0m[0m inheritnoNg = (known after apply)
                    }
                  [32m+[0m[0m lldp_interface          = {
                      [32m+[0m[0m lldpDisabled = (known after apply)
                      [32m+[0m[0m lldpEnabled  = (known after apply)
                      [32m+[0m[0m lldpRx       = (known after apply)
                      [32m+[0m[0m lldpTx       = (known after apply)
                    }
                  [32m+[0m[0m mcp_interface           = {
                      [32m+[0m[0m mcpDisabled = (known after apply)
                      [32m+[0m[0m mcpEnabled  = (known after apply)
                    }
                  [32m+[0m[0m port_channel            = {
                      [32m+[0m[0m lacpActive    = (known after apply)
                      [32m+[0m[0m lacpPassive   = (known after apply)
                      [32m+[0m[0m macPin        = (known after apply)
                      [32m+[0m[0m macPinNicLoad = (known after apply)
                      [32m+[0m[0m static        = (known after apply)
                    }
                  [32m+[0m[0m port_security           = {
                      [32m+[0m[0m default = (known after apply)
                    }
                  [32m+[0m[0m spanning_tree_interface = {
                      [32m+[0m[0m bpduFG = (known after apply)
                      [32m+[0m[0m bpduFt = (known after apply)
                      [32m+[0m[0m bpduGd = (known after apply)
                    }
                }
            }
          [32m+[0m[0m pools                          = {
              [32m+[0m[0m vlan = {
                  [32m+[0m[0m all-vlans = (known after apply)
                }
            }
          [32m+[0m[0m switches                       = {
              [32m+[0m[0m leaf_switches  = {
                  [32m+[0m[0m policy_groups = {
                      [32m+[0m[0m default = (known after apply)
                    }
                }
              [32m+[0m[0m spine_switches = {
                  [32m+[0m[0m policy_groups = {
                      [32m+[0m[0m default = (known after apply)
                    }
                }
            }
          [32m+[0m[0m virtual_networking-vmm_domains = {
              [32m+[0m[0m controllers      = {
                  [32m+[0m[0m "Asgard:vcenter.rich.ciscolabs.com" = (known after apply)
                }
              [32m+[0m[0m credentials      = {
                  [32m+[0m[0m Asgard = (known after apply)
                }
              [32m+[0m[0m vmm_domains      = {
                  [32m+[0m[0m Asgard = (known after apply)
                }
              [32m+[0m[0m vswitch_policies = {
                  [32m+[0m[0m Asgard = (known after apply)
                }
            }
        }
    }
  [32m+[0m[0m admin            = {
      [32m+[0m[0m default = {
          [32m+[0m[0m aaa                      = {
              [32m+[0m[0m authentication = {
                  [32m+[0m[0m authentication_default_settings = {
                      [32m+[0m[0m console_authentication = {
                          [32m+[0m[0m default = (known after apply)
                        }
                      [32m+[0m[0m default_authentication = {
                          [32m+[0m[0m default = (known after apply)
                        }
                      [32m+[0m[0m remote_authentication  = {
                          [32m+[0m[0m default = (known after apply)
                        }
                    }
                  [32m+[0m[0m login_domain_providers          = {
                      [32m+[0m[0m "10.101.128.71:tacacs" = (known after apply)
                      [32m+[0m[0m "10.101.128.72:tacacs" = (known after apply)
                    }
                  [32m+[0m[0m login_domains                   = {
                      [32m+[0m[0m RICH = (known after apply)
                    }
                  [32m+[0m[0m providers                       = {
                      [32m+[0m[0m radius = {
                          [32m+[0m[0m duo_provider_groups    = {}
                          [32m+[0m[0m radius_provider_groups = {}
                          [32m+[0m[0m radius_providers       = {}
                          [32m+[0m[0m rsa_providers          = {}
                        }
                      [32m+[0m[0m tacacs = {
                          [32m+[0m[0m tacacs_accounting              = {
                              [32m+[0m[0m RICH = (known after apply)
                            }
                          [32m+[0m[0m tacacs_accounting_destinations = {
                              [32m+[0m[0m "10.101.128.71" = (known after apply)
                              [32m+[0m[0m "10.101.128.72" = (known after apply)
                            }
                          [32m+[0m[0m tacacs_provider_groups         = {
                              [32m+[0m[0m RICH = (known after apply)
                            }
                          [32m+[0m[0m tacacs_providers               = {
                              [32m+[0m[0m "10.101.128.71" = (known after apply)
                              [32m+[0m[0m "10.101.128.72" = (known after apply)
                            }
                          [32m+[0m[0m tacacs_sources                 = {
                              [32m+[0m[0m RICH = (known after apply)
                            }
                        }
                    }
                }
              [32m+[0m[0m security       = {
                  [32m+[0m[0m default = (known after apply)
                }
            }
          [32m+[0m[0m external_data_collectors = {
              [32m+[0m[0m smart_callhome = {
                  [32m+[0m[0m destination_group_properties = {}
                  [32m+[0m[0m destination_groups           = {}
                  [32m+[0m[0m destinations                 = {}
                  [32m+[0m[0m smtp_server                  = {}
                  [32m+[0m[0m source                       = {}
                }
              [32m+[0m[0m syslog         = {
                  [32m+[0m[0m destination_groups  = {
                      [32m+[0m[0m default = (known after apply)
                    }
                  [32m+[0m[0m remote_destinations = {
                      [32m+[0m[0m "default:10.101.128.24" = (known after apply)
                      [32m+[0m[0m "default:10.101.128.25" = (known after apply)
                    }
                  [32m+[0m[0m sources             = {
                      [32m+[0m[0m default = (known after apply)
                    }
                }
            }
          [32m+[0m[0m firmware                 = {
              [32m+[0m[0m switches = {
                  [32m+[0m[0m firmware_group          = {
                      [32m+[0m[0m MG_A = (known after apply)
                      [32m+[0m[0m MG_B = (known after apply)
                      [32m+[0m[0m MG_C = (known after apply)
                    }
                  [32m+[0m[0m firmware_group_nodes    = {
                      [32m+[0m[0m "MG_A:101" = (known after apply)
                      [32m+[0m[0m "MG_A:201" = (known after apply)
                      [32m+[0m[0m "MG_B:202" = (known after apply)
                      [32m+[0m[0m "MG_C:102" = (known after apply)
                    }
                  [32m+[0m[0m maintenance_group       = {
                      [32m+[0m[0m MG_A = (known after apply)
                      [32m+[0m[0m MG_B = (known after apply)
                      [32m+[0m[0m MG_C = (known after apply)
                    }
                  [32m+[0m[0m maintenance_group_nodes = {
                      [32m+[0m[0m "MG_A:101" = (known after apply)
                      [32m+[0m[0m "MG_A:201" = (known after apply)
                      [32m+[0m[0m "MG_B:202" = (known after apply)
                      [32m+[0m[0m "MG_C:102" = (known after apply)
                    }
                  [32m+[0m[0m maintenance_policy      = {
                      [32m+[0m[0m MG_A = (known after apply)
                      [32m+[0m[0m MG_B = (known after apply)
                      [32m+[0m[0m MG_C = (known after apply)
                    }
                }
            }
          [32m+[0m[0m import_export            = {
              [32m+[0m[0m configuration_export = {
                  [32m+[0m[0m "lnx2.rich.ciscolabs.com" = (known after apply)
                }
              [32m+[0m[0m recurring_window     = {
                  [32m+[0m[0m Every24Hours = (known after apply)
                }
              [32m+[0m[0m remote_locations     = {
                  [32m+[0m[0m "lnx2.rich.ciscolabs.com" = (known after apply)
                }
              [32m+[0m[0m schedulers           = {
                  [32m+[0m[0m Every24Hours = (known after apply)
                }
            }
        }
    }
  [32m+[0m[0m built_in_tenants = {
      [32m+[0m[0m mgmt = {
          [32m+[0m[0m application_profiles         = {
              [32m+[0m[0m application_epgs     = {
                  [32m+[0m[0m inband = (known after apply)
                  [32m+[0m[0m ooband = (known after apply)
                }
              [32m+[0m[0m application_profiles = {
                  [32m+[0m[0m inb = (known after apply)
                }
              [32m+[0m[0m epg_to_aaep          = {}
              [32m+[0m[0m epg_to_contracts     = {
                  [32m+[0m[0m "inb:inband:consumed:inband_out" = (known after apply)
                  [32m+[0m[0m "inb:inband:provided:inband_in"  = (known after apply)
                  [32m+[0m[0m "inb:ooband:provided:ooband_in"  = (known after apply)
                }
              [32m+[0m[0m epg_to_domains       = {}
              [32m+[0m[0m epg_to_static_paths  = {}
            }
          [32m+[0m[0m contracts                    = {
              [32m+[0m[0m contracts = {
                  [32m+[0m[0m oob_contracts      = {
                      [32m+[0m[0m ooband_in  = (known after apply)
                      [32m+[0m[0m ooband_out = (known after apply)
                    }
                  [32m+[0m[0m standard_contracts = {
                      [32m+[0m[0m inband_in  = (known after apply)
                      [32m+[0m[0m inband_out = (known after apply)
                    }
                  [32m+[0m[0m taboo_contracts    = {}
                }
              [32m+[0m[0m filters   = {
                  [32m+[0m[0m filter_entries = {
                      [32m+[0m[0m "mgmt_in:https"    = (known after apply)
                      [32m+[0m[0m "mgmt_in:icmp"     = (known after apply)
                      [32m+[0m[0m "mgmt_in:nd_2022"  = (known after apply)
                      [32m+[0m[0m "mgmt_in:nd_30000" = (known after apply)
                      [32m+[0m[0m "mgmt_in:nd_5640"  = (known after apply)
                      [32m+[0m[0m "mgmt_in:nd_5965"  = (known after apply)
                      [32m+[0m[0m "mgmt_in:nd_8884"  = (known after apply)
                      [32m+[0m[0m "mgmt_in:nd_9989"  = (known after apply)
                      [32m+[0m[0m "mgmt_in:snmp"     = (known after apply)
                      [32m+[0m[0m "mgmt_in:ssh"      = (known after apply)
                      [32m+[0m[0m "mgmt_out:icmp"    = (known after apply)
                      [32m+[0m[0m "mgmt_out:ip"      = (known after apply)
                    }
                  [32m+[0m[0m filters        = {
                      [32m+[0m[0m mgmt_in  = (known after apply)
                      [32m+[0m[0m mgmt_out = (known after apply)
                    }
                }
            }
          [32m+[0m[0m networking                   = {
              [32m+[0m[0m bridge_domain_subnets = {
                  [32m+[0m[0m "10.92.64.0:10.92.64.254/24" = (known after apply)
                }
              [32m+[0m[0m bridge_domains        = {
                  [32m+[0m[0m "10.92.64.0" = (known after apply)
                }
              [32m+[0m[0m l3outs                = {}
              [32m+[0m[0m vrf                   = {
                  [32m+[0m[0m inb = (known after apply)
                }
            }
          [32m+[0m[0m nexus_dashboard_orchestrator = {
              [32m+[0m[0m schema_sites = {}
              [32m+[0m[0m schemas      = {}
              [32m+[0m[0m sites        = {}
              [32m+[0m[0m users        = {}
            }
          [32m+[0m[0m policies                     = {
              [32m+[0m[0m protocol = {
                  [32m+[0m[0m bfd                          = {}
                  [32m+[0m[0m bgp                          = {
                      [32m+[0m[0m bgp_address_family_context = {}
                      [32m+[0m[0m bgp_best_path              = {}
                      [32m+[0m[0m bgp_peer_prefix            = {}
                      [32m+[0m[0m bgp_route_summarization    = {}
                      [32m+[0m[0m bgp_timers                 = {}
                    }
                  [32m+[0m[0m dhcp                         = {
                      [32m+[0m[0m dhcp_option = {}
                      [32m+[0m[0m dhcp_relay  = {}
                    }
                  [32m+[0m[0m endpoint_retention           = {}
                  [32m+[0m[0m hsrp                         = {
                      [32m+[0m[0m hsrp_group     = {}
                      [32m+[0m[0m hsrp_interface = {}
                    }
                  [32m+[0m[0m ip_sla                       = {
                      [32m+[0m[0m hsrp_interface    = {}
                      [32m+[0m[0m ip_sla_monitoring = {}
                    }
                  [32m+[0m[0m l4_l7_pbr                    = {}
                  [32m+[0m[0m l4_l7_pbr_destinations       = {}
                  [32m+[0m[0m l4_l7_redirect_health_groups = {}
                  [32m+[0m[0m ospf                         = {
                      [32m+[0m[0m ospf_interface           = {}
                      [32m+[0m[0m ospf_route_summarization = {}
                      [32m+[0m[0m ospf_timers              = {}
                    }
                }
            }
          [32m+[0m[0m tenants                      = {
              [32m+[0m[0m mgmt = (known after apply)
            }
        }
    }
  [32m+[0m[0m fabric           = {
      [32m+[0m[0m default = {
          [32m+[0m[0m pods     = {
              [32m+[0m[0m policy_groups = {
                  [32m+[0m[0m default = (known after apply)
                }
              [32m+[0m[0m profiles      = {
                  [32m+[0m[0m default = (known after apply)
                }
            }
          [32m+[0m[0m policies = {
              [32m+[0m[0m global     = {
                  [32m+[0m[0m dns_profiles               = {
                      [32m+[0m[0m default = (known after apply)
                    }
                  [32m+[0m[0m dns_profiles_dns_domains   = {
                      [32m+[0m[0m "default:cisco.com"          = (known after apply)
                      [32m+[0m[0m "default:rich.ciscolabs.com" = (known after apply)
                    }
                  [32m+[0m[0m dns_profiles_dns_providers = {
                      [32m+[0m[0m "default:10.101.128.15" = (known after apply)
                      [32m+[0m[0m "default:10.101.128.16" = (known after apply)
                    }
                }
              [32m+[0m[0m interface  = {
                  [32m+[0m[0m l3_interface = {
                      [32m+[0m[0m default = (known after apply)
                    }
                }
              [32m+[0m[0m monitoring = {
                  [32m+[0m[0m fabric_node_controls = {
                      [32m+[0m[0m default = (known after apply)
                    }
                }
              [32m+[0m[0m pod        = {
                  [32m+[0m[0m date_and_time                           = {
                      [32m+[0m[0m default = (known after apply)
                    }
                  [32m+[0m[0m date_and_time_format                    = {
                      [32m+[0m[0m default = (known after apply)
                    }
                  [32m+[0m[0m date_and_time_servers                   = {
                      [32m+[0m[0m "default:10.101.128.15" = (known after apply)
                      [32m+[0m[0m "default:10.101.128.16" = (known after apply)
                    }
                  [32m+[0m[0m snmp_destination_groups                 = {
                      [32m+[0m[0m default = (known after apply)
                    }
                  [32m+[0m[0m snmp_policies                           = {
                      [32m+[0m[0m default = (known after apply)
                    }
                  [32m+[0m[0m snmp_policy_client_group_client_servers = {
                      [32m+[0m[0m "default:ooband:10.101.128.24" = (known after apply)
                      [32m+[0m[0m "default:ooband:10.101.128.25" = (known after apply)
                    }
                  [32m+[0m[0m snmp_policy_client_groups               = {
                      [32m+[0m[0m "default:ooband" = (known after apply)
                    }
                  [32m+[0m[0m snmp_policy_trap_servers                = {
                      [32m+[0m[0m "default:10.101.128.24" = (known after apply)
                      [32m+[0m[0m "default:10.101.128.25" = (known after apply)
                    }
                  [32m+[0m[0m snmp_policy_users                       = {
                      [32m+[0m[0m "default:cisco_user1" = (known after apply)
                    }
                }
            }
        }
    }
  [32m+[0m[0m switch           = {
      [32m+[0m[0m default = {
          [32m+[0m[0m fabric_inventory         = {
              [32m+[0m[0m fabric_membership = {
                  [32m+[0m[0m asgard-leaf201  = (known after apply)
                  [32m+[0m[0m asgard-leaf202  = (known after apply)
                  [32m+[0m[0m asgard-spine101 = (known after apply)
                  [32m+[0m[0m asgard-spine102 = (known after apply)
                }
            }
          [32m+[0m[0m interface_profiles       = {
              [32m+[0m[0m leaf_interface_profiles  = {
                  [32m+[0m[0m "101" = (known after apply)
                  [32m+[0m[0m "102" = (known after apply)
                  [32m+[0m[0m "201" = (known after apply)
                  [32m+[0m[0m "202" = (known after apply)
                }
              [32m+[0m[0m spine_interface_profiles = {}
            }
          [32m+[0m[0m static_node_mgmt_address = {
              [32m+[0m[0m "101:inb:inband" = (known after apply)
              [32m+[0m[0m "101:oob:ooband" = (known after apply)
              [32m+[0m[0m "102:inb:inband" = (known after apply)
              [32m+[0m[0m "102:oob:ooband" = (known after apply)
              [32m+[0m[0m "201:inb:inband" = (known after apply)
              [32m+[0m[0m "201:oob:ooband" = (known after apply)
              [32m+[0m[0m "202:inb:inband" = (known after apply)
              [32m+[0m[0m "202:oob:ooband" = (known after apply)
            }
          [32m+[0m[0m switches                 = {
              [32m+[0m[0m leaf_profiles  = {
                  [32m+[0m[0m "101" = (known after apply)
                  [32m+[0m[0m "102" = (known after apply)
                  [32m+[0m[0m "201" = (known after apply)
                  [32m+[0m[0m "202" = (known after apply)
                }
              [32m+[0m[0m spine_profiles = {}
            }
          [32m+[0m[0m vpc_domains              = {
              [32m+[0m[0m "201" = (known after apply)
            }
        }
    }
  [32m+[0m[0m system_settings  = {
      [32m+[0m[0m default = {
          [32m+[0m[0m apic_connectivity_preference   = {
              [32m+[0m[0m default = (known after apply)
            }
          [32m+[0m[0m bgp_route_reflector            = {
              [32m+[0m[0m autonomous_system_number = {
                  [32m+[0m[0m "65501" = (known after apply)
                }
              [32m+[0m[0m route_reflector_nodes    = {
                  [32m+[0m[0m "Pod-1:Node-101" = (known after apply)
                  [32m+[0m[0m "Pod-1:Node-102" = (known after apply)
                }
            }
          [32m+[0m[0m coop_group                     = {
              [32m+[0m[0m default = (known after apply)
            }
          [32m+[0m[0m endpoint_controls              = {
              [32m+[0m[0m ep_loop_protection = {
                  [32m+[0m[0m default = (known after apply)
                }
              [32m+[0m[0m ip_aging           = {
                  [32m+[0m[0m default = (known after apply)
                }
              [32m+[0m[0m rouge_ep_control   = {}
            }
          [32m+[0m[0m fabric_wide_settings           = {
              [32m+[0m[0m default = (known after apply)
            }
          [32m+[0m[0m global_aes_encryption_settings = {
              [32m+[0m[0m default = (known after apply)
            }
          [32m+[0m[0m isis_policy                    = {
              [32m+[0m[0m default = (known after apply)
            }
          [32m+[0m[0m port_tracking                  = {
              [32m+[0m[0m default = (known after apply)
            }
          [32m+[0m[0m ptp_and_latency_measurement    = {
              [32m+[0m[0m default = (known after apply)
            }
        }
    }
  [32m+[0m[0m tenants          = {}
[90m
─────────────────────────────────────────────────────────────────────────────[0m

Saved the plan to: main.plan

To perform exactly these actions, run the following command to apply:
    terraform apply "main.plan"
