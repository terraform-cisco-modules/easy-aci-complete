[0m[1mdata.utils_yaml_merge.model: Reading...[0m[0m
[0m[1mdata.utils_yaml_merge.model: Read complete after 0s[0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # module.tenants["common"].aci_any.vz_any["prod"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aci_any" "vz_any" {
      [32m+[0m [0m[1m[0mannotation[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m  = "prod VRF"
      [32m+[0m [0m[1m[0mid[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mmatch_t[0m[0m      = "AtleastOne"
      [32m+[0m [0m[1m[0mname_alias[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mpref_gr_memb[0m[0m = "disabled"
      [32m+[0m [0m[1m[0mvrf_dn[0m[0m       = (known after apply)
    }

[1m  # module.tenants["common"].aci_rest_managed.tenant_annotations["common-easy-aci"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aci_rest_managed" "tenant_annotations" {
      [32m+[0m [0m[1m[0mclass_name[0m[0m = "tagAnnotation"
      [32m+[0m [0m[1m[0mcontent[0m[0m    = {
          [32m+[0m [0m"key"   = "easy-aci"
          [32m+[0m [0m"value" = "1.0.1"
        }
      [32m+[0m [0m[1m[0mdn[0m[0m         = "uni/tn-common/annotationKey-[easy-aci]"
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
    }

[1m  # module.tenants["common"].aci_rest_managed.vrf_annotations["common-easy-aci"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aci_rest_managed" "vrf_annotations" {
      [32m+[0m [0m[1m[0mclass_name[0m[0m = "tagAnnotation"
      [32m+[0m [0m[1m[0mcontent[0m[0m    = {
          [32m+[0m [0m"key"   = "easy-aci"
          [32m+[0m [0m"value" = "1.0.1"
        }
      [32m+[0m [0m[1m[0mdn[0m[0m         = "uni/tn-common/ctx-prod/annotationKey-[easy-aci]"
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
    }

[1m  # module.tenants["common"].aci_tenant.tenants["common"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aci_tenant" "tenants" {
      [32m+[0m [0m[1m[0mannotation[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                          = "common"
      [32m+[0m [0m[1m[0mname_alias[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mrelation_fv_rs_tenant_mon_pol[0m[0m = "uni/tn-common/monepg-default"
    }

[1m  # module.tenants["common"].aci_vrf.vrfs["prod"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aci_vrf" "vrfs" {
      [32m+[0m [0m[1m[0mannotation[0m[0m                              = "orchestrator:terraform"
      [32m+[0m [0m[1m[0mbd_enforced_enable[0m[0m                      = "no"
      [32m+[0m [0m[1m[0mdescription[0m[0m                             = "prod VRF"
      [32m+[0m [0m[1m[0mid[0m[0m                                      = (known after apply)
      [32m+[0m [0m[1m[0mip_data_plane_learning[0m[0m                  = "enabled"
      [32m+[0m [0m[1m[0mknw_mcast_act[0m[0m                           = "permit"
      [32m+[0m [0m[1m[0mname[0m[0m                                    = "prod"
      [32m+[0m [0m[1m[0mname_alias[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mpc_enf_dir[0m[0m                              = "ingress"
      [32m+[0m [0m[1m[0mpc_enf_pref[0m[0m                             = "enforced"
      [32m+[0m [0m[1m[0mrelation_fv_rs_bgp_ctx_pol[0m[0m              = "uni/tn-common/bgpCtxP-default"
      [32m+[0m [0m[1m[0mrelation_fv_rs_ctx_to_ep_ret[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mrelation_fv_rs_ctx_to_ext_route_tag_pol[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mrelation_fv_rs_ospf_ctx_pol[0m[0m             = "uni/tn-common/ospfCtxP-default"
      [32m+[0m [0m[1m[0mrelation_fv_rs_vrf_validation_pol[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mtenant_dn[0m[0m                               = (known after apply)
    }

[1m  # module.tenants["common"].aci_vrf_snmp_context.vrf_snmp_contexts["prod"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aci_vrf_snmp_context" "vrf_snmp_contexts" {
      [32m+[0m [0m[1m[0mannotation[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m       = "prod"
      [32m+[0m [0m[1m[0mname_alias[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mvrf_dn[0m[0m     = (known after apply)
    }

[1m  # module.tenants["prod"].aci_bd_dhcp_label.bridge_domain_dhcp_labels["10.92.101.0-ad1"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aci_bd_dhcp_label" "bridge_domain_dhcp_labels" {
      [32m+[0m [0m[1m[0mannotation[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mbridge_domain_dn[0m[0m = "uni/tn-prod/BD-10.92.101.0"
      [32m+[0m [0m[1m[0mdescription[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m             = "ad1"
      [32m+[0m [0m[1m[0mname_alias[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mowner[0m[0m            = "infra"
      [32m+[0m [0m[1m[0mtag[0m[0m              = (known after apply)
    }

[1m  # module.tenants["prod"].aci_bd_dhcp_label.bridge_domain_dhcp_labels["10.92.101.0-ad2"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aci_bd_dhcp_label" "bridge_domain_dhcp_labels" {
      [32m+[0m [0m[1m[0mannotation[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mbridge_domain_dn[0m[0m = "uni/tn-prod/BD-10.92.101.0"
      [32m+[0m [0m[1m[0mdescription[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m             = "ad2"
      [32m+[0m [0m[1m[0mname_alias[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mowner[0m[0m            = "infra"
      [32m+[0m [0m[1m[0mtag[0m[0m              = (known after apply)
    }

[1m  # module.tenants["prod"].aci_bd_dhcp_label.bridge_domain_dhcp_labels["10.92.102.0-ad1"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aci_bd_dhcp_label" "bridge_domain_dhcp_labels" {
      [32m+[0m [0m[1m[0mannotation[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mbridge_domain_dn[0m[0m = "uni/tn-prod/BD-10.92.102.0"
      [32m+[0m [0m[1m[0mdescription[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m             = "ad1"
      [32m+[0m [0m[1m[0mname_alias[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mowner[0m[0m            = "infra"
      [32m+[0m [0m[1m[0mtag[0m[0m              = (known after apply)
    }

[1m  # module.tenants["prod"].aci_bd_dhcp_label.bridge_domain_dhcp_labels["10.92.102.0-ad2"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aci_bd_dhcp_label" "bridge_domain_dhcp_labels" {
      [32m+[0m [0m[1m[0mannotation[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mbridge_domain_dn[0m[0m = "uni/tn-prod/BD-10.92.102.0"
      [32m+[0m [0m[1m[0mdescription[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m             = "ad2"
      [32m+[0m [0m[1m[0mname_alias[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mowner[0m[0m            = "infra"
      [32m+[0m [0m[1m[0mtag[0m[0m              = (known after apply)
    }

[1m  # module.tenants["prod"].aci_bridge_domain.bridge_domains["10.92.101.0"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aci_bridge_domain" "bridge_domains" {
      [32m+[0m [0m[1m[0mannotation[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0marp_flood[0m[0m                      = "no"
      [32m+[0m [0m[1m[0mbridge_domain_type[0m[0m             = "regular"
      [32m+[0m [0m[1m[0mdescription[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mep_clear[0m[0m                       = "no"
      [32m+[0m [0m[1m[0mep_move_detect_mode[0m[0m            = "disable"
      [32m+[0m [0m[1m[0mhost_based_routing[0m[0m             = "no"
      [32m+[0m [0m[1m[0mid[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mintersite_bum_traffic_allow[0m[0m    = "no"
      [32m+[0m [0m[1m[0mintersite_l2_stretch[0m[0m           = "no"
      [32m+[0m [0m[1m[0mip_learning[0m[0m                    = "yes"
      [32m+[0m [0m[1m[0mipv6_mcast_allow[0m[0m               = "no"
      [32m+[0m [0m[1m[0mlimit_ip_learn_to_subnets[0m[0m      = "yes"
      [32m+[0m [0m[1m[0mll_addr[0m[0m                        = "::"
      [32m+[0m [0m[1m[0mmac[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mmcast_allow[0m[0m                    = "no"
      [32m+[0m [0m[1m[0mmulti_dst_pkt_act[0m[0m              = "bd-flood"
      [32m+[0m [0m[1m[0mname[0m[0m                           = "10.92.101.0"
      [32m+[0m [0m[1m[0mname_alias[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0moptimize_wan_bandwidth[0m[0m         = "no"
      [32m+[0m [0m[1m[0mrelation_fv_rs_abd_pol_mon_pol[0m[0m = "uni/tn-common/monepg-default"
      [32m+[0m [0m[1m[0mrelation_fv_rs_bd_to_ep_ret[0m[0m    = "uni/tn-common/epRPol-default"
      [32m+[0m [0m[1m[0mrelation_fv_rs_bd_to_nd_p[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mrelation_fv_rs_bd_to_out[0m[0m       = [
          [32m+[0m [0m"uni/tn-common/out-asgard-prod",
        ]
      [32m+[0m [0m[1m[0mrelation_fv_rs_ctx[0m[0m             = "uni/tn-prod/ctx-prod"
      [32m+[0m [0m[1m[0mrelation_fv_rs_igmpsn[0m[0m          = "uni/tn-common/snPol-default"
      [32m+[0m [0m[1m[0mrelation_fv_rs_mldsn[0m[0m           = "uni/tn-common/mldsnoopPol-default"
      [32m+[0m [0m[1m[0mtenant_dn[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0municast_route[0m[0m                  = "yes"
      [32m+[0m [0m[1m[0munk_mac_ucast_act[0m[0m              = "proxy"
      [32m+[0m [0m[1m[0munk_mcast_act[0m[0m                  = "flood"
      [32m+[0m [0m[1m[0mv6unk_mcast_act[0m[0m                = "flood"
      [32m+[0m [0m[1m[0mvmac[0m[0m                           = "not-applicable"
    }

[1m  # module.tenants["prod"].aci_bridge_domain.bridge_domains["10.92.102.0"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aci_bridge_domain" "bridge_domains" {
      [32m+[0m [0m[1m[0mannotation[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0marp_flood[0m[0m                      = "no"
      [32m+[0m [0m[1m[0mbridge_domain_type[0m[0m             = "regular"
      [32m+[0m [0m[1m[0mdescription[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mep_clear[0m[0m                       = "no"
      [32m+[0m [0m[1m[0mep_move_detect_mode[0m[0m            = "disable"
      [32m+[0m [0m[1m[0mhost_based_routing[0m[0m             = "no"
      [32m+[0m [0m[1m[0mid[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mintersite_bum_traffic_allow[0m[0m    = "no"
      [32m+[0m [0m[1m[0mintersite_l2_stretch[0m[0m           = "no"
      [32m+[0m [0m[1m[0mip_learning[0m[0m                    = "yes"
      [32m+[0m [0m[1m[0mipv6_mcast_allow[0m[0m               = "no"
      [32m+[0m [0m[1m[0mlimit_ip_learn_to_subnets[0m[0m      = "yes"
      [32m+[0m [0m[1m[0mll_addr[0m[0m                        = "::"
      [32m+[0m [0m[1m[0mmac[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mmcast_allow[0m[0m                    = "no"
      [32m+[0m [0m[1m[0mmulti_dst_pkt_act[0m[0m              = "bd-flood"
      [32m+[0m [0m[1m[0mname[0m[0m                           = "10.92.102.0"
      [32m+[0m [0m[1m[0mname_alias[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0moptimize_wan_bandwidth[0m[0m         = "no"
      [32m+[0m [0m[1m[0mrelation_fv_rs_abd_pol_mon_pol[0m[0m = "uni/tn-common/monepg-default"
      [32m+[0m [0m[1m[0mrelation_fv_rs_bd_to_ep_ret[0m[0m    = "uni/tn-common/epRPol-default"
      [32m+[0m [0m[1m[0mrelation_fv_rs_bd_to_nd_p[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mrelation_fv_rs_bd_to_out[0m[0m       = [
          [32m+[0m [0m"uni/tn-common/out-asgard-prod",
        ]
      [32m+[0m [0m[1m[0mrelation_fv_rs_ctx[0m[0m             = "uni/tn-prod/ctx-prod"
      [32m+[0m [0m[1m[0mrelation_fv_rs_igmpsn[0m[0m          = "uni/tn-common/snPol-default"
      [32m+[0m [0m[1m[0mrelation_fv_rs_mldsn[0m[0m           = "uni/tn-common/mldsnoopPol-default"
      [32m+[0m [0m[1m[0mtenant_dn[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0municast_route[0m[0m                  = "yes"
      [32m+[0m [0m[1m[0munk_mac_ucast_act[0m[0m              = "proxy"
      [32m+[0m [0m[1m[0munk_mcast_act[0m[0m                  = "flood"
      [32m+[0m [0m[1m[0mv6unk_mcast_act[0m[0m                = "flood"
      [32m+[0m [0m[1m[0mvmac[0m[0m                           = "not-applicable"
    }

[1m  # module.tenants["prod"].aci_rest_managed.bridge_domain_annotations["10.92.101.0-easy-aci"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aci_rest_managed" "bridge_domain_annotations" {
      [32m+[0m [0m[1m[0mclass_name[0m[0m = "tagAnnotation"
      [32m+[0m [0m[1m[0mcontent[0m[0m    = {
          [32m+[0m [0m"key"   = "easy-aci"
          [32m+[0m [0m"value" = "1.0.1"
        }
      [32m+[0m [0m[1m[0mdn[0m[0m         = "uni/tn-prod/annotationKey-[easy-aci]"
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
    }

[1m  # module.tenants["prod"].aci_rest_managed.bridge_domain_annotations["10.92.102.0-easy-aci"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aci_rest_managed" "bridge_domain_annotations" {
      [32m+[0m [0m[1m[0mclass_name[0m[0m = "tagAnnotation"
      [32m+[0m [0m[1m[0mcontent[0m[0m    = {
          [32m+[0m [0m"key"   = "easy-aci"
          [32m+[0m [0m"value" = "1.0.1"
        }
      [32m+[0m [0m[1m[0mdn[0m[0m         = "uni/tn-prod/annotationKey-[easy-aci]"
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
    }

[1m  # module.tenants["prod"].aci_rest_managed.tenant_annotations["prod-easy-aci"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aci_rest_managed" "tenant_annotations" {
      [32m+[0m [0m[1m[0mclass_name[0m[0m = "tagAnnotation"
      [32m+[0m [0m[1m[0mcontent[0m[0m    = {
          [32m+[0m [0m"key"   = "easy-aci"
          [32m+[0m [0m"value" = "1.0.1"
        }
      [32m+[0m [0m[1m[0mdn[0m[0m         = "uni/tn-prod/annotationKey-[easy-aci]"
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
    }

[1m  # module.tenants["prod"].aci_subnet.bridge_domain_subnets["10.92.101.0-10.92.101.1/24"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aci_subnet" "bridge_domain_subnets" {
      [32m+[0m [0m[1m[0mannotation[0m[0m  = "orchestrator:terraform"
      [32m+[0m [0m[1m[0mctrl[0m[0m        = [
          [32m+[0m [0m"nd",
        ]
      [32m+[0m [0m[1m[0mdescription[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mip[0m[0m          = "10.92.101.1/24"
      [32m+[0m [0m[1m[0mname_alias[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mparent_dn[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mpreferred[0m[0m   = "no"
      [32m+[0m [0m[1m[0mscope[0m[0m       = [
          [32m+[0m [0m"public",
        ]
      [32m+[0m [0m[1m[0mvirtual[0m[0m     = "no"
    }

[1m  # module.tenants["prod"].aci_subnet.bridge_domain_subnets["10.92.102.0-10.92.102.1/24"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aci_subnet" "bridge_domain_subnets" {
      [32m+[0m [0m[1m[0mannotation[0m[0m  = "orchestrator:terraform"
      [32m+[0m [0m[1m[0mctrl[0m[0m        = [
          [32m+[0m [0m"nd",
        ]
      [32m+[0m [0m[1m[0mdescription[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mip[0m[0m          = "10.92.102.1/24"
      [32m+[0m [0m[1m[0mname_alias[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mparent_dn[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mpreferred[0m[0m   = "no"
      [32m+[0m [0m[1m[0mscope[0m[0m       = [
          [32m+[0m [0m"public",
        ]
      [32m+[0m [0m[1m[0mvirtual[0m[0m     = "no"
    }

[1m  # module.tenants["prod"].aci_tenant.tenants["prod"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aci_tenant" "tenants" {
      [32m+[0m [0m[1m[0mannotation[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                          = "prod"
      [32m+[0m [0m[1m[0mname_alias[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mrelation_fv_rs_tenant_mon_pol[0m[0m = "uni/tn-common/monepg-default"
    }

[0m[1mPlan:[0m 18 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0mtenants[0m[0m = {
      [32m+[0m [0mcommon = {
          [32m+[0m [0mbridge_domains = {}
          [32m+[0m [0mschemas        = {
              [32m+[0m [0mschemas = {}
            }
        }
      [32m+[0m [0mprod   = {
          [32m+[0m [0mbridge_domains = {
              [32m+[0m [0m"10.92.101.0" = {
                  [32m+[0m [0madvanced_troubleshooting = {
                      [32m+[0m [0mdisable_ip_data_plane_learning_for_pbr = false
                      [32m+[0m [0mendpoint_clear                         = false
                      [32m+[0m [0mfirst_hop_security_policy              = ""
                      [32m+[0m [0mintersite_bum_traffic_allow            = false
                      [32m+[0m [0mintersite_l2_stretch                   = false
                      [32m+[0m [0mmonitoring_policy                      = "default"
                      [32m+[0m [0mnetflow_monitor_policies               = []
                      [32m+[0m [0moptimize_wan_bandwidth                 = false
                      [32m+[0m [0mrogue_coop_exception_list              = []
                    }
                  [32m+[0m [0mdhcp_relay_labels        = [
                      [32m+[0m [0m{
                          [32m+[0m [0mdhcp_option_policy = ""
                          [32m+[0m [0mname               = "ad1"
                          [32m+[0m [0mscope              = "infra"
                        },
                      [32m+[0m [0m{
                          [32m+[0m [0mdhcp_option_policy = ""
                          [32m+[0m [0mname               = "ad2"
                          [32m+[0m [0mscope              = "infra"
                        },
                    ]
                  [32m+[0m [0mgeneral                  = {
                      [32m+[0m [0madvertise_host_routes         = false
                      [32m+[0m [0malias                         = ""
                      [32m+[0m [0mannotation                    = ""
                      [32m+[0m [0mannotations                   = [
                          [32m+[0m [0m{
                              [32m+[0m [0mkey   = "easy-aci"
                              [32m+[0m [0mvalue = "1.0.1"
                            },
                        ]
                      [32m+[0m [0marp_flooding                  = false
                      [32m+[0m [0mdescription                   = ""
                      [32m+[0m [0mendpoint_retention_policy     = "default"
                      [32m+[0m [0mglobal_alias                  = ""
                      [32m+[0m [0migmp_snooping_policy          = "default"
                      [32m+[0m [0mipv6_l3_unknown_multicast     = "flood"
                      [32m+[0m [0ml2_unknown_unicast            = "proxy"
                      [32m+[0m [0ml3_unknown_multicast_flooding = "flood"
                      [32m+[0m [0mlimit_ip_learn_to_subnets     = true
                      [32m+[0m [0mmld_snoop_policy              = "default"
                      [32m+[0m [0mmulti_destination_flooding    = "bd-flood"
                      [32m+[0m [0mpim                           = false
                      [32m+[0m [0mpimv6                         = false
                      [32m+[0m [0mtenant                        = "prod"
                      [32m+[0m [0mtype                          = "regular"
                      [32m+[0m [0mvrf                           = {
                          [32m+[0m [0mname     = "prod"
                          [32m+[0m [0mschema   = ""
                          [32m+[0m [0mtemplate = "prod"
                          [32m+[0m [0mtenant   = "prod"
                        }
                    }
                  [32m+[0m [0ml3_configurations        = {
                      [32m+[0m [0massociated_l3outs       = [
                          [32m+[0m [0m{
                              [32m+[0m [0ml3outs        = [
                                  [32m+[0m [0m"asgard-prod",
                                ]
                              [32m+[0m [0mroute_profile = ""
                              [32m+[0m [0mtenant        = "common"
                            },
                        ]
                      [32m+[0m [0mcustom_mac_address      = ""
                      [32m+[0m [0mep_move_detection_mode  = false
                      [32m+[0m [0mlink_local_ipv6_address = "::"
                      [32m+[0m [0msubnets                 = [
                          [32m+[0m [0m{
                              [32m+[0m [0maddress                      = "10.92.101.1/24"
                              [32m+[0m [0mip_data_plane_learning       = "enabled"
                              [32m+[0m [0mmake_this_ip_address_primary = false
                              [32m+[0m [0mscope                        = {
                                  [32m+[0m [0madvertise_externally = true
                                  [32m+[0m [0mshared_between_vrfs  = false
                                }
                              [32m+[0m [0msubnet_control               = {
                                  [32m+[0m [0mneighbor_discovery     = true
                                  [32m+[0m [0mno_default_svi_gateway = false
                                  [32m+[0m [0mquerier_ip             = false
                                }
                              [32m+[0m [0mtemplate                     = "advertise_external"
                              [32m+[0m [0mtemplate_name                = "advertise_external"
                              [32m+[0m [0mtreat_as_virtual_ip_address  = false
                            },
                        ]
                      [32m+[0m [0municast_routing         = true
                      [32m+[0m [0mvirtual_mac_address     = ""
                    }
                  [32m+[0m [0mndo                      = {
                      [32m+[0m [0mschema   = ""
                      [32m+[0m [0msites    = []
                      [32m+[0m [0mtemplate = ""
                    }
                  [32m+[0m [0mtenant                   = "prod"
                }
              [32m+[0m [0m"10.92.102.0" = {
                  [32m+[0m [0madvanced_troubleshooting = {
                      [32m+[0m [0mdisable_ip_data_plane_learning_for_pbr = false
                      [32m+[0m [0mendpoint_clear                         = false
                      [32m+[0m [0mfirst_hop_security_policy              = ""
                      [32m+[0m [0mintersite_bum_traffic_allow            = false
                      [32m+[0m [0mintersite_l2_stretch                   = false
                      [32m+[0m [0mmonitoring_policy                      = "default"
                      [32m+[0m [0mnetflow_monitor_policies               = []
                      [32m+[0m [0moptimize_wan_bandwidth                 = false
                      [32m+[0m [0mrogue_coop_exception_list              = []
                    }
                  [32m+[0m [0mdhcp_relay_labels        = [
                      [32m+[0m [0m{
                          [32m+[0m [0mdhcp_option_policy = ""
                          [32m+[0m [0mname               = "ad1"
                          [32m+[0m [0mscope              = "infra"
                        },
                      [32m+[0m [0m{
                          [32m+[0m [0mdhcp_option_policy = ""
                          [32m+[0m [0mname               = "ad2"
                          [32m+[0m [0mscope              = "infra"
                        },
                    ]
                  [32m+[0m [0mgeneral                  = {
                      [32m+[0m [0madvertise_host_routes         = false
                      [32m+[0m [0malias                         = ""
                      [32m+[0m [0mannotation                    = ""
                      [32m+[0m [0mannotations                   = [
                          [32m+[0m [0m{
                              [32m+[0m [0mkey   = "easy-aci"
                              [32m+[0m [0mvalue = "1.0.1"
                            },
                        ]
                      [32m+[0m [0marp_flooding                  = false
                      [32m+[0m [0mdescription                   = ""
                      [32m+[0m [0mendpoint_retention_policy     = "default"
                      [32m+[0m [0mglobal_alias                  = ""
                      [32m+[0m [0migmp_snooping_policy          = "default"
                      [32m+[0m [0mipv6_l3_unknown_multicast     = "flood"
                      [32m+[0m [0ml2_unknown_unicast            = "proxy"
                      [32m+[0m [0ml3_unknown_multicast_flooding = "flood"
                      [32m+[0m [0mlimit_ip_learn_to_subnets     = true
                      [32m+[0m [0mmld_snoop_policy              = "default"
                      [32m+[0m [0mmulti_destination_flooding    = "bd-flood"
                      [32m+[0m [0mpim                           = false
                      [32m+[0m [0mpimv6                         = false
                      [32m+[0m [0mtenant                        = "prod"
                      [32m+[0m [0mtype                          = "regular"
                      [32m+[0m [0mvrf                           = {
                          [32m+[0m [0mname     = "prod"
                          [32m+[0m [0mschema   = ""
                          [32m+[0m [0mtemplate = "prod"
                          [32m+[0m [0mtenant   = "prod"
                        }
                    }
                  [32m+[0m [0ml3_configurations        = {
                      [32m+[0m [0massociated_l3outs       = [
                          [32m+[0m [0m{
                              [32m+[0m [0ml3outs        = [
                                  [32m+[0m [0m"asgard-prod",
                                ]
                              [32m+[0m [0mroute_profile = ""
                              [32m+[0m [0mtenant        = "common"
                            },
                        ]
                      [32m+[0m [0mcustom_mac_address      = ""
                      [32m+[0m [0mep_move_detection_mode  = false
                      [32m+[0m [0mlink_local_ipv6_address = "::"
                      [32m+[0m [0msubnets                 = [
                          [32m+[0m [0m{
                              [32m+[0m [0maddress                      = "10.92.102.1/24"
                              [32m+[0m [0mip_data_plane_learning       = "enabled"
                              [32m+[0m [0mmake_this_ip_address_primary = false
                              [32m+[0m [0mscope                        = {
                                  [32m+[0m [0madvertise_externally = true
                                  [32m+[0m [0mshared_between_vrfs  = false
                                }
                              [32m+[0m [0msubnet_control               = {
                                  [32m+[0m [0mneighbor_discovery     = true
                                  [32m+[0m [0mno_default_svi_gateway = false
                                  [32m+[0m [0mquerier_ip             = false
                                }
                              [32m+[0m [0mtemplate                     = "advertise_external"
                              [32m+[0m [0mtemplate_name                = "advertise_external"
                              [32m+[0m [0mtreat_as_virtual_ip_address  = false
                            },
                        ]
                      [32m+[0m [0municast_routing         = true
                      [32m+[0m [0mvirtual_mac_address     = ""
                    }
                  [32m+[0m [0mndo                      = {
                      [32m+[0m [0mschema   = ""
                      [32m+[0m [0msites    = []
                      [32m+[0m [0mtemplate = ""
                    }
                  [32m+[0m [0mtenant                   = "prod"
                }
            }
          [32m+[0m [0mschemas        = {
              [32m+[0m [0mschemas = {}
            }
        }
    }
[90m
─────────────────────────────────────────────────────────────────────────────[0m

Saved the plan to: main.plan

To perform exactly these actions, run the following command to apply:
    terraform apply "main.plan"
